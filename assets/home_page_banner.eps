%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: temp.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Halai Mikhail
%%CreationDate: 12/13/17
%%BoundingBox: 0 0 480 270
%%HiResBoundingBox: 0 0 480 270
%%CropBox: 0 0 480 270
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.2 x242 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=288 GradRes=144 Text=0 Stroke=1 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2017-12-13T12:27:57+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-12-13T12:27:57+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-12-13T12:27:57+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>144</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAkAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8t1zItrTODS5rxI5rOAr&#xA;DtG7s1R6gFSfkcskYgX0/SzGMy5J5a6Ra2kay3cnqmMbGQ/AgrX4Qfc5TPNKWzkRwiO5Q1/5kArH&#xA;Zivb1WH/ABEf1wxw97Xk1H81IpZZZXLysXc9WJqcvApxSSea0YULWcDpvgMkgLCSTvlZNsqdXFVO&#xA;Re+VzHVlEvS/Lmh+WdB0q31LzZqSXBukW4stFsm9SV1cVUyMDRAw/wCuq7ZtNPihjiDklz5RDy+q&#xA;12o1GSWPTQMeE1LJLYD3d/42Y1qMUl69xqdtZSQaYJfTRjykVC1WSN5SAC/HAY2b6O4xS4AISlc6&#xA;91+dJZJxTfxyEhTeDb6U8gfl1+Wvlry7aebdSvIb8SxJcR6lecUgj5ioEcRJHMHberV6U6ZfCEQL&#xA;eb1esz5JnHEV5Bjnn7/nJOVzJY+TYvTTdTq1wvxH3hhbYfOT/gRkJ5+5ydL2N1y/L9ZeE6nf3+o3&#xA;kl9f3El1dzGss8zF3Y+7NU5h5N93fY4iIoCgjrC6tygkcNNeVIA+03+x7AYYkfFrnE8uia6P5huv&#xA;Lc1xerYwSTXlFWVqlof5txSvL59swdbovGI4iRHqB1dv2V2sdKJcEYymfpkf4fc1qGrahrjsZnaV&#xA;HFPXl2UDwjQUp+AzN0+KGOPDAVF1uq1WXNPjyyMp/j5fBGeQ/LD6vf3Vs0qQ/VaF5D8UnFiRRF/t&#xA;yGo1QwjcWXJ0PZ0tXKhIRA5/2Mx85aD5K0vy3PBMY4L1k5Ws7/HcPIn2egrxJ2NBTNZg1ebJlEuY&#xA;+x6DV9n6XT6cx5SPIn6if1fY8hjhnnPwKSB1PYZu6MnkpSEea2WIxuVJr4MOhHtgIpMZWLWYGTsV&#xA;aYVFMBFpBWLGx9hlYgSyMlZFVRTx75fEAMLt24xQ7FXYqoyrQ17HKJii2RKmdsrZJ7omvi0tmtXi&#xA;R2f4IpJPsoGP2j/q5EYwZe9yMefhFIG+vbm5mb1pRIEYheP2NtqqMujEDk4+SZJ3Q2Ta2iwGRMqS&#xA;AplyflkDJlTsVdirsVXBCflhEbQS0q+m9R9+AR4Sm7Zz5e/MKSz8oap5WurVbux1Eq0DuxH1aXbl&#xA;Iooa/ZUgVG49zmwxZrFOp1Og4sscsTUo/axOVAHZa8gDQMO+RkHOidrdNf30trBZzXEklra8vq9u&#xA;zsY4+Z5NwUmi8iammUm+TIRF2BuVDAyaIqKYlK60upLWfmtDUUIPQg5UDRWUeIJvcQQGEveTc2cf&#xA;ABsor/Ko65aR3tEZG9glseoXEdusAfioP2h9qnhXIg1zbTAE2idL1vUdJvfrmnzGKbiyB6A1VhQ1&#xA;DVB8fngywjkjUuTfgzTwy4oGihrq8ury4a4u5Xnmc1eSQlmP0nDGAiKAoMMmSUzcjZVbW5Ib0uiN&#xA;06kBuxoOuXQl0cbJDa1S6i9RKgHmoqAdzTuKDpTJTFhhjlR8kBlLksl8tfl95j19PWt4RBaUJW5n&#xA;qiMewTYlvmBTLseCU3X6vtPDg2JuXcEjltJLaeSCdCk8TFJEbYqymhB+RxEKcsZBIWORWNGWNR07&#xA;nGUWQKwgqaZWycdxX7zhKtYFargtVrLyFMjIWEgrjaSNH62yRfEObVALKOXEU775TlIBcrFglKPE&#xA;do77nkSBde/9ahKIhIwiLNHX4SwAanuAT+vIC63Y5BHiPDZj0vY/p+9Fs7XMCuWaSeEBDGqbLCo2&#xA;YkeBy/isX1H3MSLCEZyem2VmTEBbkUuxVUSCVgTSgAJqxCg8RUgV6nfphl6TR5tkMUpCxy38uXd3&#xA;ny5rQCemSAtqteqAdd8mIsSV+TYrXWo9xkZC0grYn4t7HrkccqKZC0yPKeCu3KBd/Er/AGZncx7n&#xA;F+mXvQkg75TMNwKzK2TsVaePbkdqYyh1KiSxpWNBU7Cgr4ZUZdzIRWZFkrR8mqhDF16DsAOvXLI3&#xA;y6oIbybB2KpppNjqmt38Gm2IX15zRasEBKqSxLH/ACQctjxTNBxc08eGJnLkHqekflz5U8r2q6h5&#xA;kuI7q6XdVf8AuQw7JH1kPzH0DM2GmjHeW5ebz9q59QeHCOGP2/E9El80fmxf3POy0KM2VuKoblgP&#xA;WIG3wgbR/r+WCecnYOXo+xYx9WQ8R7un7WAtzkkaWZzJI5LO7Ekknckk9TlNO8AAFBN08uXCWLXl&#xA;9IljDxJhWX+8kamwVBvvmwHZ8hAzyEQHS+Z+DlDTER4pHhH3pDMm1e4zUyDSCog0PjkLZNEUPjgK&#xA;WsCuxVdLI8rFpDyYgAk+woMAiAKZ5Mspy4pGyhmFDTKCKSCujmljDBHKhwVcA0qD2OIkRySswK7F&#xA;VbjDH1PqyEbBahRySoNdjVWPSmAE3ts5BGOHP1H7N47b87B6VWy+VpJh6jnoasBQLU06AUA6ZmSx&#xA;cUeOj/SJ73HyZ5SO/wCofIbIjTNL1DU7lbXT7d7iduiIK0HiT0A9zlGTLDHG5GgywafJmlwwBlJ6&#xA;h5a/KSxs4xfeY5llKDmbVW4woBv+8fblT2oPnmg1XbEpHhxD49fg9n2f7MQxjj1BuunQe8/ge9JP&#xA;PCeTNQ1CO7025SGC3X0LoQqFRygHD0gOtF2qBTpmVoZaiEeGQsncX+lwO1oaPLkE4SEYx2Nda5V/&#xA;Ywq/lspJwbOEwwqoUBjUsR+0c22KMgPUbLzeonjlL0CooF1ofY4JCmsFE2kwVlLDkFO6nuMyMM2r&#xA;LHZfIULsUBCE7A+GWFhG63UjGa+A8cr4GziXNxUAoCR0JPjl2SAERKAPD3nvQLPNUWwu3tGvCnG3&#xA;XYSOQoY1oQlacyO/Hp3yjhJFsDmgJcF+r8c+74oUlI+gq3ie2UnZu3LINBvPL1lZfXLkc79WI4Ec&#xA;mr1BQdBt3OdP2PqdDp8Pi5BeYHlzP+b0HvLtNLPDCHEfqSbU75L2/lukiEIkNSgNfmSffNFr9WM+&#xA;aWQR4eLo4ebIJyMqq1I0NCKDluFBrTKAWghesRPXYZYINZkmmm3U8LxS28ggmtWWSKQfaDKaqfvz&#xA;Jhy2cTNAG7FiSN1DUtT1Wb67eTPLOK83c12PVVXoB3plhJO7ViwwxjhAoIK4jQUeOrL+03v88jId&#xA;zfjJ5FDkgdcgTTa3PdzzsDLI0hUBVLEkhRsBvgyZpS5m2ZJPNRylVB14t7dsgQyWYEuxVVikiRam&#xA;PnJuPiPwcSpHQUPIE1G+RIJbseSERdXLfnyoiuXOwdxv8FqRSOrMillQVcgVAHvkwCWmlGVaivcZ&#xA;XOLKJUspZsosPy58x3Wmz37w/V1jjLwwSVEspG9An7P+yzV5e18MZiAN77noHf6f2b1WTEchHDQs&#xA;A85fDp8WMiM99s2wjbz5K8ADplgFMbZz5A/L1PMKG/urpUsI3MbwxmszMBWhrsg3675r9X2p+Xlw&#xA;iPFIjryeh7G7C/NjjlKoA8h9X7Gb6l5p8meSLdtO02FJrtNmtrcgnkO80prv86n2zTx0WfUTuZ9P&#xA;f0+Aekz9paPs+HBjFy7h/vj/AGnyeYeZfOuu+YHIvJuFqDVLSKqxDwqP2j7nN/pdDjwj0jfv6vGd&#xA;odr59UfWaj/NHL9vxSEAk0AqczHVqhgYIWJ3HbJcKaUmFRTIEWoKyPkGqO3XK4WCyPJGDiBXqczh&#xA;Tj7qsFjd3zFYE5cBV3JCog8XdqKo+ZyJiZcmE80cYuR/WfcFcHTbAhU46hdfzsCLdD7IaGQ/61B/&#xA;knLMVXw/VfLuB72usmTn6I/7I/Hp8N/MIK8vbq6mMlxIXb7I8AB0AHQAdgMoyXxEHo5GLFGAqIpS&#xA;YepFQL8UYJr/AJOVSFhmDRQ2Utraipp0wgWpRMZ4LxABqak98yIelrJtXVC2/QZeA1K8NI3DAVp4&#xA;5MbMZCxSNcqCskhBSTqi/h88sJ6loA6DotZiAY3PpxEEqNq08MiZdEgdRuUtY7neo8cxiXKDWBLd&#xA;MaQ068l9x0xIVDnIM2sCuxVkN7r1nDA1npsK+kQVZyPhNdjQdT8zmbk1EQOGAb5ZABQY9mE0KTRn&#xA;lt07HKTDdmJM1l/M/XP0PBYwBYrlE4T3x+KR6bAqCKKadTvv4ZqYdh4RkMzuOgemye1eoOCOOO0g&#xA;KMuZP6vt+DDmZnYuxLMxJZjuST3zdAU8wSSbLWKEdYa3q+n29xb2N3JbxXYAnWM8eQWtNxuOvbKs&#xA;mnhMgyFkcnJw6zLijKMJGIlzpCuGA4vVXXbiRQ/TmdP6altKPSnGIIK6OBm3bYfjlQitKheOIUUV&#xA;OGwErFWadtvs1AZjsi8jQFj0A+eVznXNsxYZZDty236C9tzyA97mWAJwWskr8fi+yFNSCvflXbfB&#xA;ESkWUxjjGh6pGt+QjzsdeLpvt7mltp2nEEaGSZjxWNAWJJ7ADrlssZjLh6uLKYAsmgj47Wys/wDe&#xA;5/WnHSzhYbf8ZZRUL/qrU9jxOWRAHNxTknk+gVH+cf0D9Joe9Zc6lczoIqiK3XdLeIcYx706k/5T&#xA;En3yRmSyx4IxN85d55/jyGyAdaH2OUSDkgttQqDsCNqD9eXZKlES2BG1D71DSsVNQaHMdJCy4jVX&#xA;+A1Rtx4/Tlc40WUDYWKrN0+/IAMkZDHyWtKkbnMmJ2ajE9ETbo8jiNBVj0zIhvs1TIAso82EUcLG&#xA;Rxzpseig/wActMQA43jEnYIOObjGysoYtsD7ZUDtu3yjZtY7u/2jWnTFIACkVocqIbLbCeO2GkW1&#xA;gSj9N0S/1APJEqx2sX99dzH04Y/9Zz39hv7ZRl1EYbHmeg5ly9NosmayNojnI7RHx/RzQ+s2+kwP&#xA;HHp88l0QD69wy+nGzdvTU/FT3br4DBjMzvIAdw/WupjhiQMcjLvNUPgOfz+SXoju4RFLO2wUCpJy&#xA;wC3HT2x8tUT6xqMghiXcx1ANP8pugzLx6XrLYN0cXUpCAT0zEAaEbpuk3+o3K21lA1xM37KDYDxY&#xA;9APc5fh08pmoiymMZSNRDL7ryJo2kaRLP5g1AR38kbfVbaHej0+HanJ9+vQe+bWfZ2PHjJyy9VbA&#xA;fjdzPy0ccbmd2AZoHEdirYoSATQdzhHNLKYE0LSEWRSLy7IDK2xAr0p2X9ednj/I6CIkP32Xn+Ok&#xA;ftLto+DgF/VL8fJJ9QvRc3TXMqqsjUFFHYbDOb1+sOoynJIAE9zr82XjlxFBPOzbDZcwTJpJWKQG&#xA;BI5AGpU139tsBWJAIJFolUnuDGtPSgY+nGaHiKsW416nc98Ywpnl1BltyA5Ad13Xedz1so+1itbO&#xA;/jRv3yuVVnFOSNXeldq0ywUC4kyTE1zVdYujCpjs1jtIpBSVIzWaSvX1JNiR7Ci+2XzkDDahXzLV&#xA;jw2bn6iPkPcP07nzSIGhrmKC5aqDUVy4Fg5hUUxItQVMFlqOnY5GGSULrrsWZDo0eR1RByZiAoHc&#xA;nIAXsqLismdzaSjjLX4a9mA6fTk/D6FhOXDuoGLgxRh8Y24DxptmO37AWU703QnkCy3TcIj8QiXr&#xA;v4ntmVhw9S6/U67+GLWqW8NtdJLZkBBQECpAI/qMulGjYYYJmUakqRrB6a3E78ydxy6D2C5aAOZY&#xA;SMr4YhDXsbOfrCxlENBU9T70yExe7bilXpvdC0yDe6lQR38cSLQq2Nhe39wtvZwvPcHcKgqaeJ8B&#xA;75RkyRgLkaDfhwTyy4YAyJ6BNWtND0n4r1xql+P+PSFqWyN/xbMu7/6se3+VmIZ5Mv0+iPeefwHT&#xA;4/J2IxYNP/eHxcn82J9I/rS6+6PzS7U9a1DUSguHAgi2gtYwEhjHgka7D59cuw6eOPlzPM9T8XF1&#xA;OsyZq4j6RyiNoj3BAMARTLnFVNM1KTTp3kVBJyUqVO2/Y1w4spgbbYT4VO+1K8vX5TvUD7KDZR8h&#xA;kcmWUuaymTzRWgRaVPqdvFqkjQ2LtSaRKVG23UHavXL9MISmBPaKMYiZDi5Mv1Hz9p2mWzad5UtV&#xA;t4Rs14y7sRtyCtuT/lP92bXL2jHGODAKHf8Aj9Llz1cYjhxivNgt5f3F1O89zK087mrSOSxP0nNL&#xA;kzGRsmy4RuRsoUmprlBLJrArYBJAAqTsAMVTu+8reY9M0eLU7y0a3tJ34IX2cEioLL1UHtXMfFrc&#xA;c5mETZDn5uzs+LEMk41En8e5IySd+p8cyHAdirYwhU4hmW7sys8ojVKLwUfEWpsf7BlnMNRFHZdF&#xA;yuLQwvxt1hoHJFG5DcHtxx5hB2K60LXFsYo0WNhtNK255eIHXfxOWYpmJ22U7FFaX5Iv7pxJc1tr&#xA;Qn4Sw/eOPZe3zOCeOjt9LXPUgctyjdam8r6fpsul20YluWp8aUZldeheQ/qH4YggbNcBOR4jyYrG&#xA;7RyK6GjoQyn3G4ycJmMhIcw5cTRsKuoSm7u3uWRYjJuyr4067+OWa7P42U5KEeLubMubjkZVSkoC&#xA;/Z2p3zFDWnFnpUl+qXCUt1joJHZi0jt15AHMgQ4t+TTqM4jG6tMLi0sLaJgBynfcv1cn3wzgB73X&#xA;wyTkfJLotQLsbdmKItaA7VI6jK4HoXJniocQ5qqlrxfq1tGZORoGoaV/yabk5cJAimMYGMrPPu6t&#xA;NYXGl3Cx6hCUd15RV+KlD7V3yGHJEk+Tk6rBOIF7WqMs9wCGHpQnt1Y/0zIolwgRDzKVSoY5GSte&#xA;JpUZQRTmxNi04XQ7awRZtdmNsSAyafFRrpwdxyB+GIHxff8AycwJasz2xDi/pfw/t+HzdvHs+OIc&#xA;WoPD/QH1n/ifjv5L5NTvr6A2unwrpult9uGKtZB/xbIfjlPz29hhx6UXxyPFPvPT3Do4+p7TPCce&#xA;MeHj7hzP9Y8z93klN/bRW0gRZPUqPiHcHMk7OBjkZBB5FtdiqlKv7X35EhIUsgycJFQ79+2ImAvD&#xA;bTSMfYYmRKgLcil2Ksj8r+Qtf8xMHtovQsq0a9mqsfvx7ufl9NMwtVr8eHmbl3O17P7Hz6reIqH8&#xA;48v2vW9D8leU/KFr9fuXR7iIVk1G6oOJ/wCKwdk9qb+5znc+uzag8I5dwe10nZWm0UeOVcQ/il+j&#xA;u+9hvn380rLVLG40fS7YTWs3wy3c4IrQ1BjTYjcbM33ZstB2VKEhOZojoP0ui7Y9oIZoHFjjcT/E&#xA;f0D9J+SR+RPys82+c5gdNtvR08Nxl1KeqQLQ7hTSrsPBfppnQQxmTxGp1kMQ3O/clfnTynf+VPMV&#xA;3ol6eUts1FlAoJIzukijwZTX26dsZxos9PnGWHEEjyDeibK5a3nEgAO1DX3yYLGQsJoyRLewyySr&#xA;IWIE5p8CKdg+1aU98l1a+jNZrfy35YKXt7ItxdygVjWjOaD4SiVp9JyZoOEDPJsOTFPMXne91Yuk&#xA;Sm0tz8Kojblf8tv4DbE5AY0efRysWnEfNjiozew8cqAci1dSFGw38ct4mFIi3sppyGPwRmlXP8pN&#xA;CVBpyp7ZC75NogAAZHhj9tXVgdaTCK0t4k+yGbYs7b7iu48OuWRg4uTUWOGIr7/2e5dDqq281IuJ&#xA;Ljg0jiqqG2LD3GWwlRa4Yr5qss0KuUgrOx6EbVHiSemWkgbDdpljIO/JVt/J+qXbLdTcYIGPxMR9&#xA;3Fe/zOazU5xDzLt9DpJZRX0x7yyZdQ0bRIvTs4w90Bxdti9fAn9n/PbKoHLn35Rcqf5fSbfVP7fi&#xA;ejGPMep3N88cssgqpJSMdq9/Htmxhp44xtzdXPWzzn1D0jkh4ZJLpOTvxQbMidSfc5eDbhSAgdhu&#xA;g9Qe1PFIaBl2PHpT55TlkOjfgEuZXWQseDT3Lc5AfsNvX3p3yoAM8hkTs641aaSqRfuo+m32j9Pb&#xA;JCW+6I4QOaANa75Eim5GadpF9qD0t4/gH25W2RfmczNJoMuoPoG3f0Ddh088nIJiZtE0cfugNRvh&#xA;/u1v7lD7D9rNj4ml0n0/vsvf/CP1/jcOTxYsXL1z+xILm6aaWSQgBpGLNQUFSa7DNFlymcjI8y4c&#xA;jZsoc5UUIY5iluVEao9xlsTbAhMtF0DV9auvq2m2z3Em3MjZEB7ux+FR88rzaiGIXI05Ol0eXPLh&#xA;xxs/jm9c8q/lBpOmhbzXHW+uV+L0elulPEH7f+y29s0Gq7VnPaHpH2/se07P9m8WL1ZfXLu/hH6/&#xA;xsu82fmzomjKbPR0W/ukHAFDS3jpsByH2qeC/eMpwdl5Mnql6Y/a2a72hw4RwYvXIf6Ufr+HzeSa&#xA;15j1rXbn6xq100nUxRdEQHskY2Hz7+Ob/S4IYhwwDxmt1mXUS4skr8ug9wS8vtRBxB6+J+ZzLpwb&#xA;eh/lp+cfmDybpN9o9jZrqJvHEmnpIWIhmI4seCjk4eg+EEbjLBm4Ab5ODqOzRqJxq75bcynB8qeY&#xA;/N9/+m/Od25ndQBAOIdUUlgm3wRICSaDfc9Dmj1vbsfpxDil39Htex/Y2UQJZvRD+aOZ9/d9/uY3&#xA;5/ufJqWUGl6PGv1qzc/vYACgBFHV5Du5NBvv88j2Xj1PGZ5DtLv5/Lo2e0GbQ+HHFgA4oHnHl52e&#xA;v2+9gwzeB5NGJqMqWZtlVaGoL07H2yV7MOHe0MTJI1WJZthUmuwFBiy5L1iA67nCAi1+FCM0+COR&#xA;+bGrIQQnbJRiC1zyygQQjZ7yOPb7TDoi7Af0yzYNFSmbKBeae4bjua9EXpjzbRERUTt12wM2beRI&#xA;nnRrq+jVLCD92t/c0S3ioKgA0rI56cVBbpk5xnkx+k191NUtfp8OQDJ651tECz8unvOy3zB5iknk&#xA;niinpaBmVJhVGdegYA7rXw65iw0UY7yPF9zk5O1smQAQHB9p+f6mIW8sscpi58FkP2iN/YivjlsT&#xA;WzRkiJC+aO9W0t1ZGPJm2YndjXxy7xIx2aY45z35BLfUIVlQkK1K7+HbKbcsgLMCuxV2KpvZQ6JB&#xA;apeXspuZWqVs49twafGf8/pzc6bHpYYxkynjl/NH6fx83LxRxRjxSNn+b+tDan5iu7xPRSkFquy2&#xA;8XwoB7065jaztTJmHCPTj/mjl+1jl1Mp7co9wSksT1zWNC0kAb4CaWlNpSdhtlRn3MxFu3s7q5lj&#xA;ht4XmmlPGKONSzMfAAbnKZyERZNBuhinIgRBJPJ6b5R/Jq4lKXfmGQwxdRYxEcyP+LHGy/Jd/cZp&#xA;dR2xW2L5/qer7P8AZgy9Wc1/RHP4n9TNtX82eTvJdkLGBUEqD93p9sAXqR1c/s18WNT75iYdLm1M&#xA;uL/ZH8fc7nU9oaXQw4BVj+GPP4/t3eTeaPzB8xeYi8ckn1TTjt9ViJCkf8WN1f8AV7ZvtNoMeHf6&#xA;pd/6u54zX9s59TsTww7h+nv/ABsxglQKIKn+Y/wGZpFupBrkts7K+vryO1s4JLq7lakcEKtJI7eC&#xA;qoJOVgG6CzmALkaDRDAkMCrA0ZTsQR1By0FiqW881vPHPCxSaJg8bjqGU1BwTiJAg8izx5JQkJRN&#xA;EGwyLWfP3mDWR6Esq29owAa3iqqE+LmpLfLpmHo+zsWA2Bcu8u07U7c1GrFSPDD+bHr7+/7kguYw&#xA;pDFuTH7VeubGQdJjlayLditB8W3I9vfJ4SLo1v1PRtC9YRU8jWnhjwgGmJK+lNumNMXYFXBScICL&#xA;VI+Sn4CQx226mvbJgUxO/Nnflj8p9Uv4RqGtyjR9KUcmeagmZf8AJRvs18W+45mYtITvLYPN9oe0&#xA;mPGfDwjxcnly+fX4fMJXB5du21CfT9LDXojd+M8a8AYgTxd2agRabktTAMZBobuZPXRGMZMnoscj&#xA;39w7/g1d2/lzQ5DLME1vUq09FC31CFx/O4o059lovucrmIQNn1H7P2rinqNQKF4cff8Axn3DlH42&#xA;fckWq67qmqTJLezl/SFIIlASKJf5Y41oiD5DMeeWUjZLstNo8eEVAc+Z5k+88yuhntjELiZ+b1p8&#xA;XY+CrkhMVZRKEr4QNkDe3azyq6rTj3PU/PMfJPiLk4cfAEOXYmpNSOmVtpV1aormQDbUQ3hV2KrW&#xA;dV+fhgJWlIyMT7eGIlRTS00HfBIUUqbSjov35UZ9zIRUySTU5UTbNrFU88qeYpdA1+31MVkCnjcx&#xA;j9uJ/tj59x75Tq9NHLjMTz6e9zuz9fLBnGX5+Y6sn82fnBq2ol7XRgdPs22M1R67D5jaP6N/fNZp&#xA;uyYx3yeo93T9rue0PaTJl9OL0R7/AOL9n43YGJAWZpGMsrEszEk1J6knqTm5gdqeZnzs7lzMzHf6&#xA;BltMCXpnkP8AIbzT5i9O81MHR9JajCSZf9IkX/iuI0Ir/M1PauX49OTz2dRq+18eLaPql9nzetXO&#xA;o/lV+UOntBAgOqOg5RJSa/m2qDI5pwU+/FfAZkEwxDzdNGGp1srP0/7EPmnzRrtvrnmS/wBXgsk0&#xA;+K+lM31SNi6ozfaPIhalmqx2G5zXGdyJ5W9XgwnHjESeKuqW5JsdiqLiaP0jyX4m2bxP05YOTVKJ&#xA;tYqhemNM1ZiXUNUlxsQBsAMyZkzjxc5Dy6JO62hIqPpOVVbFsKB13xEWNsl8q+QfMPmSQNaQ+jZA&#xA;0e+mqsQ8ePdz7L9NMycOnlPlydT2j2zg0g9Zuf8ANHP9nxZ7pI8h+UpzbaYo17zLHRWnI5KjnakY&#xA;HIA17JVuxOZkBjxmh6pPNan87rRxZP3OnPTvHn+2h5JZ5k1K4GpJd+atRcuf7jQLUrzU/wDFh3SA&#xA;Gu/Kr+2V5Z1K5H4fjk5egwR8Ph00B55Jcvh1l8KixjX/ADLqV7b/AFe2VbHTozyOn21QjAftTPXl&#xA;K3+sflmPlyyI22Hc7jRaDHjlxS9eQ/xS/wB6OUR7kiur63MPD7bMNlX4VXMeeUU7LHhldpYWJzFJ&#xA;tywFW2s7q5l9KGMs/fsB8yemX6bS5M0uGAstmPHKZqItMrnR7SwhikvJucnNTJbxkAmOvxBSQd/c&#xA;7Zsu0OyBp8FmY8boOn6/js5ctNDGAZm9xYHd1pS8xaZb6fqTR2komspkWe0kqCfSkFVDU6MOhznN&#xA;JmOSFyFSGx94T2lpY4ctQPFCQ4on+ieV+aXxtQ07HMyBp10gqlgBvlzBSaUnpsMiSmlmBKxpAPc5&#xA;AzASIqbOzdTt4ZXKZIoswKW5FLaqWNB4E7kDpv3xSBa+iioUczuOR6UI7DxxAtkTGPmp4sHYFXxQ&#xA;TOCyrsN64YxPNjKYGxfS/kDyt+U/lPyrYeb7y7jvJrmNZob+7ALLJT4o4LdeVHRgQacmB70zZ4oQ&#xA;AEnk9ZqNTmyHEBQHQfpLGPPf/OQWq6nby23lgNpdmar9den1p/8AV6rFX2q3eowTzWNtnJ0nZEYS&#xA;/eeo93T9rxSeaaeZ5p3aWaQlpJHJZmY9SxO5OYR3ehAAFBuw0y/1C7W0sYHuLh/sxxipp4nwHucx&#xA;skhAXI0HIxYpZDURZegWPkXQPL9sl/5xu1aYjlFpUBqzf6xFC30UX/KzE/N5M3pxD4l28ezsWnHF&#xA;qDv/ADR+P2ebCb36k17PJZxtFatIzQRuasqE1VSfYZtccSAL5ujyyiZEx2jeylk2t1K4qqxDifiJ&#xA;4n7SjuMvxHhO/LqjiVGQo1CKA7gexyc4GEtwxLNfK0P5d6bpEeta7cNqOoFmWPRlXZWQ7c1r8QIo&#xA;asQvahOX4xiiOKRs9zznaMtflynDhHBD+f8Aq7vhv5hrXPzR1TWoXthx03TVAWOytzSqdgzAAt8t&#xA;h7YJ6wz8gnR+z2PTkS/vMn849/l3fexew1XULfUxc6ZI9tM6mFpI2CMVcUI5HZajMM5+E8Q2d9/J&#xA;4zxGOQE9+vK+nPZ2ovaiIEzB2dRIONS3IivxlvDDOYrdEcXDIcJsV5ivL4fJLpr24kjVCeEdNgNq&#xA;9t8ollJ2b44BHdRhRHlRHcRozANIQSFBO7EDfbIBnI0Hv/lzyJ5J8oWKaxf3EV1KoVxqNyVEYqKj&#xA;0UqQK9ureBza48EMYs/N4jU9pajVT8OIIH80fpP4DzPz15v0S61y6l8rwNb2U7c3d0CkyH7bIu9A&#xA;x3+Lf2GZJ7bljxeHiAj/AEvx973ei1GTHgjCgCGFySPI5eRi7tuWJqTmjnOUzcjZLEkk2VpIHXII&#xA;U2l/l+/ASmlyOWG/XvlsZWwIptzw2YEGgIB60IqMTILwlSaQn2GVGZLMRWZFLsVdiq/iBu33ZLhr&#xA;mi2i56DYYmS0tyKXYqibWRifSL8EO9e/yr2ycD0asketIiK4dHEEbFoTtEWJKqepA+eWQlRoNco2&#xA;LPNeqendKoHrSSbKqj4uZPQD3ye0SgXMbMw078sbj0f0t5muE0fTPtMjECZvbfZSfff2zW6jW71j&#xA;HFL7HeaPso8PFmPBAd/P9n3+TWp/mFpuk2j6b5Ms1tIqUk1CRayv/lANU/S/3DMcaGUzxZTZ7nJy&#xA;dqQxDg08eEfzuv49/wAmDvfXV1cPPdSvPPIavLIxZj8yc2GKo7Dk6XLIzNk2V+ZLSuCE9dskIoJV&#xA;AAOmTAYro45JHWONS7saKigkknsAMIBPJQL5LZeccjRupR0JV1bYgjYgjIyJBpPD3qZJPXIk2lUh&#xA;NuvxzEkKVPpDbmK/EOX7O3scrmT0bsPBznZqtu/fffpt5FbJdyuhjT4I6Dkq/CG41oWA+0Ry65DY&#xA;G2ZyykOEbR7htdXRPed+agSoJp8R/m+nqMDGwOTRJJqcWJNtYoRN1qWoXcUEN1cyTRWqCO2jdiyx&#xA;oOiqDsBkjInm1wxQiSYgAnn5obItixpAOm5wEppSZi3XI2lH6PoGq6xP6NhA0lPtyHaNP9ZjsP15&#xA;j6jVY8IuZpzdH2fm1MuHHG/PoPeWdW3lryr5ThS816dbu+IrHbgclqP5I/2v9ZtvlmklrdRqTw4R&#xA;wx7/ANv6nq8fZej0ERPUy48nQfqHX3nb3MW8wanP5p1kTWVj6ZVBGAu7FQdmkbZRmz0uEabHU5X+&#xA;OjoO0NTLX5+LHCtq/t6JjY+VNPsIfrWryq3HfgTSMex7scx8uunM8OMfrc3B2Tiwx48xH6P2sTvB&#xA;bC6lFqxa35H0iRQ8e3XNrj4uEcXN57MICZ4PpvZTCdzsMtEWm2+QGy/fh4q5LSzIJdirsVdirsVR&#xA;4L3MO1EVe/fkP1ZbvIONtA97MvKvnDQtG0INZaSJvMZZlkvJjWNB+yyn7XQ04rT3OYuXTzzGiag7&#xA;bTa7FpoWI3l7z3Mf1zzFqOtSNcavcvPcCqpGdkj9o0FFUfrzKxYYY40A4Go1OXNO5Gx9iR4oWcGD&#xA;VHTKzE2ytNILO6ayN4IJDaK4ia54n0w7AkIXpx5UB2zIhIcurCUJVxV6WgpPTLwLaiVrniadTkZG&#xA;kgWmOn+YbzTrN4bKOOG4kJ5XwWswQgDgrHZR8stx6qUI1Gge/q3wymIofNLHd3dndizsSzMxqSTu&#xA;SScxib3LWsqWYKgLMxoAN6k5G7NDmkRtGX+g6rZWcV3dwmOOVuIB+0ppUch2rmVqezs2LGMkxQP4&#xA;3ciennCIJHNLswGl2KuxV2KrWdV69fDElVJpGb2HhkSWVLcCuxVkml+e9Y0zQ/0XZqiFWYpckVZV&#xA;bcgDpWtdzmtzdmY8uXxJfJ3ml7ezYNP4MKG59XXf8c0ljuVudQSbUpJJlkcG4kLEuR3NTXM0w4YV&#xA;AAdzq45OPIJZSTZ3PVlV55m0nS4fqukxJI4/aX+7B8S3Vz/nXNXj0eTKeLIa+/8AY9Bm7Tw4I8GE&#xA;A/d+38bsWvdQvtQl9W6lLn9kHZV/1QNhm2w4IwFRFPPajVTym5m0PVV6bnxy6wHH5rSSeuRJtNKl&#xA;vbT3DlIU5ECrHYKo8WY0Cj3OGEDI0EgEoitjadKXlwO+4gU/LZpD9w/1hlvoh/SP2ft+73sth5oN&#xA;iSST1O+woPuGUFg1irsVTC20PUri1e5SIiJF5AtsWA/lHfMvHocs4GQGw+33NscMiLQkDor0k3jP&#xA;UdvuzFie9x5gkbc17XdJWMPwKwAP0d8kMlHZiMe262jMfE9zkwLZcl6oO+5yYixJTODSKrzuDQdQ&#xA;g/ict8O+bhz1PSLILHz/AA6d5V1Pyq1ol7Z3xDQlmKi3lHV1puxqqmleo775hZMUfEjMGiPtdlpN&#xA;VkjhljkLjLlfRjPLkNunhmwu3Epa61Fe4yEgyBUSwHzykypmAplicgZWyAcjsjB1JVlIKsOoI6HA&#xA;CQbHNINJnq3mTVdUVY7iSkK0/dIOKkjufE5sNb2pm1AqZ9PcG/LqZ5NjySvNc0OxVsKaV6LUKWPQ&#xA;E9N8VTCTTreG2Zp5aSEfCewPsOpyZiAGkZCTskzBgxDAhhsQeuUuQ1irsVXrGe+2TEEErwABTJgM&#xA;bUyp5UGVmO7K26KvXc+GGgOa3bRYn5eGRMrUByI7uERSzsaKoFSSewAxAJNBki/qlvbb3rlpR/x6&#xA;xEch/wAZH3VPlufEDLvDjH6+fcP0np9/uZcIHNSuL6aZBEAsVupqsEYogPSp6lj7sSchPKZCuQ7k&#xA;GVofK2LsVRen6Xe38nG3jJA+1IdkX5nMjT6WeU1EfqZwxmXJkcWlaLosYnv5BNcdVUiu/wDkp/E5&#xA;uYaXBphxZDxS/HIOWMcMe8uaWap5pvLqsdvW3g6fCfjI927fRmDqu1J5No+mP2tOTUGXLYJIKk0A&#xA;qTmraE1h0RYQsmqSG3DUMdog5XLg9KJ+wD4t9AOZ0dGIC8p4fL+I/q95+1s4K+rb700fTJ7q04RW&#xA;8dlDHVoYac5nNOskh3r9w9hkMmsiajGIER8/iev3JlhMhyofakR+E/Fse4w24dLpbyeRFjLngooB&#xA;8vHImZLGOKINoSRaHkO+UTDfEoq2mBWhO+X4sm1FrnFVLk9NssMmICg60Pscx5CmwFbkUuxV2Kqt&#xA;raXV5cR21pC9xcynjFDEpd2Y9lVaknCAiUgBZ5Pa/IP/ADjdqF00V95vkNlamjDTYWBnb2kcVWMe&#xA;wqflmRj0983SartgR2x7nvZL+bN3+V+m+SrvyXYW0X1wUe0t7MA+hcp9iSaU1+L9lqkuQfeuTyiP&#xA;DTjaHx5ZRkJ28+o8vxT54064hVT6qNJeIeKruzUHhXpTvmLE/N6DJE9OSlqtrcf71uqryNGRd6eF&#xA;TkZg82WOQ5JeqE/LIiNthK8KBlojTEldhQuCgbtt7ZLh70WtkNRRdqZGZsbJChlDY7FVeK8nhiaO&#xA;I+nzrzdRRypFOPLrx9h175OOQxFDZkJEKGQYtgEmgxAtbcylTQ4SKUFrArJtQ81pGn1bSoxHGuwl&#xA;Kgf8Cn9c3eo7VAHDhFDv/UHLnqa2ixuWaWWQySuXkbdmY1J+/NLOZkbJsuKSTzRlno9zPF9ZmZbW&#xA;yrQ3MtQpI6hAPidvZR88yMWklMcR9MO8/o7/AIM4wJF8gnWn23Cn6KiMI6NqdwAZj7xJ0j+Y3/ys&#xA;nLV48O2Ier+cefw/m/afNthE/wAO3mf0IoR6dpimaV6zPUtK55SMT1p3zXSlLId2yow3PNKr7zDc&#xA;zEpb1hj8f2z9Pb6MuhiAcbJqCdhslJJJqdzlrjurtiqxnBBA798rlJkAoxuySb/TlAJBbSLDJLe1&#xA;tZLaqb81qXNKj38FoevtmxjRDgyJBS2WNlZkYUZTTISDaCo0NaZVTYvVB+192TEO9iS9Q8rfkP5g&#xA;8w3Edxz/AEfoEqrLFezr++dGAPFIag8hWlTRfCvTM3NpgJVE3HmPx3uBru0cWE1E8Z/HN7DaWn5W&#xA;/lHpwd3SK+nUKJZCJr+4PT4QKUWvgFTxyNQxh0RnqNXLy+wfj5vLPzG/O3zJrlrNa6bMdF09gQqx&#xA;N+/kHg8g3FfBKe5OU5MpI22dppOzoQIMvUfseY6dLeXqrbo3BkojcQTI1dgAO2UCW3c7WUN9hZKN&#xA;1vytq+hQW+rPF6cMzek8btVwxHL4x25ffUZiYdbjyZDHGbI+Xzdnqeyc+HCMmYcIkdh1+Sg0NsYh&#xA;NeS+qZB+7UbKK/yKOpzYcA6un4jdBJZYnikKOpUjsRQ0PTIEN4NtBCdzsMkIqS3yA2X78N1yWlpJ&#xA;PXIJdiqk60NexyqQpmCtyKXYqqLET129ssjj72JkqhQB4ZaI0xWyLyG3UdMjMWoKaaBpulzxSXV9&#xA;MAkDANETxG/Qk96+AzM0GmxTBnkP09HMw44kXIv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:bde8a364-698e-40ef-8e64-e69245651777</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:bde8a364-698e-40ef-8e64-e69245651777</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:117c8109-e732-4954-804d-a5e4f1046eca</stRef:instanceID>
            <stRef:documentID>xmp.did:117c8109-e732-4954-804d-a5e4f1046eca</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:740f1638-69fc-4aae-8128-9ff9a2ad243e</stEvt:instanceID>
                  <stEvt:when>2017-07-23T21:49:23+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3f424217-ccf4-4bd2-af02-1a462ca6cf5b</stEvt:instanceID>
                  <stEvt:when>2017-07-24T00:43:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d6608d31-f074-4ed5-ab10-8f96de58b4c0</stEvt:instanceID>
                  <stEvt:when>2017-08-07T22:05:14+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c7b5498a-654f-480d-a0da-e418a272dacd</stEvt:instanceID>
                  <stEvt:when>2017-09-21T23:57:30+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:84b6dece-f9be-4167-b243-fa4d1621c992</stEvt:instanceID>
                  <stEvt:when>2017-09-22T00:08:09+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:12a5ffce-f7b1-4b07-83b7-391734a34861</stEvt:instanceID>
                  <stEvt:when>2017-09-23T23:27:27+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8d716e1e-22b8-4a4f-a2b7-3ce04125e629</stEvt:instanceID>
                  <stEvt:when>2017-09-24T23:29:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3dd1fbbd-64b1-4e16-862f-4e74bbe679e2</stEvt:instanceID>
                  <stEvt:when>2017-09-24T23:31:22+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3e71451f-ac42-4866-a367-1c01ccebd8f0</stEvt:instanceID>
                  <stEvt:when>2017-09-24T23:32:30+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2a9b15cd-8a90-4544-bd8a-4c89489386c9</stEvt:instanceID>
                  <stEvt:when>2017-11-11T12:36:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b4787833-c698-4ecb-841b-5b691c175bb3</stEvt:instanceID>
                  <stEvt:when>2017-11-12T01:18:52+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:37a6dd33-a89d-4822-b334-2004aebba08c</stEvt:instanceID>
                  <stEvt:when>2017-12-13T10:35:15+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bde8a364-698e-40ef-8e64-e69245651777</stEvt:instanceID>
                  <stEvt:when>2017-12-13T12:27:57+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>480.000000</stDim:w>
            <stDim:h>270.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -270 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 270 li
480 270 li
480 0 li
cp
clp
0 270 mo
480 270 li
480 0 li
0 0 li
0 270 li
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
gsave
0 270 mo
480 270 li
480 0 li
0 0 li
0 270 li
clp
36.0877 88.3576 mo
31.1355 79.7801 li
62.7037 61.5542 li
67.656 70.1316 li
59.8438 74.642 li
56.1055 68.167 li
44.8393 74.6713 li
48.5777 81.1465 li
36.0877 88.3576 li
0 .0196078 .0666667 rgb
f
31.1355 79.7801 mo
0 25.8515 li
0 7.78892 li
13.4908 0 li
27.1653 0 li
27.7692 1.04597 li
22.5268 4.07267 li
26.7742 11.4293 li
24.7828 12.579 li
24.7594 12.2065 24.6518 11.8335 24.4526 11.4882 cv
23.9892 10.6863 23.1488 10.2378 22.2849 10.2378 cv
21.8607 10.2378 21.4309 10.3459 21.0371 10.5732 cv
19.8413 11.2637 19.4316 12.7925 20.1221 13.9887 cv
20.3214 14.3338 20.5905 14.6134 20.9014 14.8199 cv
18.2461 16.3529 li
22.8995 24.413 li
31.4276 19.4893 li
43.6352 40.6333 li
48.8776 37.6066 li
62.7037 61.5542 li
31.1355 79.7801 li
41.0347 42.7139 mo
40.6106 42.7139 40.1809 42.8219 39.7871 43.0493 cv
38.5913 43.7398 38.1816 45.2686 38.8721 46.4644 cv
39.3352 47.2664 40.1755 47.7148 41.0394 47.7148 cv
41.4636 47.7148 41.8933 47.6068 42.2871 47.3794 cv
43.483 46.6889 43.893 45.1601 43.2021 43.9644 cv
42.7391 43.1624 41.8987 42.7139 41.0347 42.7139 cv
11.7225 39.7286 mo
11.5147 39.7286 11.3042 39.7816 11.1114 39.893 cv
10.5255 40.2309 10.3247 40.9801 10.6631 41.5655 cv
10.8898 41.9584 11.3013 42.1781 11.7244 42.1781 cv
11.9321 42.1781 12.1427 42.1251 12.3354 42.0137 cv
12.9213 41.6758 13.1221 40.9268 12.7837 40.3409 cv
12.5571 39.9482 12.1456 39.7286 11.7225 39.7286 cv
37.285 36.2188 mo
36.8608 36.2188 36.431 36.3268 36.0372 36.5543 cv
34.8413 37.2446 34.4316 38.7734 35.122 39.9692 cv
35.5851 40.7713 36.4254 41.2196 37.2893 41.2197 cv
37.7135 41.2197 38.1433 41.1116 38.5372 40.8843 cv
39.7328 40.1939 40.143 38.665 39.4522 37.4687 cv
38.9892 36.6671 38.1489 36.2188 37.285 36.2188 cv
16.4945 36.9735 mo
16.2867 36.9735 16.0761 37.0265 15.8832 37.1377 cv
15.2973 37.476 15.0967 38.2247 15.435 38.8106 cv
15.6616 39.2035 16.0732 39.423 16.4963 39.423 cv
16.7041 39.423 16.9146 39.3701 17.1075 39.2588 cv
17.6934 38.9204 17.894 38.1719 17.5557 37.586 cv
17.3291 37.1929 16.9176 36.9735 16.4945 36.9735 cv
33.5352 29.7236 mo
33.1109 29.7236 32.681 29.8317 32.287 30.0591 cv
31.0913 30.7494 30.6817 32.2784 31.372 33.4741 cv
31.8351 34.2761 32.6755 34.7245 33.5393 34.7246 cv
33.9636 34.7246 34.3933 34.6165 34.7872 34.3891 cv
35.9829 33.6987 36.3931 32.1699 35.7022 30.9736 cv
35.2391 30.1718 34.399 29.7236 33.5352 29.7236 cv
29.7851 23.2284 mo
29.3608 23.2284 28.9309 23.3365 28.5371 23.5639 cv
27.3414 24.2544 26.9317 25.7827 27.622 26.9791 cv
28.085 27.7806 28.9254 28.2289 29.7893 28.2289 cv
30.2135 28.229 30.6432 28.1209 31.037 27.8936 cv
32.2329 27.2035 32.6426 25.6743 31.9526 24.4791 cv
31.4892 23.6767 30.649 23.2284 29.7851 23.2284 cv
18.5349 3.74273 mo
18.1108 3.74273 17.6809 3.85082 17.2871 4.0782 cv
16.0913 4.76857 15.6816 6.29734 16.3721 7.4932 cv
16.8352 8.29523 17.6754 8.74357 18.5394 8.74357 cv
18.9635 8.74357 19.3934 8.63549 19.7871 8.40821 cv
20.983 7.71784 21.3925 6.18856 20.7027 4.99322 cv
20.2393 4.19113 19.3989 3.74273 18.5349 3.74273 cv
f
43.6352 40.6333 mo
31.4276 19.4893 li
36.67 16.4626 li
48.8776 37.6066 li
43.6352 40.6333 li
26.7742 11.4293 mo
22.5268 4.07267 li
27.7692 1.04597 li
32.0166 8.40264 li
26.7742 11.4293 li
0 .0392157 .12549 rgb
f
67.656 70.1316 mo
62.7037 61.5542 li
88.885 46.4384 li
88.9012 46.4693 88.918 46.4999 88.9355 46.5303 cv
89.3061 47.1723 89.9187 47.5876 90.5918 47.7276 cv
90.6029 47.911 90.6558 48.0948 90.754 48.2647 cv
90.9805 48.6577 91.3921 48.8773 91.8152 48.8773 cv
92.0229 48.8773 92.2335 48.8243 92.4263 48.7129 cv
93.0117 48.3753 93.2125 47.6272 92.8753 47.0414 cv
93.6515 46.2606 93.8425 45.0289 93.2655 44.0298 cv
93.2481 43.9995 93.2301 43.9698 93.2115 43.9405 cv
99.304 40.423 li
100.157 41.9013 li
100.101 42.1832 100.142 42.486 100.297 42.7544 cv
100.453 43.0231 100.694 43.2107 100.966 43.3026 cv
104.256 49.0005 li
96.8503 53.2763 li
97.4331 52.4995 97.532 51.4192 97.0157 50.5253 cv
96.5526 49.7232 95.7124 49.2748 94.8486 49.2748 cv
94.4243 49.2748 93.9945 49.3829 93.6005 49.6103 cv
92.4048 50.3003 91.9952 51.8291 92.6855 53.0253 cv
93.1483 53.827 93.9887 54.2753 94.8527 54.2753 cv
94.9519 54.2754 95.0516 54.2694 95.1509 54.2575 cv
67.656 70.1316 li
77.4973 54.6932 mo
77.2896 54.6932 77.079 54.7461 76.8861 54.8574 cv
76.3002 55.1958 76.0996 55.9443 76.4381 56.5297 cv
76.6646 56.9228 77.0761 57.1424 77.4992 57.1424 cv
77.707 57.1424 77.9176 57.0894 78.1104 56.978 cv
78.6963 56.6402 78.8969 55.8916 78.5586 55.3057 cv
78.332 54.9127 77.9205 54.6932 77.4973 54.6932 cv
82.2693 51.9381 mo
82.0615 51.9381 81.851 51.9911 81.6582 52.1025 cv
81.0723 52.4404 80.8717 53.1889 81.2099 53.7748 cv
81.4365 54.1679 81.848 54.3875 82.2711 54.3875 cv
82.4789 54.3875 82.6895 54.3345 82.8824 54.2231 cv
83.4683 53.8848 83.6689 53.1362 83.3305 52.5503 cv
83.1036 52.1577 82.6922 51.9381 82.2693 51.9381 cv
87.0411 49.1829 mo
86.8335 49.1829 86.623 49.2358 86.4302 49.3471 cv
85.8443 49.6855 85.6435 50.434 85.9819 51.0199 cv
86.2086 51.4126 86.6201 51.6322 87.0431 51.6322 cv
87.2509 51.6322 87.4615 51.5792 87.6543 51.4678 cv
88.2402 51.1299 88.4409 50.3813 88.1025 49.7954 cv
87.8755 49.4024 87.4641 49.1829 87.0411 49.1829 cv
96.5853 43.6727 mo
96.3775 43.6727 96.1669 43.7257 95.9741 43.837 cv
95.3882 44.1753 95.1876 44.9239 95.5253 45.5098 cv
95.7523 45.9028 96.1639 46.1223 96.5871 46.1223 cv
96.7949 46.1223 97.0055 46.0693 97.1983 45.9581 cv
97.7842 45.6196 97.9848 44.8712 97.6466 44.2852 cv
97.4199 43.8922 97.0084 43.6727 96.5853 43.6727 cv
0 .0196078 .0666667 rgb
f
62.7037 61.5542 mo
48.8776 37.6066 li
85.4778 16.4754 li
99.304 40.423 li
93.2115 43.9405 li
92.739 43.1946 91.9297 42.7793 91.0984 42.7793 cv
90.6742 42.7793 90.2443 42.8874 89.8506 43.1148 cv
88.6851 43.7876 88.2666 45.2567 88.885 46.4384 cv
62.7037 61.5542 li
27.7692 1.04597 mo
27.1653 0 li
29.5809 0 li
27.7692 1.04597 li
f
48.8776 37.6066 mo
36.67 16.4626 li
65.1838 0 li
75.9657 0 li
85.4778 16.4754 li
48.8776 37.6066 li
32.0166 8.40264 mo
27.7692 1.04597 li
29.5809 0 li
33.704 0 li
34.3414 1.10351 li
36.2527 0 li
46.5706 0 li
32.0166 8.40264 li
0 .0392157 .12549 rgb
f
34.3414 1.10351 mo
33.704 0 li
36.2527 0 li
34.3414 1.10351 li
.560784 .227451 1 rgb
f
94.8527 54.2753 mo
93.9887 54.2753 93.1483 53.827 92.6855 53.0253 cv
91.9952 51.8291 92.4048 50.3003 93.6005 49.6103 cv
93.9945 49.3829 94.4243 49.2748 94.8486 49.2748 cv
95.7124 49.2748 96.5526 49.7232 97.0157 50.5253 cv
97.532 51.4192 97.4331 52.4995 96.8503 53.2763 cv
95.1509 54.2575 li
95.0516 54.2694 94.9519 54.2754 94.8527 54.2753 cv
90.5918 47.7276 mo
89.9187 47.5876 89.3061 47.1723 88.9355 46.5303 cv
88.918 46.4999 88.9012 46.4693 88.885 46.4384 cv
93.2115 43.9405 li
93.2301 43.9698 93.2481 43.9995 93.2655 44.0298 cv
93.8425 45.0289 93.6515 46.2606 92.8753 47.0414 cv
92.8751 47.0409 92.8748 47.0404 92.8745 47.04 cv
92.6479 46.6474 92.2365 46.4278 91.8133 46.4278 cv
91.6056 46.4278 91.3949 46.4808 91.2021 46.5922 cv
90.7862 46.8321 90.5644 47.279 90.5918 47.7276 cv
0 .0352941 .423529 rgb
f
88.885 46.4384 mo
88.2666 45.2567 88.6851 43.7876 89.8506 43.1148 cv
90.2443 42.8874 90.6742 42.7793 91.0984 42.7793 cv
91.9297 42.7793 92.739 43.1946 93.2115 43.9405 cv
88.885 46.4384 li
f
11.7244 42.1781 mo
11.3013 42.1781 10.8898 41.9584 10.6631 41.5655 cv
10.3247 40.9801 10.5255 40.2309 11.1114 39.893 cv
11.3042 39.7816 11.5147 39.7286 11.7225 39.7286 cv
12.1456 39.7286 12.5571 39.9482 12.7837 40.3409 cv
13.1221 40.9268 12.9213 41.6758 12.3354 42.0137 cv
12.1427 42.1251 11.9321 42.1781 11.7244 42.1781 cv
16.4963 39.423 mo
16.0732 39.423 15.6616 39.2035 15.435 38.8106 cv
15.0967 38.2247 15.2973 37.476 15.8832 37.1377 cv
16.0761 37.0265 16.2867 36.9735 16.4945 36.9735 cv
16.9176 36.9735 17.3291 37.1929 17.5557 37.586 cv
17.894 38.1719 17.6934 38.9204 17.1075 39.2588 cv
16.9146 39.3701 16.7041 39.423 16.4963 39.423 cv
1 .027451 .109804 rgb
f
0 7.78892 mo
0 0 li
13.4908 0 li
0 7.78892 li
0 .0235294 .0823529 rgb
f
0 134.626 mo
0 97.7562 li
31.1355 79.7801 li
36.0877 88.3576 li
.3374 108.998 li
11.3504 128.073 li
0 134.626 li
0 .0470588 .14902 rgb
f
0 97.7562 mo
0 86.8965 li
14.309 78.6352 li
11.0351 72.9643 li
0 79.3356 li
0 25.8515 li
31.1355 79.7801 li
0 97.7562 li
2.1786 45.2389 mo
1.97082 45.2389 1.76018 45.2919 1.56733 45.4033 cv
.981419 45.7412 .780811 46.4902 1.11908 47.0758 cv
1.34572 47.4687 1.75724 47.6884 2.18055 47.6884 cv
2.38837 47.6884 2.59908 47.6354 2.79207 47.524 cv
3.37746 47.1861 3.57807 46.4371 3.23981 45.851 cv
3.01318 45.4584 2.60171 45.2389 2.1786 45.2389 cv
6.95039 42.4837 mo
6.74267 42.4837 6.53212 42.5367 6.33936 42.6479 cv
5.75345 42.9863 5.55267 43.7348 5.89111 44.3209 cv
6.11773 44.7135 6.5292 44.933 6.95241 44.933 cv
7.16025 44.933 7.37096 44.88 7.56393 44.7686 cv
8.14949 44.4307 8.3501 43.6822 8.01166 43.0961 cv
7.78501 42.7031 7.37349 42.4837 6.95039 42.4837 cv
f
0 86.8965 mo
0 79.3356 li
11.0351 72.9643 li
14.309 78.6352 li
0 86.8965 li
.286274 .188235 .533333 rgb
f
2.18055 47.6884 mo
1.75724 47.6884 1.34572 47.4687 1.11908 47.0758 cv
.780811 46.4902 .981419 45.7412 1.56733 45.4033 cv
1.76018 45.2919 1.97082 45.2389 2.1786 45.2389 cv
2.60171 45.2389 3.01318 45.4584 3.23981 45.851 cv
3.57807 46.4371 3.37746 47.1861 2.79207 47.524 cv
2.59908 47.6354 2.38837 47.6884 2.18055 47.6884 cv
6.95241 44.933 mo
6.5292 44.933 6.11773 44.7135 5.89111 44.3209 cv
5.55267 43.7348 5.75345 42.9863 6.33936 42.6479 cv
6.53212 42.5367 6.74267 42.4837 6.95039 42.4837 cv
7.37349 42.4837 7.78501 42.7031 8.01166 43.0961 cv
8.3501 43.6822 8.14949 44.4307 7.56393 44.7686 cv
7.37096 44.88 7.16025 44.933 6.95241 44.933 cv
1 .054902 .188235 rgb
f
22.8995 24.413 mo
18.2461 16.3529 li
20.9014 14.8199 li
21.3128 15.0933 21.7972 15.2388 22.2893 15.2388 cv
22.7135 15.2388 23.1433 15.1307 23.5371 14.9034 cv
24.3877 14.4122 24.8406 13.4969 24.7828 12.579 cv
26.7742 11.4293 li
31.4276 19.4893 li
22.8995 24.413 li
26.0348 16.7332 mo
25.6107 16.7332 25.1809 16.8412 24.7871 17.0684 cv
23.5912 17.7587 23.1817 19.2875 23.8721 20.4839 cv
24.3351 21.2856 25.1753 21.7338 26.0392 21.7339 cv
26.4634 21.7339 26.8933 21.6258 27.2871 21.3984 cv
28.4829 20.708 28.8926 19.1793 28.2026 17.9839 cv
27.7392 17.1815 26.8988 16.7332 26.0348 16.7332 cv
.286274 .164706 .160784 rgb
f
31.4276 19.4893 mo
26.7742 11.4293 li
32.0166 8.40264 li
36.67 16.4626 li
31.4276 19.4893 li
.286274 .184314 .215686 rgb
f
36.67 16.4626 mo
32.0166 8.40264 li
46.5706 0 li
65.1838 0 li
36.67 16.4626 li
f
245.901 26.9218 mo
230.358 0 li
239.776 0 li
241.487 2.96432 li
246.622 0 li
253.759 0 li
243.271 6.05419 li
246.977 12.4717 li
259.256 5.38284 li
256.148 0 li
264.031 0 li
264.988 1.65754 li
261.892 3.44525 li
264.139 7.33686 li
267.234 5.54951 li
270.657 11.4766 li
278.953 6.68646 li
279.453 7.55102 li
245.901 26.9218 li
261.04 8.47271 mo
248.761 15.5616 li
252.466 21.9789 li
264.745 14.8897 li
261.04 8.47271 li
0 .0235294 .0823529 rgb
f
104.256 49.0005 mo
100.966 43.3026 li
101.093 43.3451 101.225 43.3671 101.359 43.3671 cv
101.567 43.3671 101.777 43.3141 101.97 43.2027 cv
102.556 42.8647 102.757 42.1157 102.418 41.5298 cv
102.192 41.1372 101.78 40.9176 101.357 40.9176 cv
101.15 40.9176 100.939 40.9706 100.746 41.0821 cv
100.429 41.265 100.225 41.5685 100.157 41.9013 cv
99.304 40.423 li
133.463 20.701 li
138.416 29.2785 li
104.256 49.0005 li
f
99.304 40.423 mo
85.4778 16.4754 li
114.014 0 li
115.177 0 li
115.589 .713885 li
116.825 0 li
121.512 0 li
133.463 20.701 li
99.304 40.423 li
121.413 .858806 mo
117.107 3.34426 li
120.261 8.80717 li
124.566 6.32137 li
121.413 .858806 li
f
85.4778 16.4754 mo
75.9657 0 li
114.014 0 li
85.4778 16.4754 li
0 .0431373 .137255 rgb
f
120.261 8.80717 mo
117.107 3.34426 li
121.413 .858806 li
124.566 6.32137 li
120.261 8.80717 li
115.589 .713885 mo
115.177 0 li
116.825 0 li
115.589 .713885 li
.00392157 .0313725 .0862745 rgb
f
151.337 21.8184 mo
146.385 13.2408 li
155.357 8.06061 li
155.841 8.89818 li
151.371 11.4791 li
153.242 14.7187 li
157.711 12.1381 li
160.31 16.6381 li
151.337 21.8184 li
0 .00392157 .0156863 rgb
f
146.385 13.2408 mo
138.74 0 li
150.704 0 li
155.357 8.06061 li
146.385 13.2408 li
f
160.31 16.6381 mo
157.711 12.1381 li
160.533 10.5089 li
163.131 15.009 li
160.31 16.6381 li
155.841 8.89818 mo
155.357 8.06061 li
158.179 6.43146 li
158.663 7.26892 li
155.841 8.89818 li
.0156863 .0313725 .0705882 rgb
f
155.357 8.06061 mo
150.704 0 li
154.466 0 li
158.179 6.43146 li
155.357 8.06061 li
f
138.416 29.2785 mo
133.463 20.701 li
146.385 13.2408 li
151.337 21.8184 li
138.416 29.2785 li
0 .0235294 .0823529 rgb
f
133.463 20.701 mo
121.512 0 li
123.68 0 li
126.639 5.12499 li
130.944 2.63971 li
129.42 0 li
132.184 0 li
133.017 1.44282 li
135.515 0 li
138.74 0 li
146.385 13.2408 li
133.463 20.701 li
f
126.639 5.12499 mo
123.68 0 li
129.42 0 li
130.944 2.63971 li
126.639 5.12499 li
133.017 1.44282 mo
132.184 0 li
135.515 0 li
133.017 1.44282 li
.00392157 .0313725 .0862745 rgb
f
183.454 3.27596 mo
181.562 0 li
189.128 0 li
183.454 3.27596 li
.0156863 .0509804 .129412 rgb
f
163.131 15.009 mo
160.533 10.5089 li
160.797 10.3565 li
160.894 10.5234 li
162.149 9.79872 li
164.65 14.1319 li
163.131 15.009 li
158.663 7.26892 mo
158.179 6.43146 li
158.443 6.27894 li
158.687 6.70114 li
159.942 5.97654 li
160.182 6.39177 li
158.663 7.26892 li
.0156863 .0509804 .133333 rgb
f
158.179 6.43146 mo
154.466 0 li
155.509 0 li
154.991 .299354 li
156.48 2.8794 li
157.736 2.15479 li
158.453 3.39703 li
157.198 4.12161 li
158.443 6.27894 li
158.179 6.43146 li
f
164.65 14.1319 mo
162.149 9.79872 li
163.39 9.08197 li
163.294 8.91508 li
164.496 8.22099 li
164.592 8.38763 li
167.089 6.94637 li
166.993 6.77964 li
167.074 6.73245 li
165.204 3.49212 li
160.182 6.39177 li
159.942 5.97654 li
161.184 5.25971 li
160.94 4.83754 li
162.142 4.14354 li
162.386 4.56589 li
164.882 3.12446 li
164.638 2.70215 li
165.84 2.00815 li
166.084 2.43063 li
168.581 .989201 li
168.337 .56689 li
169.319 0 li
181.562 0 li
183.454 3.27596 li
164.65 14.1319 li
169.298 2.23141 mo
166.801 3.67284 li
168.291 6.25237 li
170.788 4.81111 li
169.298 2.23141 li
.0156863 .0705882 .192157 rgb
f
160.94 4.83754 mo
159.694 2.68018 li
158.453 3.39703 li
157.736 2.15479 li
158.977 1.43797 li
158.147 0 li
159.75 0 li
160.179 .744149 li
161.468 0 li
164.681 0 li
165.84 2.00815 li
164.638 2.70215 li
163.393 .544925 li
160.896 1.98636 li
162.142 4.14354 li
160.94 4.83754 li
168.337 .56689 mo
168.01 0 li
169.319 0 li
168.337 .56689 li
f
160.894 10.5234 mo
160.797 10.3565 li
162.052 9.63185 li
162.149 9.79872 li
160.894 10.5234 li
.0862745 .215686 .32549 rgb
f
162.149 9.79872 mo
162.052 9.63185 li
163.294 8.91508 li
163.39 9.08197 li
162.149 9.79872 li
164.592 8.38763 mo
164.496 8.22099 li
166.993 6.77964 li
167.089 6.94637 li
164.592 8.38763 li
.0862745 .231373 .368627 rgb
f
158.687 6.70114 mo
158.443 6.27894 li
159.698 5.55436 li
159.942 5.97654 li
158.687 6.70114 li
.0862745 .215686 .32549 rgb
f
158.443 6.27894 mo
157.198 4.12161 li
158.453 3.39703 li
159.698 5.55436 li
158.443 6.27894 li
f
159.942 5.97654 mo
159.698 5.55436 li
160.94 4.83754 li
161.184 5.25971 li
159.942 5.97654 li
.0862745 .231373 .368627 rgb
f
159.698 5.55436 mo
158.453 3.39703 li
159.694 2.68018 li
160.94 4.83754 li
159.698 5.55436 li
f
168.291 6.25237 mo
166.801 3.67284 li
169.298 2.23141 li
170.788 4.81111 li
168.291 6.25237 li
162.386 4.56589 mo
162.142 4.14354 li
164.638 2.70215 li
164.882 3.12446 li
162.386 4.56589 li
f
162.142 4.14354 mo
160.896 1.98636 li
163.393 .544925 li
164.638 2.70215 li
162.142 4.14354 li
f
156.48 2.8794 mo
154.991 .299354 li
155.509 0 li
156.491 0 li
157.736 2.15479 li
156.48 2.8794 li
.0862745 .215686 .32549 rgb
f
157.736 2.15479 mo
156.491 0 li
158.147 0 li
158.977 1.43797 li
157.736 2.15479 li
.0862745 .231373 .368627 rgb
f
166.084 2.43063 mo
165.84 2.00815 li
168.337 .56689 li
168.581 .989201 li
166.084 2.43063 li
f
165.84 2.00815 mo
164.681 0 li
168.01 0 li
168.337 .56689 li
165.84 2.00815 li
160.179 .744149 mo
159.75 0 li
161.468 0 li
160.179 .744149 li
f
153.242 14.7187 mo
151.371 11.4791 li
155.841 8.89818 li
157.711 12.1381 li
153.242 14.7187 li
0 .85098 1 rgb
f
157.711 12.1381 mo
155.841 8.89818 li
158.663 7.26892 li
160.533 10.5089 li
157.711 12.1381 li
.0156863 .854902 1 rgb
f
160.533 10.5089 mo
158.663 7.26892 li
160.182 6.39177 li
160.659 7.21882 li
159.404 7.94335 li
160.797 10.3565 li
160.533 10.5089 li
.0156863 .858823 1 rgb
f
163.294 8.91508 mo
161.901 6.50192 li
160.659 7.21882 li
160.182 6.39177 li
165.204 3.49212 li
167.074 6.73245 li
166.993 6.77964 li
165.599 4.36666 li
163.103 5.8081 li
164.496 8.22099 li
163.294 8.91508 li
.0156863 .862745 1 rgb
f
160.797 10.3565 mo
159.404 7.94335 li
160.659 7.21882 li
162.052 9.63185 li
160.797 10.3565 li
.0862745 .882353 1 rgb
f
162.052 9.63185 mo
160.659 7.21882 li
161.901 6.50192 li
163.294 8.91508 li
162.052 9.63185 li
164.496 8.22099 mo
163.103 5.8081 li
165.599 4.36666 li
166.993 6.77964 li
164.496 8.22099 li
.0862745 .886274 1 rgb
f
252.466 21.9789 mo
248.761 15.5616 li
261.04 8.47271 li
264.745 14.8897 li
252.466 21.9789 li
246.977 12.4717 mo
243.271 6.05419 li
253.759 0 li
256.148 0 li
259.256 5.38284 li
246.977 12.4717 li
270.657 11.4766 mo
267.234 5.54951 li
275.531 .759182 li
278.953 6.68646 li
270.657 11.4766 li
.0666667 .188235 .282353 rgb
f
241.487 2.96432 mo
239.776 0 li
246.622 0 li
241.487 2.96432 li
264.988 1.65754 mo
264.031 0 li
267.859 0 li
264.988 1.65754 li
f
48.5777 81.1465 mo
44.8393 74.6713 li
56.1055 68.167 li
59.8438 74.642 li
48.5777 81.1465 li
1 .266667 .0666667 rgb
f
47.1006 107.433 mo
42.9476 100.24 li
44.3442 99.4332 li
41.5288 94.5562 li
40.132 95.3626 li
36.0877 88.3576 li
48.5777 81.1465 li
49.6103 82.935 li
57.9514 78.1194 li
67.9318 95.4058 li
47.1006 107.433 li
0 .0392157 .129412 rgb
f
11.3504 128.073 mo
.3374 108.998 li
36.0877 88.3576 li
40.132 95.3626 li
10.7046 112.352 li
13.5206 117.229 li
42.9476 100.24 li
47.1006 107.433 li
11.3504 128.073 li
0 .0666667 .207843 rgb
f
60.3328 75.4889 mo
59.8438 74.642 li
67.656 70.1316 li
68.1449 70.9785 li
60.3328 75.4889 li
0 .0392157 .129412 rgb
f
68.1449 70.9785 mo
67.656 70.1316 li
95.1509 54.2575 li
95.4761 54.2183 95.7989 54.1141 96.1005 53.94 cv
96.4021 53.7658 96.6537 53.5383 96.8503 53.2763 cv
104.256 49.0005 li
104.745 49.8472 li
68.1449 70.9785 li
f
95.1509 54.2575 mo
96.8503 53.2763 li
96.6537 53.5383 96.4021 53.7658 96.1005 53.94 cv
95.7989 54.1141 95.4761 54.2183 95.1509 54.2575 cv
0 .054902 .462745 rgb
f
148.019 96.5268 mo
147.348 95.3632 li
148.952 94.4369 li
148.789 94.7866 148.794 95.2073 149.001 95.5668 cv
149.06 95.6691 149.132 95.7597 149.213 95.8377 cv
148.019 96.5268 li
151.251 94.6612 mo
151.224 94.5519 151.181 94.4446 151.122 94.3423 cv
150.914 93.983 150.552 93.7686 150.168 93.7347 cv
153.724 91.6819 li
153.561 92.0315 153.566 92.4522 153.773 92.8116 cv
153.832 92.914 153.904 93.0046 153.985 93.0826 cv
151.251 94.6612 li
156.023 91.906 mo
155.996 91.7968 155.953 91.6896 155.894 91.5874 cv
155.686 91.2279 155.324 91.0134 154.94 90.9795 cv
158.496 88.9268 li
158.333 89.2765 158.338 89.6972 158.545 90.0567 cv
158.604 90.159 158.676 90.2496 158.757 90.3276 cv
156.023 91.906 li
160.795 89.151 mo
160.768 89.0417 160.725 88.9344 160.666 88.832 cv
160.458 88.4727 160.096 88.2584 159.712 88.2245 cv
163.268 86.1717 li
163.105 86.5213 163.11 86.9421 163.317 87.3013 cv
163.376 87.4037 163.448 87.4943 163.529 87.5724 cv
160.795 89.151 li
165.567 86.3958 mo
165.54 86.2866 165.497 86.1794 165.438 86.0771 cv
165.231 85.7176 164.869 85.5031 164.484 85.4693 cv
168.04 83.4166 li
167.877 83.7664 167.882 84.1872 168.089 84.5464 cv
168.148 84.6488 168.22 84.7393 168.301 84.8173 cv
165.567 86.3958 li
170.339 83.6407 mo
170.312 83.5315 170.269 83.4242 170.21 83.3218 cv
170.002 82.9625 169.64 82.7482 169.256 82.7142 cv
172.812 80.6615 li
172.649 81.0111 172.654 81.4318 172.861 81.791 cv
172.92 81.8934 172.992 81.9841 173.073 82.0622 cv
170.339 83.6407 li
175.111 80.8856 mo
175.084 80.7764 175.041 80.6692 174.982 80.5669 cv
174.774 80.2075 174.412 79.993 174.028 79.959 cv
182.186 75.2495 li
176.452 65.3193 li
188.247 58.5099 li
194.652 69.6037 li
175.111 80.8856 li
0 .0235294 .0823529 rgb
f
176.452 65.3193 mo
163.587 43.0364 li
175.381 36.2269 li
188.247 58.5099 li
176.452 65.3193 li
f
214.974 57.8706 mo
208.569 46.7768 li
218.914 40.8042 li
206.048 18.5212 li
219.92 10.5123 li
233.521 34.0696 li
212.35 46.2925 li
218.02 56.1122 li
214.974 57.8706 li
0 .0431373 .145098 rgb
f
208.569 46.7768 mo
195.704 24.4938 li
206.048 18.5212 li
218.914 40.8042 li
208.569 46.7768 li
f
149.213 95.8377 mo
149.132 95.7597 149.06 95.6691 149.001 95.5668 cv
148.794 95.2073 148.789 94.7866 148.952 94.4369 cv
150.168 93.7347 li
150.552 93.7686 150.914 93.983 151.122 94.3423 cv
151.181 94.4446 151.224 94.5519 151.251 94.6612 cv
149.213 95.8377 li
153.985 93.0826 mo
153.904 93.0046 153.832 92.914 153.773 92.8116 cv
153.566 92.4522 153.561 92.0315 153.724 91.6819 cv
154.94 90.9795 li
155.324 91.0134 155.686 91.2279 155.894 91.5874 cv
155.953 91.6896 155.996 91.7968 156.023 91.906 cv
153.985 93.0826 li
158.757 90.3276 mo
158.676 90.2496 158.604 90.159 158.545 90.0567 cv
158.338 89.6972 158.333 89.2765 158.496 88.9268 cv
159.712 88.2245 li
160.096 88.2584 160.458 88.4727 160.666 88.832 cv
160.725 88.9344 160.768 89.0417 160.795 89.151 cv
158.757 90.3276 li
163.529 87.5724 mo
163.448 87.4943 163.376 87.4037 163.317 87.3013 cv
163.11 86.9421 163.105 86.5213 163.268 86.1717 cv
164.484 85.4693 li
164.869 85.5031 165.231 85.7176 165.438 86.0771 cv
165.497 86.1794 165.54 86.2866 165.567 86.3958 cv
163.529 87.5724 li
168.301 84.8173 mo
168.22 84.7393 168.148 84.6488 168.089 84.5464 cv
167.882 84.1872 167.877 83.7664 168.04 83.4166 cv
169.256 82.7142 li
169.64 82.7482 170.002 82.9625 170.21 83.3218 cv
170.269 83.4242 170.312 83.5315 170.339 83.6407 cv
168.301 84.8173 li
173.073 82.0622 mo
172.992 81.9841 172.92 81.8934 172.861 81.791 cv
172.654 81.4318 172.649 81.0111 172.812 80.6615 cv
174.028 79.959 li
174.412 79.993 174.774 80.2075 174.982 80.5669 cv
175.041 80.6692 175.084 80.7764 175.111 80.8856 cv
173.073 82.0622 li
1 .0235294 .0980392 rgb
f
147.348 95.3632 mo
141.789 85.7355 li
163.141 73.4082 li
162.966 73.1058 li
176.452 65.3193 li
182.186 75.2495 li
174.028 79.959 li
173.993 79.9559 173.957 79.9543 173.92 79.9543 cv
173.713 79.9543 173.502 80.0072 173.309 80.1187 cv
173.083 80.2494 172.914 80.4414 172.812 80.6615 cv
169.256 82.7142 li
169.22 82.7111 169.184 82.7095 169.148 82.7095 cv
168.941 82.7095 168.73 82.7624 168.537 82.8736 cv
168.311 83.0043 168.142 83.1963 168.04 83.4166 cv
164.484 85.4693 li
164.449 85.4661 164.413 85.4645 164.377 85.4645 cv
164.169 85.4645 163.958 85.5175 163.765 85.629 cv
163.539 85.7595 163.37 85.9515 163.268 86.1717 cv
159.712 88.2245 li
159.676 88.2213 159.64 88.2197 159.604 88.2197 cv
159.397 88.2197 159.186 88.2726 158.993 88.3837 cv
158.767 88.5145 158.598 88.7066 158.496 88.9268 cv
154.94 90.9795 li
154.905 90.9764 154.869 90.9748 154.833 90.9748 cv
154.625 90.9748 154.414 91.0277 154.221 91.1391 cv
153.995 91.2699 153.826 91.4618 153.724 91.6819 cv
150.168 93.7347 li
150.132 93.7315 150.096 93.7299 150.06 93.7299 cv
149.853 93.7299 149.642 93.7828 149.45 93.894 cv
149.223 94.0248 149.054 94.2168 148.952 94.4369 cv
147.348 95.3632 li
0 .0431373 .145098 rgb
f
137.919 79.0323 mo
128.01 61.8689 li
142.748 53.3599 li
138.382 45.7988 li
123.644 54.308 li
116.988 42.7788 li
104.745 49.8472 li
104.256 49.0005 li
138.416 29.2785 li
150.453 50.1275 li
140.211 56.0405 li
142.082 59.2803 li
155.914 51.2939 li
154.257 48.4233 li
163.587 43.0364 li
176.452 65.3193 li
162.966 73.1058 li
159.27 66.705 li
137.919 79.0323 li
f
148.952 94.4369 mo
149.054 94.2168 149.223 94.0248 149.45 93.894 cv
149.642 93.7828 149.853 93.7299 150.06 93.7299 cv
150.096 93.7299 150.132 93.7315 150.168 93.7347 cv
148.952 94.4369 li
153.724 91.6819 mo
153.826 91.4618 153.995 91.2699 154.221 91.1391 cv
154.414 91.0277 154.625 90.9748 154.833 90.9748 cv
154.869 90.9748 154.905 90.9764 154.94 90.9795 cv
153.724 91.6819 li
158.496 88.9268 mo
158.598 88.7066 158.767 88.5145 158.993 88.3837 cv
159.186 88.2726 159.397 88.2197 159.604 88.2197 cv
159.64 88.2197 159.676 88.2213 159.712 88.2245 cv
158.496 88.9268 li
163.268 86.1717 mo
163.37 85.9515 163.539 85.7595 163.765 85.629 cv
163.958 85.5175 164.169 85.4645 164.377 85.4645 cv
164.413 85.4645 164.449 85.4661 164.484 85.4693 cv
163.268 86.1717 li
168.04 83.4166 mo
168.142 83.1963 168.311 83.0043 168.537 82.8736 cv
168.73 82.7624 168.941 82.7095 169.148 82.7095 cv
169.184 82.7095 169.22 82.7111 169.256 82.7142 cv
168.04 83.4166 li
172.812 80.6615 mo
172.914 80.4414 173.083 80.2494 173.309 80.1187 cv
173.502 80.0072 173.713 79.9543 173.92 79.9543 cv
173.957 79.9543 173.993 79.9559 174.028 79.959 cv
172.812 80.6615 li
1 .0431373 .156863 rgb
f
141.789 85.7355 mo
141.614 85.4332 li
162.966 73.1058 li
163.141 73.4082 li
141.789 85.7355 li
.054902 .0705882 .219608 rgb
f
141.614 85.4332 mo
137.919 79.0323 li
159.27 66.705 li
162.966 73.1058 li
141.614 85.4332 li
f
194.652 69.6037 mo
188.247 58.5099 li
189.766 57.6328 li
196.171 68.7266 li
194.652 69.6037 li
0 .0431373 .145098 rgb
f
188.247 58.5099 mo
175.381 36.2269 li
176.901 35.3498 li
189.766 57.6328 li
188.247 58.5099 li
f
196.171 68.7266 mo
189.766 57.6328 li
208.569 46.7768 li
214.974 57.8706 li
196.171 68.7266 li
0 .0627451 .203922 rgb
f
189.766 57.6328 mo
176.901 35.3498 li
182.321 32.2204 li
185.061 36.9672 li
185.755 36.5669 li
183.014 31.8201 li
183.349 31.6271 li
186.089 36.3741 li
186.783 35.9737 li
184.042 31.2267 li
184.376 31.0339 li
187.117 35.7807 li
187.81 35.3804 li
185.069 30.6335 li
195.704 24.4938 li
208.569 46.7768 li
189.766 57.6328 li
192.361 48.0082 mo
191.667 48.4088 li
195.032 54.2373 li
195.726 53.8369 li
192.361 48.0082 li
193.388 47.4151 mo
192.695 47.8154 li
196.06 53.6441 li
196.753 53.2437 li
193.388 47.4151 li
194.415 46.8217 mo
193.722 47.2222 li
197.087 53.0507 li
197.781 52.6504 li
194.415 46.8217 li
187.375 39.3731 mo
186.682 39.7735 li
190.047 45.602 li
190.74 45.2016 li
187.375 39.3731 li
188.403 38.7798 mo
187.709 39.1801 li
191.074 45.0088 li
191.768 44.6085 li
188.403 38.7798 li
189.43 38.1866 mo
188.737 38.587 li
192.102 44.4155 li
192.795 44.0151 li
189.43 38.1866 li
f
195.032 54.2373 mo
191.667 48.4088 li
192.361 48.0082 li
195.726 53.8369 li
195.032 54.2373 li
196.06 53.6441 mo
192.695 47.8154 li
193.388 47.4151 li
196.753 53.2437 li
196.06 53.6441 li
197.087 53.0507 mo
193.722 47.2222 li
194.415 46.8217 li
197.781 52.6504 li
197.087 53.0507 li
190.047 45.602 mo
186.682 39.7735 li
187.375 39.3731 li
190.74 45.2016 li
190.047 45.602 li
191.074 45.0088 mo
187.709 39.1801 li
188.403 38.7798 li
191.768 44.6085 li
191.074 45.0088 li
192.102 44.4155 mo
188.737 38.587 li
189.43 38.1866 li
192.795 44.0151 li
192.102 44.4155 li
185.061 36.9672 mo
182.321 32.2204 li
183.014 31.8201 li
185.755 36.5669 li
185.061 36.9672 li
186.089 36.3741 mo
183.349 31.6271 li
184.042 31.2267 li
186.783 35.9737 li
186.089 36.3741 li
187.117 35.7807 mo
184.376 31.0339 li
185.069 30.6335 li
187.81 35.3804 li
187.117 35.7807 li
0 .196078 .380392 rgb
f
142.082 59.2803 mo
140.211 56.0405 li
150.453 50.1275 li
150.666 50.4966 li
154.257 48.4233 li
155.914 51.2939 li
142.082 59.2803 li
.521569 .164706 .145098 rgb
f
163.587 43.0364 mo
151.337 21.8184 li
160.31 16.6381 li
165.379 25.4193 li
168.201 23.7902 li
175.381 36.2269 li
163.587 43.0364 li
0 .0235294 .0823529 rgb
f
165.379 25.4193 mo
160.31 16.6381 li
163.131 15.009 li
168.201 23.7902 li
165.379 25.4193 li
.0156863 .0509804 .133333 rgb
f
150.453 50.1275 mo
138.416 29.2785 li
151.337 21.8184 li
163.587 43.0364 li
154.257 48.4233 li
154.044 48.0542 li
150.453 50.1275 li
0 .0431373 .145098 rgb
f
206.048 18.5212 mo
203.871 14.7494 li
217.742 6.74054 li
219.92 10.5123 li
206.048 18.5212 li
199.217 6.68969 mo
198.868 6.0846 li
209.407 0 li
210.804 0 li
199.217 6.68969 li
f
195.704 24.4938 mo
188.523 12.0571 li
198.868 6.0846 li
199.217 6.68969 li
195.372 8.91007 li
200.025 16.9698 li
203.871 14.7494 li
206.048 18.5212 li
195.704 24.4938 li
f
198.868 6.0846 mo
195.355 0 li
209.407 0 li
198.868 6.0846 li
.0156863 .0705882 .188235 rgb
f
188.523 12.0571 mo
183.454 3.27596 li
189.128 0 li
195.355 0 li
198.868 6.0846 li
188.523 12.0571 li
f
175.381 36.2269 mo
168.201 23.7902 li
169.72 22.9131 li
176.901 35.3498 li
175.381 36.2269 li
0 .0431373 .145098 rgb
f
168.201 23.7902 mo
163.131 15.009 li
164.65 14.1319 li
169.72 22.9131 li
168.201 23.7902 li
.0156863 .0705882 .192157 rgb
f
176.901 35.3498 mo
169.72 22.9131 li
173.041 20.9957 li
174.07 22.7779 li
177.913 20.5591 li
176.884 18.777 li
188.523 12.0571 li
195.704 24.4938 li
185.069 30.6335 li
184.445 29.5517 li
183.751 29.9522 li
184.376 31.0339 li
184.042 31.2267 li
183.418 30.145 li
182.724 30.5454 li
183.349 31.6271 li
183.014 31.8201 li
182.39 30.7382 li
181.696 31.1387 li
182.321 32.2204 li
176.901 35.3498 li
177.404 22.1031 mo
176.711 22.5035 li
180.076 28.332 li
180.77 27.9316 li
177.404 22.1031 li
178.432 21.5098 mo
177.738 21.9101 li
181.103 27.7388 li
181.797 27.3384 li
178.432 21.5098 li
179.46 20.9166 mo
178.766 21.3169 li
182.131 27.1454 li
182.825 26.7451 li
179.46 20.9166 li
0 .0627451 .203922 rgb
f
169.72 22.9131 mo
164.65 14.1319 li
183.454 3.27596 li
188.523 12.0571 li
176.884 18.777 li
173.687 13.2387 li
173.664 13.2518 li
173.447 12.875 li
172.753 13.2754 li
172.971 13.6524 li
172.637 13.845 li
172.419 13.4682 li
171.726 13.8687 li
171.943 14.2456 li
169.844 15.4575 li
173.041 20.9957 li
169.72 22.9131 li
174.474 12.2817 mo
173.781 12.6822 li
177.146 18.5112 li
177.839 18.1103 li
174.474 12.2817 li
.0156863 .0901961 .247059 rgb
f
182.321 32.2204 mo
181.696 31.1387 li
182.39 30.7382 li
183.014 31.8201 li
182.321 32.2204 li
183.349 31.6271 mo
182.724 30.5454 li
183.418 30.145 li
184.042 31.2267 li
183.349 31.6271 li
184.376 31.0339 mo
183.751 29.9522 li
184.445 29.5517 li
185.069 30.6335 li
184.376 31.0339 li
180.076 28.332 mo
176.711 22.5035 li
177.404 22.1031 li
180.77 27.9316 li
180.076 28.332 li
181.103 27.7388 mo
177.738 21.9101 li
178.432 21.5098 li
181.797 27.3384 li
181.103 27.7388 li
182.131 27.1454 mo
178.766 21.3169 li
179.46 20.9166 li
182.825 26.7451 li
182.131 27.1454 li
0 .196078 .380392 rgb
f
177.146 18.5112 mo
173.781 12.6822 li
174.474 12.2817 li
177.839 18.1103 li
177.146 18.5112 li
171.943 14.2456 mo
171.726 13.8687 li
172.419 13.4682 li
172.637 13.845 li
171.943 14.2456 li
172.971 13.6524 mo
172.753 13.2754 li
173.447 12.875 li
173.664 13.2518 li
172.971 13.6524 li
.0156863 .219608 .411765 rgb
f
174.07 22.7779 mo
173.041 20.9957 li
176.884 18.777 li
177.913 20.5591 li
174.07 22.7779 li
.309804 .909804 1 rgb
f
173.041 20.9957 mo
169.844 15.4575 li
171.943 14.2456 li
175.091 19.6972 li
175.784 19.2969 li
172.637 13.845 li
172.971 13.6524 li
176.118 19.104 li
176.812 18.7037 li
173.664 13.2518 li
173.687 13.2387 li
176.884 18.777 li
173.041 20.9957 li
.321569 .909804 1 rgb
f
175.091 19.6972 mo
171.943 14.2456 li
172.637 13.845 li
175.784 19.2969 li
175.091 19.6972 li
176.118 19.104 mo
172.971 13.6524 li
173.664 13.2518 li
176.812 18.7037 li
176.118 19.104 li
.321569 .917647 1 rgb
f
150.666 50.4966 mo
150.453 50.1275 li
154.044 48.0542 li
154.257 48.4233 li
150.666 50.4966 li
.521569 .164706 .145098 rgb
f
203.871 14.7494 mo
199.217 6.68969 li
210.804 0 li
213.851 0 li
217.742 6.74054 li
203.871 14.7494 li
.439216 .917647 1 rgb
f
200.025 16.9698 mo
195.372 8.91007 li
199.217 6.68969 li
203.871 14.7494 li
200.025 16.9698 li
f
49.6103 82.935 mo
48.5777 81.1465 li
59.8438 74.642 li
60.3328 75.4889 li
57.4077 77.1777 li
57.9514 78.1194 li
49.6103 82.935 li
1 .282353 .129412 rgb
f
130.37 106.717 mo
129.698 105.553 li
135.105 102.432 li
135.776 103.595 li
130.37 106.717 li
0 .0196078 .0666667 rgb
f
129.698 105.553 mo
124.14 95.9253 li
129.546 92.804 li
135.105 102.432 li
129.698 105.553 li
67.9318 95.4058 mo
57.9514 78.1194 li
60.8765 76.4306 li
60.3328 75.4889 li
68.1449 70.9785 li
78.669 89.2067 li
67.9318 95.4058 li
0 .0392157 .129412 rgb
f
120.27 89.2221 mo
110.36 72.0586 li
115.767 68.9373 li
125.676 86.1007 li
120.27 89.2221 li
78.669 89.2067 mo
68.1449 70.9785 li
104.745 49.8472 li
111.401 61.3765 li
104.816 65.1785 li
104.909 64.6257 104.818 64.0387 104.516 63.5157 cv
104.053 62.7133 103.213 62.265 102.349 62.265 cv
101.924 62.265 101.494 62.3731 101.101 62.6005 cv
99.9048 63.291 99.4951 64.8198 100.185 66.0157 cv
100.487 66.5389 100.95 66.9116 101.475 67.1075 cv
94.6387 71.0547 li
98.5064 77.7535 li
78.669 89.2067 li
98.5986 55.7699 mo
98.1743 55.7699 97.7444 55.878 97.3505 56.1055 cv
96.1548 56.7959 95.7451 58.3243 96.4355 59.5205 cv
96.8983 60.3223 97.7389 60.7706 98.603 60.7706 cv
99.0272 60.7706 99.4569 60.6627 99.8507 60.4355 cv
101.046 59.7451 101.456 58.2158 100.766 57.0205 cv
100.303 56.2183 99.4624 55.7699 98.5986 55.7699 cv
f
101.475 67.1075 mo
100.95 66.9116 100.487 66.5389 100.185 66.0157 cv
99.4951 64.8198 99.9048 63.291 101.101 62.6005 cv
101.494 62.3731 101.924 62.265 102.349 62.265 cv
103.213 62.265 104.053 62.7133 104.516 63.5157 cv
104.818 64.0387 104.909 64.6257 104.816 65.1785 cv
101.475 67.1075 li
98.603 60.7706 mo
97.7389 60.7706 96.8983 60.3223 96.4355 59.5205 cv
95.7451 58.3243 96.1548 56.7959 97.3505 56.1055 cv
97.7444 55.878 98.1743 55.7699 98.5986 55.7699 cv
99.4624 55.7699 100.303 56.2183 100.766 57.0205 cv
101.456 58.2158 101.046 59.7451 99.8507 60.4355 cv
99.4569 60.6627 99.0272 60.7706 98.603 60.7706 cv
0 .054902 .462745 rgb
f
124.14 95.9253 mo
123.965 95.623 li
129.372 92.5016 li
129.546 92.804 li
124.14 95.9253 li
.054902 .0666667 .211765 rgb
f
123.965 95.623 mo
120.27 89.2221 li
125.676 86.1007 li
129.372 92.5016 li
123.965 95.623 li
f
135.776 103.595 mo
135.105 102.432 li
147.348 95.3632 li
148.019 96.5268 li
135.776 103.595 li
0 .0235294 .0823529 rgb
f
135.105 102.432 mo
129.546 92.804 li
141.789 85.7355 li
147.348 95.3632 li
135.105 102.432 li
0 .0431373 .145098 rgb
f
125.676 86.1007 mo
115.767 68.9373 li
128.01 61.8689 li
137.919 79.0323 li
125.676 86.1007 li
111.401 61.3765 mo
104.745 49.8472 li
116.988 42.7788 li
123.644 54.308 li
111.401 61.3765 li
f
129.546 92.804 mo
129.372 92.5016 li
141.614 85.4332 li
141.789 85.7355 li
129.546 92.804 li
.054902 .0705882 .219608 rgb
f
129.372 92.5016 mo
125.676 86.1007 li
137.919 79.0323 li
141.614 85.4332 li
129.372 92.5016 li
f
57.9514 78.1194 mo
57.4077 77.1777 li
60.3328 75.4889 li
60.8765 76.4306 li
57.9514 78.1194 li
1 .282353 .129412 rgb
f
42.9476 100.24 mo
40.132 95.3626 li
41.5288 94.5562 li
44.3442 99.4332 li
42.9476 100.24 li
.607843 .313725 1 rgb
f
13.5206 117.229 mo
10.7046 112.352 li
40.132 95.3626 li
42.9476 100.24 li
13.5206 117.229 li
.607843 .329412 1 rgb
f
251.571 36.7414 mo
245.901 26.9218 li
279.453 7.55102 li
280.737 9.77654 li
272.44 14.5668 li
276.146 20.9844 li
284.443 16.1942 li
285.122 17.3706 li
251.571 36.7414 li
266.529 17.9799 mo
254.25 25.0693 li
257.955 31.4868 li
270.234 24.3975 li
266.529 17.9799 li
0 .0235294 .0823529 rgb
f
257.955 31.4868 mo
254.25 25.0693 li
266.529 17.9799 li
270.234 24.3975 li
257.955 31.4868 li
276.146 20.9844 mo
272.44 14.5668 li
280.737 9.77654 li
284.443 16.1942 li
276.146 20.9844 li
.0666667 .188235 .282353 rgb
f
218.02 56.1122 mo
212.35 46.2925 li
233.521 34.0696 li
239.19 43.8892 li
228.114 50.2842 li
227.816 50.33 227.521 50.4309 227.244 50.5909 cv
226.967 50.7508 226.732 50.9557 226.543 51.191 cv
218.02 56.1122 li
0 .0431373 .145098 rgb
f
128.01 61.8689 mo
123.644 54.308 li
138.382 45.7988 li
142.748 53.3599 li
128.01 61.8689 li
1 .34902 .227451 rgb
f
98.5064 77.7535 mo
94.6387 71.0547 li
101.475 67.1075 li
101.755 67.2118 102.052 67.266 102.353 67.266 cv
102.777 67.266 103.207 67.158 103.601 66.9307 cv
104.273 66.5424 104.697 65.8888 104.816 65.1785 cv
111.401 61.3765 li
115.767 68.9373 li
110.36 72.0586 li
109.863 71.1969 li
108.492 71.988 li
108.687 71.3492 108.626 70.6346 108.266 70.0107 cv
107.803 69.2085 106.962 68.7602 106.099 68.7602 cv
105.674 68.7602 105.244 68.8683 104.851 69.0957 cv
103.655 69.7862 103.245 71.315 103.936 72.5107 cv
104.296 73.1346 104.884 73.5445 105.535 73.6958 cv
98.5064 77.7535 li
1 .34902 .211765 rgb
f
105.535 73.6958 mo
104.884 73.5445 104.296 73.1346 103.936 72.5107 cv
103.245 71.315 103.655 69.7862 104.851 69.0957 cv
105.244 68.8683 105.674 68.7602 106.099 68.7602 cv
106.962 68.7602 107.803 69.2085 108.266 70.0107 cv
108.626 70.6346 108.687 71.3492 108.492 71.988 cv
105.535 73.6958 li
102.353 67.266 mo
102.052 67.266 101.755 67.2118 101.475 67.1075 cv
104.816 65.1785 li
104.697 65.8888 104.273 66.5424 103.601 66.9307 cv
103.207 67.158 102.777 67.266 102.353 67.266 cv
1 .356863 .513725 rgb
f
115.767 68.9373 mo
111.401 61.3765 li
123.644 54.308 li
128.01 61.8689 li
115.767 68.9373 li
1 .34902 .227451 rgb
f
14.0845 163.296 mo
0 138.901 li
0 136.495 li
12.1594 129.474 li
27.2857 155.674 li
14.0845 163.296 li
0 .0196078 .0666667 rgb
f
0 136.495 mo
0 134.626 li
11.3504 128.073 li
12.1594 129.474 li
0 136.495 li
0 .0470588 .14902 rgb
f
84.853 176.665 mo
84.4516 175.969 li
93.7778 170.585 li
89.4122 163.024 li
80.0865 168.409 li
71.4993 153.535 li
83.6094 146.544 li
91.3354 159.925 li
92.5385 159.23 li
98.1663 168.978 li
84.853 176.665 li
0 .0196078 .0666667 rgb
f
71.1635 152.954 mo
66.532 144.932 li
79.8454 137.245 li
84.4769 145.267 li
71.1635 152.954 li
f
27.2857 155.674 mo
12.1594 129.474 li
47.9097 108.834 li
47.1006 107.433 li
67.9318 95.4058 li
83.8671 123.007 li
27.2857 155.674 li
0 .0392157 .129412 rgb
f
12.1594 129.474 mo
11.3504 128.073 li
47.1006 107.433 li
47.9097 108.834 li
12.1594 129.474 li
0 .0666667 .207843 rgb
f
102.016 123.087 mo
101.344 121.923 li
129.698 105.553 li
130.37 106.717 li
102.016 123.087 li
0 .0196078 .0666667 rgb
f
83.8671 123.007 mo
67.9318 95.4058 li
78.669 89.2067 li
92.7715 113.633 li
97.2191 111.065 li
97.3936 111.367 li
124.14 95.9253 li
129.698 105.553 li
101.344 121.923 li
97.4439 115.168 li
83.8671 123.007 li
0 .0392157 .129412 rgb
f
92.7715 113.633 mo
78.669 89.2067 li
98.5064 77.7535 li
99.004 78.6152 li
110.36 72.0586 li
120.27 89.2221 li
93.5234 104.664 li
97.2191 111.065 li
92.7715 113.633 li
107.092 88.6493 mo
89.2031 98.978 li
92.1738 104.124 li
110.063 93.7954 li
107.092 88.6493 li
113.598 81.7505 mo
113.174 81.7505 112.744 81.8585 112.351 82.0859 cv
111.155 82.7764 110.745 84.3052 111.436 85.501 cv
111.898 86.3032 112.739 86.7514 113.603 86.7515 cv
114.027 86.7515 114.457 86.6434 114.851 86.416 cv
116.046 85.7257 116.456 84.1967 115.766 83.001 cv
115.303 82.199 114.462 81.7505 113.598 81.7505 cv
109.848 75.2554 mo
109.424 75.2554 108.994 75.3634 108.601 75.5909 cv
107.405 76.2812 106.995 77.81 107.686 79.0058 cv
108.149 79.8081 108.989 80.2564 109.852 80.2564 cv
110.277 80.2565 110.707 80.1483 111.101 79.9209 cv
112.296 79.2305 112.706 77.7017 112.016 76.5059 cv
111.553 75.7038 110.712 75.2554 109.848 75.2554 cv
f
92.1738 104.124 mo
89.2031 98.978 li
107.092 88.6493 li
110.063 93.7954 li
92.1738 104.124 li
.454902 .0392157 1 rgb
f
113.603 86.7515 mo
112.739 86.7514 111.898 86.3032 111.436 85.501 cv
110.745 84.3052 111.155 82.7764 112.351 82.0859 cv
112.744 81.8585 113.174 81.7505 113.598 81.7505 cv
114.462 81.7505 115.303 82.199 115.766 83.001 cv
116.456 84.1967 116.046 85.7257 114.851 86.416 cv
114.457 86.6434 114.027 86.7515 113.603 86.7515 cv
109.852 80.2564 mo
108.989 80.2564 108.149 79.8081 107.686 79.0058 cv
106.995 77.81 107.405 76.2812 108.601 75.5909 cv
108.994 75.3634 109.424 75.2554 109.848 75.2554 cv
110.712 75.2554 111.553 75.7038 112.016 76.5059 cv
112.706 77.7017 112.296 79.2305 111.101 79.9209 cv
110.707 80.1483 110.277 80.2565 109.852 80.2564 cv
0 .054902 .462745 rgb
f
97.3936 111.367 mo
97.2191 111.065 li
123.965 95.623 li
124.14 95.9253 li
97.3936 111.367 li
.054902 .0666667 .211765 rgb
f
97.2191 111.065 mo
93.5234 104.664 li
120.27 89.2221 li
123.965 95.623 li
97.2191 111.065 li
f
71.4993 153.535 mo
71.1635 152.954 li
84.4769 145.267 li
84.7745 145.783 li
83.5712 146.477 li
83.6094 146.544 li
71.4993 153.535 li
.164706 .0823529 .0941176 rgb
f
91.3354 159.925 mo
83.6094 146.544 li
84.8127 145.849 li
92.5385 159.23 li
91.3354 159.925 li
0 .0196078 .0666667 rgb
f
83.6094 146.544 mo
83.5712 146.477 li
84.7745 145.783 li
84.8127 145.849 li
83.6094 146.544 li
.164706 .0823529 .0941176 rgb
f
84.4516 175.969 mo
80.0865 168.409 li
89.4122 163.024 li
93.7778 170.585 li
84.4516 175.969 li
.392157 .909804 1 rgb
f
99.004 78.6152 mo
98.5064 77.7535 li
105.535 73.6958 li
105.72 73.739 105.911 73.7612 106.103 73.7612 cv
106.527 73.7612 106.957 73.6532 107.351 73.4258 cv
107.923 73.0956 108.315 72.5737 108.492 71.988 cv
109.863 71.1969 li
110.36 72.0586 li
99.004 78.6152 li
1 .34902 .211765 rgb
f
106.103 73.7612 mo
105.911 73.7612 105.72 73.739 105.535 73.6958 cv
108.492 71.988 li
108.315 72.5737 107.923 73.0956 107.351 73.4258 cv
106.957 73.6532 106.527 73.7612 106.103 73.7612 cv
1 .356863 .513725 rgb
f
243.538 28.2864 mo
227.759 .957237 li
229.417 0 li
230.358 0 li
245.901 26.9218 li
243.538 28.2864 li
0 .0235294 .0823529 rgb
f
227.759 .957237 mo
227.207 0 li
229.417 0 li
227.759 .957237 li
.439216 .917647 1 rgb
f
233.521 34.0696 mo
219.92 10.5123 li
223.82 8.26069 li
221.642 4.48898 li
227.759 .957237 li
243.538 28.2864 li
233.521 34.0696 li
0 .0431373 .145098 rgb
f
219.92 10.5123 mo
217.742 6.74054 li
221.642 4.48898 li
223.82 8.26069 li
219.92 10.5123 li
f
221.642 4.48898 mo
219.05 0 li
227.207 0 li
227.759 .957237 li
221.642 4.48898 li
.439216 .917647 1 rgb
f
217.742 6.74054 mo
213.851 0 li
219.05 0 li
221.642 4.48898 li
217.742 6.74054 li
f
249.207 38.106 mo
243.538 28.2864 li
245.901 26.9218 li
251.571 36.7414 li
249.207 38.106 li
0 .0235294 .0823529 rgb
f
239.19 43.8892 mo
233.521 34.0696 li
243.538 28.2864 li
249.207 38.106 li
239.19 43.8892 li
0 .0431373 .145098 rgb
f
264.139 7.33686 mo
261.892 3.44525 li
264.988 1.65754 li
265.168 1.96924 li
268.579 0 li
275.714 0 li
266.951 5.0591 li
267.234 5.54951 li
264.139 7.33686 li
1 .266667 .0823529 rgb
f
267.234 5.54951 mo
266.951 5.0591 li
275.714 0 li
275.823 0 li
275.275 .315956 li
275.531 .759182 li
267.234 5.54951 li
1 .392157 .282353 rgb
f
265.168 1.96924 mo
264.988 1.65754 li
267.859 0 li
268.579 0 li
265.168 1.96924 li
f
279.453 7.55102 mo
278.953 6.68646 li
282.935 4.38724 li
280.403 0 li
288.285 0 li
288.848 .974155 li
290.535 0 li
292.531 0 li
279.453 7.55102 li
0 .0431373 .145098 rgb
f
278.953 6.68646 mo
275.531 .759182 li
276.846 0 li
280.403 0 li
282.935 4.38724 li
278.953 6.68646 li
.0666667 .203922 .329412 rgb
f
288.848 .974155 mo
288.285 0 li
290.535 0 li
288.848 .974155 li
f
285.122 17.3706 mo
284.443 16.1942 li
288.425 13.895 li
284.72 7.47746 li
280.737 9.77654 li
279.453 7.55102 li
292.531 0 li
297.671 0 li
290.632 4.06437 li
294.147 10.1529 li
292.416 11.1524 li
293.285 12.6576 li
285.122 17.3706 li
309.917 3.05523 mo
309.589 2.48762 li
313.898 0 li
315.209 0 li
309.917 3.05523 li
0 .0431373 .145098 rgb
f
293.285 12.6576 mo
292.416 11.1524 li
294.147 10.1529 li
294.337 10.4814 li
304.92 4.37172 li
305.272 4.98042 li
309.589 2.48762 li
309.917 3.05523 li
293.285 12.6576 li
.847059 .376471 .301961 rgb
f
306.426 3.06344 mo
304.657 0 li
313.898 0 li
309.589 2.48762 li
309.048 1.54986 li
306.426 3.06344 li
0 .0431373 .145098 rgb
f
305.272 4.98042 mo
304.92 4.37172 li
306.616 3.39251 li
306.426 3.06344 li
309.048 1.54986 li
309.589 2.48762 li
305.272 4.98042 li
.847059 .376471 .301961 rgb
f
284.443 16.1942 mo
280.737 9.77654 li
284.72 7.47746 li
288.425 13.895 li
284.443 16.1942 li
294.147 10.1529 mo
290.632 4.06437 li
297.671 0 li
302.396 0 li
304.73 4.04271 li
294.147 10.1529 li
.0666667 .203922 .329412 rgb
f
294.337 10.4814 mo
294.147 10.1529 li
304.73 4.04271 li
304.92 4.37172 li
294.337 10.4814 li
.858823 .482353 .454902 rgb
f
304.73 4.04271 mo
302.396 0 li
304.657 0 li
306.426 3.06344 li
304.73 4.04271 li
.0666667 .203922 .329412 rgb
f
304.92 4.37172 mo
304.73 4.04271 li
306.426 3.06344 li
306.616 3.39251 li
304.92 4.37172 li
.858823 .482353 .454902 rgb
f
275.531 .759182 mo
275.275 .315956 li
275.823 0 li
276.846 0 li
275.531 .759182 li
1 .403922 .329412 rgb
f
111.45 222.732 mo
98.8942 200.985 li
107.867 195.804 li
120.423 217.552 li
111.45 222.732 li
96.3948 196.656 mo
84.853 176.665 li
98.1663 168.978 li
109.708 188.969 li
96.3948 196.656 li
0 .0196078 .0666667 rgb
f
116.294 231.122 mo
111.45 222.732 li
120.423 217.552 li
124.891 225.292 li
124.868 225.306 li
125.243 225.955 li
116.294 231.122 li
0 .0392157 .12549 rgb
f
119.821 237.231 mo
116.294 231.122 li
125.243 225.955 li
128.77 232.064 li
119.821 237.231 li
0 .2 .298039 rgb
f
98.8942 200.985 mo
96.3948 196.656 li
109.708 188.969 li
111.923 192.805 li
107.582 195.311 li
107.867 195.804 li
98.8942 200.985 li
.85098 .396078 .278431 rgb
f
120.423 217.552 mo
107.867 195.804 li
112.208 193.298 li
124.764 215.046 li
120.423 217.552 li
.0156863 .0470588 .121569 rgb
f
132.455 229.572 mo
128.711 223.087 li
124.891 225.292 li
120.423 217.552 li
124.764 215.046 li
132.977 229.271 li
132.455 229.572 li
.0156863 .0666667 .176471 rgb
f
107.867 195.804 mo
107.582 195.311 li
111.923 192.805 li
112.208 193.298 li
107.867 195.804 li
.854902 .411765 .317647 rgb
f
15.57 165.869 mo
14.0845 163.296 li
27.2857 155.674 li
28.7712 158.247 li
15.57 165.869 li
1 .360784 .192157 rgb
f
66.532 144.932 mo
65.2721 142.75 li
87.7673 129.762 li
88.4391 130.925 li
79.2573 136.227 li
79.8454 137.245 li
66.532 144.932 li
f
28.7712 158.247 mo
27.2857 155.674 li
83.8671 123.007 li
87.7673 129.762 li
65.2721 142.75 li
62.8575 138.567 li
28.7712 158.247 li
1 .376471 .247059 rgb
f
88.4391 130.925 mo
87.7673 129.762 li
101.344 121.923 li
102.016 123.087 li
88.4391 130.925 li
1 .360784 .192157 rgb
f
87.7673 129.762 mo
83.8671 123.007 li
97.4439 115.168 li
101.344 121.923 li
87.7673 129.762 li
1 .376471 .247059 rgb
f
480 25.8517 mo
472.179 12.3048 li
480 7.78917 li
480 25.8517 li
0 .0196078 .0666667 rgb
f
472.179 12.3048 mo
465.074 0 li
480 0 li
480 7.78917 li
472.179 12.3048 li
415.69 .81943 mo
415.418 .448484 415.059 .17122 414.657 0 cv
417.109 0 li
415.69 .81943 li
0 .0235294 .0823529 rgb
f
414.865 1.29565 mo
414.117 0 li
414.657 0 li
415.059 .17122 415.418 .448484 415.69 .81943 cv
414.865 1.29565 li
.0352941 .0352941 .14902 rgb
f
180.685 153.105 mo
173.711 141.026 li
178.703 138.144 li
175.714 132.967 li
170.722 135.849 li
169.283 133.356 li
174.275 130.474 li
171.285 125.296 li
166.294 128.178 li
164.854 125.685 li
169.846 122.803 li
166.856 117.625 li
161.865 120.508 li
161.301 119.53 li
201.967 96.052 li
210.43 110.71 li
178.084 129.385 li
181.838 135.888 li
182.082 135.748 li
182.275 136.082 li
189.692 131.8 li
189.499 131.465 li
193.071 129.403 li
193.264 129.738 li
200.682 125.455 li
200.489 125.121 li
214.184 117.213 li
221.351 129.627 li
180.685 153.105 li
203.442 124.021 mo
203.018 124.021 202.588 124.129 202.194 124.356 cv
200.999 125.047 200.588 126.576 201.279 127.772 cv
201.742 128.574 202.582 129.022 203.446 129.022 cv
203.871 129.022 204.301 128.914 204.694 128.687 cv
205.89 127.996 206.3 126.467 205.609 125.271 cv
205.146 124.469 204.306 124.021 203.442 124.021 cv
182.274 118.952 mo
174.857 123.234 li
177.846 128.412 li
185.264 124.129 li
182.274 118.952 li
193.264 112.607 mo
185.846 116.89 li
188.835 122.067 li
196.253 117.785 li
195.169 115.908 li
195.419 115.989 195.682 116.031 195.946 116.031 cv
196.371 116.031 196.8 115.923 197.194 115.696 cv
198.39 115.005 198.8 113.477 198.109 112.281 cv
197.646 111.479 196.806 111.031 195.942 111.031 cv
195.518 111.031 195.088 111.139 194.694 111.366 cv
194.055 111.735 193.64 112.344 193.498 113.013 cv
193.264 112.607 li
177.846 111.281 mo
170.428 115.564 li
173.417 120.741 li
180.835 116.459 li
177.846 111.281 li
188.834 104.937 mo
181.417 109.219 li
184.406 114.396 li
191.824 110.114 li
191.419 109.413 li
191.669 109.494 191.932 109.536 192.196 109.536 cv
192.621 109.536 193.05 109.428 193.444 109.201 cv
194.64 108.51 195.05 106.981 194.359 105.786 cv
193.896 104.984 193.056 104.535 192.192 104.535 cv
191.768 104.535 191.338 104.643 190.944 104.871 cv
190.305 105.24 189.89 105.849 189.748 106.519 cv
188.834 104.937 li
0 .0431373 .145098 rgb
f
163.036 163.295 mo
162.567 162.484 li
162.836 162.734 163.154 162.919 163.495 163.03 cv
163.036 163.295 li
161.835 161.215 mo
158.818 155.989 li
159.284 156.424 159.898 156.66 160.525 156.66 cv
160.949 156.66 161.378 156.551 161.772 156.324 cv
162.968 155.634 163.378 154.105 162.688 152.909 cv
162.224 152.107 161.384 151.659 160.52 151.659 cv
160.096 151.659 159.666 151.767 159.272 151.994 cv
158.297 152.557 157.845 153.677 158.085 154.72 cv
143.651 129.72 li
149.058 126.599 li
168.442 160.174 li
166.719 161.169 li
166.841 160.587 166.758 159.96 166.438 159.404 cv
165.974 158.602 165.134 158.154 164.27 158.154 cv
163.846 158.154 163.416 158.262 163.023 158.489 cv
162.047 159.052 161.595 160.173 161.835 161.215 cv
0 .0392157 .129412 rgb
f
168.442 160.174 mo
149.058 126.599 li
161.301 119.53 li
161.865 120.508 li
159.439 121.908 li
162.428 127.086 li
164.854 125.685 li
166.294 128.178 li
163.868 129.579 li
166.857 134.756 li
169.283 133.356 li
170.722 135.849 li
168.296 137.249 li
171.286 142.427 li
173.711 141.026 li
180.685 153.105 li
168.442 160.174 li
0 .0431373 .145098 rgb
f
173.711 141.026 mo
170.722 135.849 li
175.714 132.967 li
178.703 138.144 li
173.711 141.026 li
182.275 136.082 mo
182.082 135.748 li
189.499 131.465 li
189.692 131.8 li
182.275 136.082 li
169.283 133.356 mo
166.294 128.178 li
171.285 125.296 li
174.275 130.474 li
169.283 133.356 li
193.264 129.738 mo
193.071 129.403 li
200.489 125.121 li
200.682 125.455 li
193.264 129.738 li
177.846 128.412 mo
174.857 123.234 li
182.274 118.952 li
185.264 124.129 li
177.846 128.412 li
164.854 125.685 mo
161.865 120.508 li
166.856 117.625 li
169.846 122.803 li
164.854 125.685 li
188.835 122.067 mo
185.846 116.89 li
193.264 112.607 li
193.498 113.013 li
193.375 113.596 193.458 114.224 193.779 114.781 cv
194.1 115.337 194.603 115.724 195.169 115.908 cv
196.253 117.785 li
188.835 122.067 li
173.417 120.741 mo
170.428 115.564 li
177.846 111.281 li
180.835 116.459 li
173.417 120.741 li
184.406 114.396 mo
181.417 109.219 li
188.834 104.937 li
189.748 106.519 li
189.625 107.101 189.708 107.73 190.029 108.286 cv
190.35 108.842 190.853 109.228 191.419 109.413 cv
191.824 110.114 li
184.406 114.396 li
.0901961 .196078 .317647 rgb
f
171.286 142.427 mo
168.296 137.249 li
170.722 135.849 li
173.711 141.026 li
171.286 142.427 li
166.857 134.756 mo
163.868 129.579 li
166.294 128.178 li
169.283 133.356 li
166.857 134.756 li
162.428 127.086 mo
159.439 121.908 li
161.865 120.508 li
164.854 125.685 li
162.428 127.086 li
f
153.007 105.166 mo
148.019 96.5268 li
149.213 95.8377 li
149.443 96.0591 149.75 96.1791 150.062 96.1791 cv
150.27 96.1791 150.481 96.1261 150.674 96.0147 cv
151.157 95.7359 151.378 95.1772 151.251 94.6612 cv
153.985 93.0826 li
154.215 93.3041 154.522 93.4242 154.835 93.4242 cv
155.042 93.4242 155.253 93.3712 155.446 93.2598 cv
155.929 92.9809 156.151 92.422 156.023 91.906 cv
158.757 90.3276 li
158.987 90.5491 159.293 90.6691 159.606 90.6691 cv
159.814 90.6691 160.025 90.6162 160.218 90.505 cv
160.701 90.2257 160.922 89.667 160.795 89.151 cv
163.529 87.5724 li
163.759 87.7938 164.066 87.9139 164.379 87.9139 cv
164.586 87.9139 164.797 87.8609 164.99 87.7495 cv
165.473 87.4706 165.694 86.9117 165.567 86.3958 cv
168.301 84.8173 li
168.531 85.0388 168.838 85.1589 169.151 85.1589 cv
169.358 85.1589 169.569 85.1059 169.762 84.9947 cv
170.245 84.7153 170.466 84.1567 170.339 83.6407 cv
173.073 82.0622 li
173.303 82.2836 173.61 82.4037 173.923 82.4037 cv
174.13 82.4037 174.341 82.3507 174.534 82.2392 cv
175.017 81.9604 175.238 81.4014 175.111 80.8856 cv
194.652 69.6037 li
200.169 79.1599 li
182.867 89.1491 li
183.517 88.367 183.648 87.2322 183.109 86.3003 cv
182.646 85.498 181.806 85.0497 180.942 85.0497 cv
180.518 85.0497 180.088 85.1579 179.694 85.3853 cv
178.499 86.0757 178.088 87.6044 178.779 88.8003 cv
179.014 89.2081 179.347 89.5243 179.732 89.7368 cv
172.559 93.8774 li
173.089 94.7944 li
169.518 96.8563 li
168.988 95.9395 li
161.571 100.222 li
162.1 101.139 li
158.528 103.201 li
157.999 102.284 li
153.007 105.166 li
180.507 90.5117 mo
180.169 89.9269 li
180.419 90.0083 180.682 90.0505 180.947 90.0505 cv
181.087 90.0505 181.228 90.0386 181.368 90.0146 cv
180.507 90.5117 li
220.491 67.4267 mo
217.389 62.0531 li
220.434 60.2947 li
223.537 65.6683 li
220.491 67.4267 li
0 .0431373 .145098 rgb
f
217.389 62.0531 mo
214.974 57.8706 li
218.02 56.1122 li
220.434 60.2947 li
217.389 62.0531 li
0 .0627451 .203922 rgb
f
150.062 96.1791 mo
149.75 96.1791 149.443 96.0591 149.213 95.8377 cv
151.251 94.6612 li
151.378 95.1772 151.157 95.7359 150.674 96.0147 cv
150.481 96.1261 150.27 96.1791 150.062 96.1791 cv
154.835 93.4242 mo
154.522 93.4242 154.215 93.3041 153.985 93.0826 cv
156.023 91.906 li
156.151 92.422 155.929 92.9809 155.446 93.2598 cv
155.253 93.3712 155.042 93.4242 154.835 93.4242 cv
159.606 90.6691 mo
159.293 90.6691 158.987 90.5491 158.757 90.3276 cv
160.795 89.151 li
160.922 89.667 160.701 90.2257 160.218 90.505 cv
160.025 90.6162 159.814 90.6691 159.606 90.6691 cv
164.379 87.9139 mo
164.066 87.9139 163.759 87.7938 163.529 87.5724 cv
165.567 86.3958 li
165.694 86.9117 165.473 87.4706 164.99 87.7495 cv
164.797 87.8609 164.586 87.9139 164.379 87.9139 cv
169.151 85.1589 mo
168.838 85.1589 168.531 85.0388 168.301 84.8173 cv
170.339 83.6407 li
170.466 84.1567 170.245 84.7153 169.762 84.9947 cv
169.569 85.1059 169.358 85.1589 169.151 85.1589 cv
173.923 82.4037 mo
173.61 82.4037 173.303 82.2836 173.073 82.0622 cv
175.111 80.8856 li
175.238 81.4014 175.017 81.9604 174.534 82.2392 cv
174.341 82.3507 174.13 82.4037 173.923 82.4037 cv
1 .0431373 .160784 rgb
f
200.169 79.1599 mo
194.652 69.6037 li
196.171 68.7266 li
198.586 72.9091 li
217.389 62.0531 li
220.491 67.4267 li
200.169 79.1599 li
0 .0627451 .203922 rgb
f
198.586 72.9091 mo
196.171 68.7266 li
214.974 57.8706 li
217.389 62.0531 li
198.586 72.9091 li
0 .0823529 .258824 rgb
f
135.887 116.273 mo
130.37 106.717 li
135.776 103.595 li
141.294 113.151 li
135.887 116.273 li
0 .0392157 .129412 rgb
f
141.294 113.151 mo
135.776 103.595 li
148.019 96.5268 li
153.007 105.166 li
150.582 106.566 li
151.111 107.483 li
141.294 113.151 li
0 .0431373 .145098 rgb
f
153.537 106.083 mo
153.007 105.166 li
157.999 102.284 li
158.528 103.201 li
153.537 106.083 li
162.1 101.139 mo
161.571 100.222 li
168.988 95.9395 li
169.518 96.8563 li
162.1 101.139 li
173.089 94.7944 mo
172.559 93.8774 li
179.732 89.7368 li
179.871 89.8141 180.018 89.8777 180.169 89.9269 cv
180.507 90.5117 li
173.089 94.7944 li
.0901961 .196078 .317647 rgb
f
151.111 107.483 mo
150.582 106.566 li
153.007 105.166 li
153.537 106.083 li
151.111 107.483 li
f
181.838 135.888 mo
178.084 129.385 li
210.43 110.71 li
214.184 117.213 li
200.489 125.121 li
198.919 122.403 li
199.169 122.485 199.432 122.527 199.697 122.527 cv
200.121 122.527 200.551 122.419 200.944 122.191 cv
202.14 121.501 202.55 119.972 201.859 118.776 cv
201.396 117.974 200.556 117.526 199.692 117.526 cv
199.268 117.526 198.838 117.634 198.444 117.861 cv
197.485 118.415 197.032 119.508 197.246 120.535 cv
190.274 124.56 li
193.071 129.403 li
189.499 131.465 li
186.703 126.622 li
179.285 130.905 li
182.082 135.748 li
181.838 135.888 li
.180392 .396078 .486274 rgb
f
182.082 135.748 mo
179.285 130.905 li
186.703 126.622 li
189.499 131.465 li
182.082 135.748 li
193.071 129.403 mo
190.274 124.56 li
197.246 120.535 li
197.299 120.789 197.392 121.039 197.529 121.276 cv
197.85 121.832 198.353 122.219 198.919 122.403 cv
200.489 125.121 li
193.071 129.403 li
.254902 .498039 .592157 rgb
f
161.301 119.53 mo
160.426 118.015 li
165.418 115.133 li
162.428 109.955 li
157.436 112.837 li
155.997 110.344 li
160.989 107.462 li
158.528 103.201 li
162.1 101.139 li
164.56 105.4 li
171.978 101.117 li
169.518 96.8563 li
173.089 94.7944 li
175.549 99.0551 li
182.421 95.0875 li
182.454 95.1578 182.489 95.2272 182.529 95.2955 cv
182.558 95.3467 182.589 95.3965 182.622 95.4448 cv
178.222 97.9854 li
178.557 98.5669 li
183.08 95.9556 li
183.534 96.3392 184.11 96.5458 184.696 96.5459 cv
185.121 96.5459 185.551 96.4378 185.944 96.2105 cv
186.882 95.6687 187.337 94.6106 187.156 93.6027 cv
197.203 87.8017 li
201.967 96.052 li
161.301 119.53 li
173.417 103.61 mo
165.999 107.893 li
168.989 113.071 li
176.406 108.788 li
173.417 103.61 li
184.406 97.2656 mo
176.988 101.548 li
179.978 106.726 li
187.071 102.631 li
187.48 102.899 187.959 103.041 188.446 103.041 cv
188.871 103.041 189.3 102.933 189.694 102.705 cv
190.89 102.015 191.3 100.486 190.609 99.2905 cv
190.146 98.4885 189.306 98.0401 188.442 98.0401 cv
188.018 98.0401 187.588 98.1481 187.194 98.3755 cv
186.555 98.7446 186.14 99.3535 185.998 100.023 cv
184.406 97.2656 li
182.248 93.5278 mo
180.507 90.5117 li
181.368 90.0146 li
181.651 89.966 181.931 89.8674 182.194 89.7153 cv
182.458 89.5632 182.683 89.3702 182.867 89.1491 cv
200.169 79.1599 li
201.434 81.3513 li
195.468 84.796 li
196.867 87.2202 li
186.942 92.9507 li
186.916 92.8983 186.889 92.8465 186.859 92.7953 cv
186.396 91.9932 185.556 91.5448 184.692 91.5448 cv
184.268 91.5448 183.838 91.6529 183.444 91.8803 cv
182.805 92.2495 182.39 92.8583 182.248 93.5278 cv
221.756 69.6181 mo
220.491 67.4267 li
223.537 65.6683 li
224.802 67.8597 li
221.756 69.6181 li
0 .0431373 .145098 rgb
f
201.434 81.3513 mo
200.169 79.1599 li
220.491 67.4267 li
221.756 69.6181 li
201.434 81.3513 li
0 .0627451 .203922 rgb
f
143.651 129.72 mo
135.887 116.273 li
141.294 113.151 li
149.058 126.599 li
143.651 129.72 li
0 .0392157 .129412 rgb
f
149.058 126.599 mo
141.294 113.151 li
151.111 107.483 li
153.571 111.744 li
155.997 110.344 li
157.436 112.837 li
155.01 114.237 li
158 119.415 li
160.426 118.015 li
161.301 119.53 li
149.058 126.599 li
0 .0431373 .145098 rgb
f
160.426 118.015 mo
157.436 112.837 li
162.428 109.955 li
165.418 115.133 li
160.426 118.015 li
168.989 113.071 mo
165.999 107.893 li
173.417 103.61 li
176.406 108.788 li
168.989 113.071 li
155.997 110.344 mo
153.537 106.083 li
158.528 103.201 li
160.989 107.462 li
155.997 110.344 li
179.978 106.726 mo
176.988 101.548 li
184.406 97.2656 li
185.998 100.023 li
185.875 100.606 185.958 101.234 186.279 101.791 cv
186.481 102.141 186.755 102.423 187.071 102.631 cv
179.978 106.726 li
164.56 105.4 mo
162.1 101.139 li
169.518 96.8563 li
171.978 101.117 li
164.56 105.4 li
175.549 99.0551 mo
173.089 94.7944 li
180.507 90.5117 li
182.248 93.5278 li
182.14 94.0389 182.19 94.5854 182.421 95.0875 cv
175.549 99.0551 li
.0901961 .196078 .317647 rgb
f
158 119.415 mo
155.01 114.237 li
157.436 112.837 li
160.426 118.015 li
158 119.415 li
153.571 111.744 mo
151.111 107.483 li
153.537 106.083 li
155.997 110.344 li
153.571 111.744 li
f
178.557 98.5669 mo
178.222 97.9854 li
182.622 95.4448 li
182.753 95.6394 182.908 95.8103 183.08 95.9556 cv
178.557 98.5669 li
187.156 93.6027 mo
187.116 93.3809 187.045 93.1616 186.942 92.9507 cv
196.867 87.2202 li
197.203 87.8017 li
187.156 93.6027 li
0 .721569 .858823 rgb
f
391.977 14.51 mo
383.6 0 li
396.192 0 li
401.421 9.0574 li
391.977 14.51 li
0 .0235294 .0823529 rgb
f
401.421 9.0574 mo
396.192 0 li
412.692 0 li
412.601 .0388225 412.512 .0833991 412.425 .133853 cv
411.309 .777953 410.877 2.15175 411.385 3.30461 cv
401.421 9.0574 li
f
411.385 3.30461 mo
410.877 2.15175 411.309 .777953 412.425 .133853 cv
412.512 .0833991 412.601 .0388225 412.692 0 cv
414.117 0 li
414.865 1.29565 li
411.385 3.30461 li
.0352941 .0352941 .14902 rgb
f
302.118 66.3906 mo
289.924 45.27 li
295.003 42.3375 li
294.59 43.0801 294.567 44.0148 295.022 44.8042 cv
295.486 45.6059 296.325 46.0542 297.189 46.0542 cv
297.614 46.0542 298.044 45.9461 298.438 45.7187 cv
299.633 45.0289 300.043 43.4996 299.353 42.3042 cv
298.897 41.5145 298.075 41.0678 297.226 41.054 cv
298.403 40.3743 li
310.597 61.4949 li
310.462 61.573 li
309.981 60.9073 309.218 60.5391 308.435 60.5391 cv
308.011 60.5391 307.581 60.6472 307.187 60.8746 cv
306.067 61.5214 305.637 62.9043 306.155 64.0598 cv
302.118 66.3906 li
304.685 54.044 mo
304.261 54.044 303.831 54.152 303.438 54.3794 cv
302.241 55.0698 301.832 56.5987 302.522 57.7944 cv
302.985 58.5964 303.826 59.0448 304.689 59.0449 cv
305.114 59.0449 305.544 58.9368 305.937 58.7094 cv
307.133 58.019 307.543 56.4903 306.853 55.2944 cv
306.389 54.4924 305.549 54.044 304.685 54.044 cv
300.935 47.5487 mo
300.511 47.5487 300.081 47.6568 299.688 47.8842 cv
298.491 48.5748 298.082 50.1035 298.773 51.2994 cv
299.236 52.1014 300.076 52.5497 300.94 52.5498 cv
301.364 52.5498 301.794 52.4417 302.188 52.2144 cv
303.383 51.5239 303.793 49.9951 303.103 48.7989 cv
302.64 47.997 301.799 47.5487 300.935 47.5487 cv
257.088 46.2976 mo
253.985 40.9239 li
283.442 23.9174 li
283.413 24.3905 283.518 24.8771 283.772 25.3184 cv
284.236 26.1204 285.076 26.5688 285.939 26.5688 cv
286.364 26.5688 286.794 26.4607 287.187 26.2334 cv
288.383 25.543 288.793 24.0137 288.102 22.8184 cv
287.848 22.3771 287.479 22.0429 287.055 21.8315 cv
287.537 21.5531 li
290.639 26.9267 li
257.088 46.2976 li
0 .0235294 .0823529 rgb
f
253.985 40.9239 mo
251.571 36.7414 li
285.122 17.3706 li
287.537 21.5531 li
287.055 21.8315 li
286.708 21.6587 286.324 21.5679 285.935 21.5679 cv
285.511 21.5679 285.081 21.676 284.687 21.9034 cv
283.933 22.339 283.491 23.1084 283.442 23.9174 cv
253.985 40.9239 li
0 .0431373 .145098 rgb
f
258.353 48.4889 mo
257.088 46.2976 li
290.639 26.9267 li
298.403 40.3743 li
297.226 41.054 li
297.213 41.0538 297.199 41.0536 297.185 41.0536 cv
296.761 41.0536 296.331 41.1618 295.938 41.3892 cv
295.531 41.6238 295.215 41.9552 295.003 42.3375 cv
289.924 45.27 li
283.425 34.0136 li
258.353 48.4889 li
293.435 34.5584 mo
293.011 34.5584 292.581 34.6664 292.187 34.8935 cv
290.991 35.5839 290.582 37.1128 291.272 38.309 cv
291.736 39.1108 292.576 39.5591 293.439 39.5591 cv
293.864 39.5591 294.294 39.451 294.687 39.2237 cv
295.883 38.5337 296.293 37.0044 295.603 35.8091 cv
295.139 35.0068 294.299 34.5584 293.435 34.5584 cv
289.685 28.063 mo
289.261 28.063 288.831 28.171 288.437 28.3984 cv
287.241 29.0889 286.832 30.6177 287.522 31.814 cv
287.985 32.6156 288.826 33.0638 289.689 33.0639 cv
290.114 33.064 290.543 32.9559 290.937 32.7285 cv
292.133 32.038 292.543 30.5092 291.852 29.3135 cv
291.389 28.5115 290.549 28.063 289.685 28.063 cv
0 .0235294 .0823529 rgb
f
223.537 65.6683 mo
220.434 60.2947 li
229.689 54.9513 li
229.707 54.9414 229.726 54.9313 229.744 54.9209 cv
229.762 54.9104 229.78 54.8997 229.798 54.8888 cv
241.605 48.0718 li
244.708 53.4454 li
234.744 59.198 li
234.736 58.7903 234.627 58.379 234.409 58.0011 cv
233.946 57.1987 233.106 56.7504 232.242 56.7504 cv
231.818 56.7504 231.388 56.8585 230.994 57.0859 cv
229.798 57.7764 229.388 59.3052 230.079 60.501 cv
230.297 60.879 230.599 61.1784 230.948 61.3894 cv
223.537 65.6683 li
0 .0431373 .145098 rgb
f
220.434 60.2947 mo
218.02 56.1122 li
226.543 51.191 li
225.917 51.9714 225.798 53.0866 226.329 54.0059 cv
226.792 54.8077 227.632 55.256 228.496 55.256 cv
228.901 55.256 229.311 55.1577 229.689 54.9513 cv
220.434 60.2947 li
229.798 54.8888 mo
230.952 54.1841 231.339 52.6831 230.659 51.5059 cv
230.196 50.7035 229.356 50.2553 228.492 50.2553 cv
228.366 50.2553 228.24 50.2648 228.114 50.2842 cv
239.19 43.8892 li
241.605 48.0718 li
229.798 54.8888 li
0 .0627451 .203922 rgb
f
224.802 67.8597 mo
223.537 65.6683 li
230.948 61.3894 li
231.339 61.626 231.79 61.7513 232.246 61.7513 cv
232.671 61.7513 233.1 61.6433 233.494 61.416 cv
234.311 60.9439 234.761 60.0795 234.744 59.198 cv
244.708 53.4454 li
245.973 55.6368 li
224.802 67.8597 li
0 .0431373 .145098 rgb
f
98.1663 168.978 mo
92.5385 159.23 li
101.72 153.929 li
107.348 163.677 li
98.1663 168.978 li
0 .0392157 .129412 rgb
f
141.071 175.977 mo
127.766 152.932 li
128.144 152.713 li
130.432 156.675 li
132.465 155.501 li
130.178 151.539 li
131.157 150.974 li
133.444 154.935 li
135.478 153.762 li
133.19 149.8 li
134.169 149.234 li
136.457 153.196 li
138.49 152.023 li
136.202 148.061 li
145.426 142.735 li
141.464 135.875 li
132.242 141.2 li
130.123 137.531 li
143.651 129.72 li
158.085 154.72 li
158.139 154.956 158.229 155.188 158.357 155.409 cv
158.484 155.63 158.64 155.824 158.818 155.989 cv
161.835 161.215 li
161.89 161.451 161.98 161.684 162.107 161.904 cv
162.234 162.125 162.39 162.319 162.567 162.484 cv
163.036 163.295 li
149.508 171.106 li
145.947 164.939 li
143.913 166.112 li
147.474 172.28 li
146.495 172.845 li
142.934 166.678 li
140.901 167.852 li
144.462 174.019 li
143.483 174.584 li
139.922 168.417 li
137.889 169.591 li
141.45 175.758 li
141.071 175.977 li
134.294 158.669 mo
132.261 159.843 li
136.06 166.423 li
138.093 165.248 li
134.294 158.669 li
137.307 156.93 mo
135.273 158.104 li
139.072 164.684 li
141.106 163.51 li
137.307 156.93 li
140.319 155.19 mo
138.286 156.364 li
142.085 162.944 li
144.118 161.77 li
140.319 155.19 li
107.348 163.677 mo
101.72 153.929 li
122.065 142.183 li
124.184 145.852 li
117.612 149.647 li
121.122 155.725 li
107.348 163.677 li
126.217 144.679 mo
124.098 141.009 li
125.077 140.444 li
127.196 144.113 li
126.217 144.679 li
129.229 142.939 mo
127.111 139.27 li
128.09 138.705 li
130.208 142.374 li
129.229 142.939 li
f
141.45 175.758 mo
137.889 169.591 li
139.922 168.417 li
143.483 174.584 li
141.45 175.758 li
144.462 174.019 mo
140.901 167.852 li
142.934 166.678 li
146.495 172.845 li
144.462 174.019 li
147.474 172.28 mo
143.913 166.112 li
145.947 164.939 li
149.508 171.106 li
147.474 172.28 li
136.06 166.423 mo
132.261 159.843 li
134.294 158.669 li
138.093 165.248 li
136.06 166.423 li
139.072 164.684 mo
135.273 158.104 li
137.307 156.93 li
141.106 163.51 li
139.072 164.684 li
142.085 162.944 mo
138.286 156.364 li
140.319 155.19 li
144.118 161.77 li
142.085 162.944 li
130.432 156.675 mo
128.144 152.713 li
130.178 151.539 li
132.465 155.501 li
130.432 156.675 li
133.444 154.935 mo
131.157 150.974 li
133.19 149.8 li
135.478 153.762 li
133.444 154.935 li
136.457 153.196 mo
134.169 149.234 li
136.202 148.061 li
138.49 152.023 li
136.457 153.196 li
124.184 145.852 mo
122.065 142.183 li
124.098 141.009 li
126.217 144.679 li
124.184 145.852 li
127.196 144.113 mo
125.077 140.444 li
127.111 139.27 li
129.229 142.939 li
127.196 144.113 li
130.208 142.374 mo
128.09 138.705 li
130.123 137.531 li
132.242 141.2 li
130.208 142.374 li
0 .129412 .25098 rgb
f
84.4769 145.267 mo
79.8454 137.245 li
89.0272 131.944 li
93.6587 139.966 li
84.4769 145.267 li
0 .0392157 .129412 rgb
f
93.6587 139.966 mo
89.0272 131.944 li
102.604 124.105 li
102.016 123.087 li
130.37 106.717 li
135.887 116.273 li
102.53 135.532 li
102.232 135.016 li
93.6587 139.966 li
f
84.7745 145.783 mo
84.4769 145.267 li
93.6587 139.966 li
93.9564 140.482 li
84.7745 145.783 li
.164706 .101961 .156863 rgb
f
93.9564 140.482 mo
93.6587 139.966 li
102.232 135.016 li
102.53 135.532 li
93.9564 140.482 li
f
92.5385 159.23 mo
84.8127 145.849 li
93.9945 140.548 li
101.72 153.929 li
92.5385 159.23 li
0 .0392157 .129412 rgb
f
101.72 153.929 mo
93.9945 140.548 li
102.568 135.598 li
102.53 135.532 li
135.887 116.273 li
143.651 129.72 li
130.123 137.531 li
129.063 135.694 li
127.03 136.868 li
128.09 138.705 li
127.111 139.27 li
126.051 137.434 li
124.017 138.607 li
125.077 140.444 li
124.098 141.009 li
123.038 139.173 li
121.005 140.347 li
122.065 142.183 li
101.72 153.929 li
115.622 131.024 mo
109.469 134.577 li
114.24 142.841 li
125.506 136.336 li
120.735 128.073 li
120.668 128.111 li
120.423 127.686 li
118.389 128.86 li
118.635 129.285 li
117.656 129.851 li
117.41 129.425 li
115.377 130.599 li
115.622 131.024 li
123.435 125.947 mo
121.402 127.121 li
125.201 133.701 li
127.234 132.526 li
123.435 125.947 li
f
122.065 142.183 mo
121.005 140.347 li
123.038 139.173 li
124.098 141.009 li
122.065 142.183 li
125.077 140.444 mo
124.017 138.607 li
126.051 137.434 li
127.111 139.27 li
125.077 140.444 li
128.09 138.705 mo
127.03 136.868 li
129.063 135.694 li
130.123 137.531 li
128.09 138.705 li
125.201 133.701 mo
121.402 127.121 li
123.435 125.947 li
127.234 132.526 li
125.201 133.701 li
115.622 131.024 mo
115.377 130.599 li
117.41 129.425 li
117.656 129.851 li
115.622 131.024 li
118.635 129.285 mo
118.389 128.86 li
120.423 127.686 li
120.668 128.111 li
118.635 129.285 li
0 .129412 .25098 rgb
f
114.24 142.841 mo
109.469 134.577 li
115.622 131.024 li
119.176 137.179 li
121.209 136.005 li
117.656 129.851 li
118.635 129.285 li
122.188 135.439 li
124.222 134.266 li
120.668 128.111 li
120.735 128.073 li
125.506 136.336 li
114.24 142.841 li
.494118 .92549 1 rgb
f
119.176 137.179 mo
115.622 131.024 li
117.656 129.851 li
121.209 136.005 li
119.176 137.179 li
122.188 135.439 mo
118.635 129.285 li
120.668 128.111 li
124.222 134.266 li
122.188 135.439 li
.494118 .933333 1 rgb
f
84.8127 145.849 mo
84.7745 145.783 li
93.9564 140.482 li
93.9945 140.548 li
84.8127 145.849 li
.164706 .101961 .156863 rgb
f
93.9945 140.548 mo
93.9564 140.482 li
102.53 135.532 li
102.568 135.598 li
93.9945 140.548 li
f
254.724 47.6622 mo
251.622 42.2885 li
253.985 40.9239 li
257.088 46.2976 li
254.724 47.6622 li
0 .0235294 .0823529 rgb
f
251.622 42.2885 mo
249.207 38.106 li
251.571 36.7414 li
253.985 40.9239 li
251.622 42.2885 li
0 .0431373 .145098 rgb
f
244.708 53.4454 mo
241.605 48.0718 li
251.622 42.2885 li
254.724 47.6622 li
244.708 53.4454 li
f
241.605 48.0718 mo
239.19 43.8892 li
249.207 38.106 li
251.622 42.2885 li
241.605 48.0718 li
0 .0627451 .203922 rgb
f
255.99 49.8535 mo
254.724 47.6622 li
257.088 46.2976 li
258.353 48.4889 li
255.99 49.8535 li
0 .0235294 .0823529 rgb
f
245.973 55.6368 mo
244.708 53.4454 li
254.724 47.6622 li
255.99 49.8535 li
245.973 55.6368 li
0 .0431373 .145098 rgb
f
310.597 61.4949 mo
298.403 40.3743 li
326.192 24.3303 li
327.874 27.2431 li
330.651 25.6397 li
328.97 22.7269 li
330.307 21.9549 li
331.988 24.8677 li
334.766 23.2642 li
333.084 20.3514 li
334.421 19.5795 li
336.103 22.4922 li
338.88 20.8887 li
337.198 17.9761 li
368.334 0 li
383.6 0 li
391.977 14.51 li
374.048 24.8615 li
373.339 23.6333 li
355.638 33.8528 li
355.44 33.5107 li
349.593 36.8872 li
349.79 37.229 li
346.974 38.855 li
346.776 38.5131 li
340.928 41.8897 li
341.125 42.2317 li
340.934 42.3423 li
341.643 43.5707 li
339.019 45.0858 li
338.112 43.5157 li
332.264 46.8921 li
333.17 48.4624 li
310.597 61.4949 li
334.163 31.7227 mo
331.386 33.3262 li
333.175 36.4247 li
335.952 34.8213 li
334.163 31.7227 li
338.277 29.3471 mo
335.5 30.9507 li
337.289 34.0493 li
340.066 32.4458 li
338.277 29.3471 li
331.513 27.1318 mo
328.735 28.7354 li
330.524 31.8339 li
333.302 30.2305 li
331.513 27.1318 li
342.392 26.9716 mo
339.614 28.5753 li
341.404 31.6738 li
344.182 30.0703 li
342.392 26.9716 li
335.627 24.7563 mo
332.85 26.3598 li
334.639 29.4585 li
337.416 27.855 li
335.627 24.7563 li
339.741 22.3808 mo
336.964 23.9843 li
338.753 27.083 li
341.53 25.4795 li
339.741 22.3808 li
290.639 26.9267 mo
287.537 21.5531 li
295.7 16.8402 li
297.164 19.3764 li
313.796 9.77441 li
312.332 7.23783 li
324.868 0 li
337.278 0 li
290.639 26.9267 li
f
297.164 19.3764 mo
295.7 16.8402 li
312.332 7.23783 li
313.796 9.77441 li
297.164 19.3764 li
.847059 .376471 .301961 rgb
f
287.537 21.5531 mo
285.122 17.3706 li
293.285 12.6576 li
295.7 16.8402 li
287.537 21.5531 li
312.332 7.23783 mo
309.917 3.05523 li
315.209 0 li
324.868 0 li
312.332 7.23783 li
0 .0627451 .203922 rgb
f
295.7 16.8402 mo
293.285 12.6576 li
309.917 3.05523 li
312.332 7.23783 li
295.7 16.8402 li
.847059 .388235 .34902 rgb
f
298.403 40.3743 mo
290.639 26.9267 li
337.278 0 li
368.334 0 li
337.198 17.9761 li
337.091 17.79 li
334.314 19.3935 li
334.421 19.5795 li
333.084 20.3514 li
332.977 20.1655 li
330.199 21.769 li
330.307 21.9549 li
328.97 22.7269 li
328.862 22.541 li
326.085 24.1445 li
326.192 24.3303 li
298.403 40.3743 li
320.899 15.1635 mo
312.494 20.0161 li
314.741 23.9077 li
330.129 15.0234 li
327.882 11.1318 li
327.791 11.1841 li
327.676 10.9839 li
324.898 12.5874 li
325.014 12.7875 li
323.676 13.5599 li
323.56 13.3594 li
320.783 14.9629 li
320.899 15.1635 li
326.211 17.9502 mo
323.435 19.5537 li
325.223 22.6524 li
328 21.0489 li
326.211 17.9502 li
330.326 15.5747 mo
327.549 17.1782 li
329.338 20.2769 li
332.115 18.6734 li
330.326 15.5747 li
334.44 13.1993 mo
331.663 14.8027 li
333.452 17.9014 li
336.23 16.2978 li
334.44 13.1993 li
331.79 8.60847 mo
329.013 10.2119 li
330.802 13.3106 li
333.579 11.707 li
331.79 8.60847 li
0 .0431373 .145098 rgb
f
333.17 48.4624 mo
332.264 46.8921 li
338.112 43.5157 li
339.019 45.0858 li
333.17 48.4624 li
341.125 42.2317 mo
340.928 41.8897 li
346.776 38.5131 li
346.974 38.855 li
341.125 42.2317 li
349.79 37.229 mo
349.593 36.8872 li
355.44 33.5107 li
355.638 33.8528 li
349.79 37.229 li
0 .145098 .286274 rgb
f
341.643 43.5707 mo
340.934 42.3423 li
341.125 42.2317 li
341.835 43.4601 li
341.643 43.5707 li
347.683 40.0833 mo
346.974 38.855 li
349.79 37.229 li
350.499 38.4575 li
347.683 40.0833 li
356.347 35.0811 mo
355.638 33.8528 li
373.339 23.6333 li
374.048 24.8615 li
356.347 35.0811 li
.137255 .698039 .811765 rgb
f
341.835 43.4601 mo
341.125 42.2317 li
346.974 38.855 li
347.683 40.0833 li
341.835 43.4601 li
350.499 38.4575 mo
349.79 37.229 li
355.638 33.8528 li
356.347 35.0811 li
350.499 38.4575 li
.137255 .72549 .843137 rgb
f
333.175 36.4247 mo
331.386 33.3262 li
334.163 31.7227 li
335.952 34.8213 li
333.175 36.4247 li
337.289 34.0493 mo
335.5 30.9507 li
338.277 29.3471 li
340.066 32.4458 li
337.289 34.0493 li
330.524 31.8339 mo
328.735 28.7354 li
331.513 27.1318 li
333.302 30.2305 li
330.524 31.8339 li
341.404 31.6738 mo
339.614 28.5753 li
342.392 26.9716 li
344.182 30.0703 li
341.404 31.6738 li
334.639 29.4585 mo
332.85 26.3598 li
335.627 24.7563 li
337.416 27.855 li
334.639 29.4585 li
327.874 27.2431 mo
326.192 24.3303 li
328.97 22.7269 li
330.651 25.6397 li
327.874 27.2431 li
0 .176471 .329412 rgb
f
326.192 24.3303 mo
326.085 24.1445 li
328.862 22.541 li
328.97 22.7269 li
326.192 24.3303 li
f
338.753 27.083 mo
336.964 23.9843 li
339.741 22.3808 li
341.53 25.4795 li
338.753 27.083 li
331.988 24.8677 mo
330.307 21.9549 li
333.084 20.3514 li
334.766 23.2642 li
331.988 24.8677 li
f
325.223 22.6524 mo
323.435 19.5537 li
326.211 17.9502 li
328 21.0489 li
325.223 22.6524 li
330.307 21.9549 mo
330.199 21.769 li
332.977 20.1655 li
333.084 20.3514 li
330.307 21.9549 li
f
336.103 22.4922 mo
334.421 19.5795 li
337.198 17.9761 li
338.88 20.8887 li
336.103 22.4922 li
f
329.338 20.2769 mo
327.549 17.1782 li
330.326 15.5747 li
332.115 18.6734 li
329.338 20.2769 li
334.421 19.5795 mo
334.314 19.3935 li
337.091 17.79 li
337.198 17.9761 li
334.421 19.5795 li
333.452 17.9014 mo
331.663 14.8027 li
334.44 13.1993 li
336.23 16.2978 li
333.452 17.9014 li
320.899 15.1635 mo
320.783 14.9629 li
323.56 13.3594 li
323.676 13.5599 li
320.899 15.1635 li
330.802 13.3106 mo
329.013 10.2119 li
331.79 8.60847 li
333.579 11.707 li
330.802 13.3106 li
325.014 12.7875 mo
324.898 12.5874 li
327.676 10.9839 li
327.791 11.1841 li
325.014 12.7875 li
f
314.741 23.9077 mo
312.494 20.0161 li
320.899 15.1635 li
322.572 18.0616 li
325.35 16.4581 li
323.676 13.5599 li
325.014 12.7875 li
326.688 15.6861 li
329.465 14.0824 li
327.791 11.1841 li
327.882 11.1318 li
330.129 15.0234 li
314.741 23.9077 li
.00784314 .0784314 .180392 rgb
f
322.572 18.0616 mo
320.899 15.1635 li
323.676 13.5599 li
325.35 16.4581 li
322.572 18.0616 li
326.688 15.6861 mo
325.014 12.7875 li
327.791 11.1841 li
329.465 14.0824 li
326.688 15.6861 li
.00784314 .207843 .356863 rgb
f
121.122 155.725 mo
117.612 149.647 li
124.184 145.852 li
124.804 146.927 li
126.837 145.753 li
126.217 144.679 li
127.196 144.113 li
127.816 145.188 li
129.85 144.014 li
129.229 142.939 li
130.208 142.374 li
130.829 143.448 li
132.862 142.274 li
132.242 141.2 li
141.464 135.875 li
145.426 142.735 li
136.202 148.061 li
134.691 145.442 li
132.658 146.616 li
134.169 149.234 li
133.19 149.8 li
131.679 147.182 li
129.645 148.355 li
131.157 150.974 li
130.178 151.539 li
128.666 148.921 li
126.633 150.095 li
128.144 152.713 li
127.766 152.932 li
127.314 152.149 li
121.122 155.725 li
1 .282353 .129412 rgb
f
128.144 152.713 mo
126.633 150.095 li
128.666 148.921 li
130.178 151.539 li
128.144 152.713 li
131.157 150.974 mo
129.645 148.355 li
131.679 147.182 li
133.19 149.8 li
131.157 150.974 li
134.169 149.234 mo
132.658 146.616 li
134.691 145.442 li
136.202 148.061 li
134.169 149.234 li
124.804 146.927 mo
124.184 145.852 li
126.217 144.679 li
126.837 145.753 li
124.804 146.927 li
127.816 145.188 mo
127.196 144.113 li
129.229 142.939 li
129.85 144.014 li
127.816 145.188 li
130.829 143.448 mo
130.208 142.374 li
132.242 141.2 li
132.862 142.274 li
130.829 143.448 li
1 .345098 .25098 rgb
f
109.708 188.969 mo
98.1663 168.978 li
107.348 163.677 li
118.89 183.668 li
109.708 188.969 li
0 .0392157 .129412 rgb
f
122.221 186.86 mo
120.007 183.023 li
118.89 183.668 li
107.348 163.677 li
121.122 155.725 li
121.573 156.507 li
127.766 152.932 li
141.071 175.977 li
122.221 186.86 li
f
121.573 156.507 mo
121.122 155.725 li
127.314 152.149 li
127.766 152.932 li
121.573 156.507 li
1 .282353 .129412 rgb
f
111.923 192.805 mo
109.708 188.969 li
118.89 183.668 li
121.105 187.504 li
111.923 192.805 li
.85098 .407843 .329412 rgb
f
121.105 187.504 mo
118.89 183.668 li
120.007 183.023 li
122.221 186.86 li
121.105 187.504 li
f
193.526 175.346 mo
192.59 173.725 li
233.256 150.247 li
234.192 151.868 li
193.526 175.346 li
.0156863 .0666667 .180392 rgb
f
192.59 173.725 mo
180.685 153.105 li
221.351 129.627 li
233.256 150.247 li
192.59 173.725 li
.0156863 .0705882 .192157 rgb
f
175.877 185.536 mo
173.818 181.97 li
174.284 182.405 174.898 182.64 175.524 182.64 cv
175.948 182.64 176.378 182.532 176.772 182.305 cv
177.968 181.614 178.378 180.086 177.687 178.89 cv
177.224 178.088 176.384 177.639 175.52 177.639 cv
175.096 177.639 174.666 177.747 174.272 177.975 cv
173.297 178.538 172.845 179.658 173.085 180.701 cv
170.068 175.475 li
170.534 175.91 171.148 176.145 171.774 176.145 cv
172.198 176.145 172.628 176.037 173.022 175.81 cv
174.218 175.119 174.628 173.591 173.937 172.395 cv
173.474 171.593 172.634 171.144 171.77 171.144 cv
171.346 171.144 170.916 171.252 170.522 171.48 cv
169.547 172.042 169.095 173.163 169.335 174.206 cv
166.317 168.979 li
166.784 169.414 167.398 169.65 168.024 169.65 cv
168.448 169.65 168.878 169.542 169.272 169.314 cv
170.468 168.624 170.878 167.095 170.188 165.899 cv
169.725 165.097 168.884 164.649 168.02 164.649 cv
167.596 164.649 167.166 164.757 166.773 164.984 cv
165.797 165.548 165.345 166.669 165.586 167.711 cv
163.036 163.295 li
163.495 163.03 li
163.746 163.112 164.009 163.155 164.274 163.155 cv
164.699 163.155 165.128 163.047 165.522 162.819 cv
166.162 162.45 166.577 161.84 166.719 161.169 cv
168.442 160.174 li
180.347 180.794 li
185.992 177.535 li
185.975 177.99 186.081 178.455 186.326 178.879 cv
186.419 179.04 186.527 179.186 186.647 179.318 cv
175.877 185.536 li
190.876 176.876 mo
190.822 176.706 190.749 176.54 190.656 176.379 cv
190.412 175.955 190.062 175.63 189.659 175.418 cv
192.59 173.725 li
193.526 175.346 li
190.876 176.876 li
.0156863 .0666667 .180392 rgb
f
180.347 180.794 mo
168.442 160.174 li
180.685 153.105 li
192.59 173.725 li
189.659 175.418 li
189.299 175.228 188.896 175.128 188.489 175.128 cv
188.064 175.128 187.635 175.236 187.241 175.464 cv
186.468 175.909 186.024 176.705 185.992 177.535 cv
180.347 180.794 li
184.738 168.632 mo
184.314 168.632 183.884 168.74 183.491 168.968 cv
182.295 169.658 181.885 171.187 182.576 172.384 cv
183.039 173.185 183.879 173.633 184.742 173.633 cv
185.167 173.633 185.597 173.525 185.991 173.298 cv
187.187 172.607 187.596 171.079 186.906 169.883 cv
186.443 169.081 185.602 168.632 184.738 168.632 cv
180.988 162.137 mo
180.564 162.137 180.134 162.245 179.741 162.473 cv
178.545 163.163 178.135 164.692 178.826 165.889 cv
179.289 166.69 180.129 167.138 180.992 167.138 cv
181.417 167.138 181.847 167.03 182.241 166.803 cv
183.437 166.112 183.846 164.584 183.156 163.388 cv
182.693 162.586 181.852 162.137 180.988 162.137 cv
177.238 155.642 mo
176.814 155.642 176.384 155.75 175.991 155.978 cv
174.795 156.668 174.385 158.197 175.076 159.393 cv
175.539 160.195 176.379 160.643 177.243 160.643 cv
177.667 160.643 178.097 160.535 178.491 160.308 cv
179.687 159.617 180.096 158.088 179.406 156.893 cv
178.943 156.091 178.103 155.642 177.238 155.642 cv
.0156863 .0705882 .192157 rgb
f
153.911 198.218 mo
141.071 175.977 li
141.45 175.758 li
141.688 176.171 li
143.721 174.997 li
143.483 174.584 li
144.462 174.019 li
144.7 174.432 li
146.733 173.258 li
146.495 172.845 li
147.474 172.28 li
147.712 172.692 li
149.746 171.519 li
149.508 171.106 li
163.036 163.295 li
165.586 167.711 li
165.64 167.947 165.73 168.179 165.857 168.399 cv
165.985 168.62 166.141 168.814 166.317 168.979 cv
169.335 174.206 li
169.39 174.442 169.48 174.675 169.607 174.896 cv
169.735 175.116 169.891 175.31 170.068 175.475 cv
173.085 180.701 li
173.14 180.937 173.229 181.169 173.357 181.39 cv
173.484 181.61 173.64 181.804 173.818 181.97 cv
175.877 185.536 li
153.911 198.218 li
.0156863 .0666667 .180392 rgb
f
141.688 176.171 mo
141.45 175.758 li
143.483 174.584 li
143.721 174.997 li
141.688 176.171 li
144.7 174.432 mo
144.462 174.019 li
146.495 172.845 li
146.733 173.258 li
144.7 174.432 li
147.712 172.692 mo
147.474 172.28 li
149.508 171.106 li
149.746 171.519 li
147.712 172.692 li
.0156863 .14902 .294118 rgb
f
200.524 187.466 mo
193.526 175.346 li
234.192 151.868 li
241.19 163.988 li
239.427 165.006 li
239.298 164.783 li
229.121 170.658 li
229.25 170.881 li
200.524 187.466 li
.0156863 .0862745 .231373 rgb
f
184.247 200.034 mo
181.317 194.96 li
181.784 195.395 182.398 195.631 183.025 195.631 cv
183.449 195.631 183.878 195.523 184.272 195.296 cv
185.468 194.606 185.878 193.076 185.188 191.88 cv
184.725 191.078 183.884 190.63 183.021 190.63 cv
182.596 190.63 182.166 190.738 181.772 190.966 cv
180.797 191.529 180.345 192.649 180.585 193.691 cv
177.567 188.464 li
178.034 188.9 178.648 189.135 179.274 189.135 cv
179.698 189.135 180.128 189.027 180.522 188.8 cv
181.718 188.109 182.128 186.581 181.438 185.385 cv
180.974 184.583 180.134 184.135 179.27 184.135 cv
178.846 184.135 178.416 184.243 178.022 184.47 cv
177.047 185.033 176.595 186.154 176.835 187.196 cv
175.877 185.536 li
186.647 179.318 li
187.127 179.842 187.802 180.128 188.492 180.128 cv
188.917 180.128 189.347 180.02 189.741 179.793 cv
190.776 179.196 191.222 177.97 190.876 176.876 cv
193.526 175.346 li
200.524 187.466 li
198.449 188.664 li
199.822 191.042 li
198.017 192.084 li
198.576 191.31 198.664 190.249 198.156 189.368 cv
197.693 188.567 196.853 188.119 195.989 188.119 cv
195.565 188.119 195.135 188.227 194.741 188.454 cv
193.545 189.145 193.135 190.673 193.826 191.869 cv
194.289 192.671 195.129 193.119 195.993 193.119 cv
196.077 193.119 196.162 193.115 196.246 193.107 cv
184.247 200.034 li
192.239 181.623 mo
191.815 181.623 191.385 181.732 190.991 181.959 cv
189.795 182.649 189.385 184.178 190.076 185.373 cv
190.539 186.176 191.379 186.624 192.243 186.624 cv
192.667 186.624 193.097 186.516 193.491 186.289 cv
194.686 185.599 195.097 184.069 194.406 182.873 cv
193.943 182.071 193.103 181.623 192.239 181.623 cv
f
162.282 212.716 mo
153.911 198.218 li
175.877 185.536 li
176.835 187.196 li
176.89 187.432 176.979 187.664 177.107 187.885 cv
177.234 188.105 177.39 188.299 177.567 188.464 cv
180.585 193.691 li
180.639 193.927 180.729 194.159 180.857 194.38 cv
180.984 194.601 181.14 194.794 181.317 194.96 cv
184.247 200.034 li
162.282 212.716 li
f
124.764 215.046 mo
112.208 193.298 li
121.39 187.997 li
133.946 209.745 li
124.764 215.046 li
.0156863 .0666667 .180392 rgb
f
133.946 209.745 mo
121.39 187.997 li
122.506 187.353 li
122.221 186.86 li
141.071 175.977 li
153.911 198.218 li
133.946 209.745 li
f
132.977 229.271 mo
124.764 215.046 li
133.946 209.745 li
142.159 223.97 li
132.977 229.271 li
.0156863 .0862745 .231373 rgb
f
142.159 223.97 mo
133.946 209.745 li
153.911 198.218 li
162.282 212.716 li
151.937 218.688 li
151.78 218.415 li
142.159 223.97 li
f
229.25 170.881 mo
229.121 170.658 li
239.298 164.783 li
239.427 165.006 li
229.25 170.881 li
.0156863 .219608 .4 rgb
f
201.897 189.844 mo
200.524 187.466 li
229.25 170.881 li
230.623 173.259 li
201.897 189.844 li
240.8 167.384 mo
239.427 165.006 li
241.19 163.988 li
242.562 166.366 li
240.8 167.384 li
.0156863 .862745 1 rgb
f
199.822 191.042 mo
198.449 188.664 li
200.524 187.466 li
201.897 189.844 li
199.822 191.042 li
f
230.623 173.259 mo
229.25 170.881 li
239.427 165.006 li
240.8 167.384 li
230.623 173.259 li
.0156863 .886274 1 rgb
f
112.208 193.298 mo
111.923 192.805 li
121.105 187.504 li
121.39 187.997 li
112.208 193.298 li
.854902 .423529 .364706 rgb
f
121.39 187.997 mo
121.105 187.504 li
122.221 186.86 li
122.506 187.353 li
121.39 187.997 li
f
221.351 129.627 mo
214.184 117.213 li
220.15 113.769 li
227.317 126.182 li
221.351 129.627 li
247.64 114.449 mo
228.255 80.8743 li
231.301 79.1159 li
250.685 112.691 li
247.64 114.449 li
210.43 110.71 mo
201.967 96.052 li
207.933 92.6074 li
216.396 107.266 li
210.43 110.71 li
0 .0431373 .145098 rgb
f
227.317 126.182 mo
220.15 113.769 li
222.937 112.16 li
219.183 105.657 li
216.396 107.266 li
207.933 92.6074 li
228.255 80.8743 li
247.64 114.449 li
227.317 126.182 li
241.199 104.659 mo
238.317 106.323 li
241.487 111.813 li
244.369 110.149 li
241.199 104.659 li
0 .0627451 .203922 rgb
f
241.487 111.813 mo
238.317 106.323 li
241.199 104.659 li
244.369 110.149 li
241.487 111.813 li
.454902 .0627451 1 rgb
f
214.184 117.213 mo
210.43 110.71 li
216.396 107.266 li
220.15 113.769 li
214.184 117.213 li
.180392 .396078 .486274 rgb
f
220.15 113.769 mo
216.396 107.266 li
219.183 105.657 li
222.937 112.16 li
220.15 113.769 li
.180392 .407843 .52549 rgb
f
201.967 96.052 mo
197.203 87.8017 li
203.169 84.357 li
207.933 92.6074 li
201.967 96.052 li
196.867 87.2202 mo
195.468 84.796 li
201.434 81.3513 li
202.834 83.7756 li
196.867 87.2202 li
228.255 80.8743 mo
224.99 75.2193 li
228.036 73.4609 li
231.301 79.1159 li
228.255 80.8743 li
224.723 74.7563 mo
224.594 74.5333 li
227.64 72.7749 li
227.769 72.9979 li
224.723 74.7563 li
224.327 74.0704 mo
224.198 73.8474 li
227.244 72.089 li
227.373 72.312 li
224.327 74.0704 li
223.931 73.3844 mo
223.802 73.1616 li
226.848 71.4032 li
226.977 71.626 li
223.931 73.3844 li
223.535 72.6985 mo
223.492 72.6239 li
226.537 70.8655 li
226.58 70.94 li
223.535 72.6985 li
223.139 72.0125 mo
221.756 69.6181 li
224.802 67.8597 li
226.184 70.254 li
223.139 72.0125 li
0 .0431373 .145098 rgb
f
207.933 92.6074 mo
203.169 84.357 li
223.492 72.6239 li
223.535 72.6985 li
218.489 75.6118 li
218.756 76.0747 li
223.802 73.1616 li
223.931 73.3844 li
218.885 76.2973 li
219.152 76.7608 li
224.198 73.8474 li
224.327 74.0704 li
219.281 76.9833 li
219.549 77.4463 li
224.594 74.5333 li
224.723 74.7563 li
219.677 77.6694 li
219.945 78.1323 li
224.99 75.2193 li
228.255 80.8743 li
207.933 92.6074 li
202.834 83.7756 mo
201.434 81.3513 li
221.756 69.6181 li
223.139 72.0125 li
218.093 74.9257 li
218.11 74.9557 li
202.834 83.7756 li
0 .0627451 .203922 rgb
f
224.99 75.2193 mo
224.723 74.7563 li
227.769 72.9979 li
228.036 73.4609 li
224.99 75.2193 li
0 .0941176 .211765 rgb
f
219.945 78.1323 mo
219.677 77.6694 li
224.723 74.7563 li
224.99 75.2193 li
219.945 78.1323 li
0 .113725 .266667 rgb
f
224.594 74.5333 mo
224.327 74.0704 li
227.373 72.312 li
227.64 72.7749 li
224.594 74.5333 li
0 .0941176 .211765 rgb
f
219.549 77.4463 mo
219.281 76.9833 li
224.327 74.0704 li
224.594 74.5333 li
219.549 77.4463 li
0 .113725 .266667 rgb
f
224.198 73.8474 mo
223.931 73.3844 li
226.977 71.626 li
227.244 72.089 li
224.198 73.8474 li
0 .0941176 .211765 rgb
f
219.152 76.7608 mo
218.885 76.2973 li
223.931 73.3844 li
224.198 73.8474 li
219.152 76.7608 li
0 .113725 .266667 rgb
f
223.802 73.1616 mo
223.535 72.6985 li
226.58 70.94 li
226.848 71.4032 li
223.802 73.1616 li
0 .0941176 .211765 rgb
f
218.756 76.0747 mo
218.489 75.6118 li
223.535 72.6985 li
223.802 73.1616 li
218.756 76.0747 li
0 .113725 .266667 rgb
f
223.156 72.0425 mo
223.139 72.0125 li
226.184 70.254 li
226.202 70.2841 li
223.156 72.0425 li
0 .0941176 .211765 rgb
f
218.11 74.9557 mo
218.093 74.9257 li
223.139 72.0125 li
223.156 72.0425 li
218.11 74.9557 li
0 .113725 .266667 rgb
f
197.203 87.8017 mo
196.867 87.2202 li
202.834 83.7756 li
203.169 84.357 li
197.203 87.8017 li
223.492 72.6239 mo
223.406 72.4756 li
226.452 70.7172 li
226.537 70.8655 li
223.492 72.6239 li
0 .721569 .858823 rgb
f
203.169 84.357 mo
202.834 83.7756 li
218.11 74.9557 li
218.36 75.3887 li
223.406 72.4756 li
223.492 72.6239 li
203.169 84.357 li
0 .72549 .866667 rgb
f
223.406 72.4756 mo
223.156 72.0425 li
226.202 70.2841 li
226.452 70.7172 li
223.406 72.4756 li
0 .737255 .866667 rgb
f
218.36 75.3887 mo
218.11 74.9557 li
223.156 72.0425 li
223.406 72.4756 li
218.36 75.3887 li
0 .741176 .87451 rgb
f
250.685 112.691 mo
231.301 79.1159 li
239.049 74.6427 li
239.274 74.708 239.509 74.7416 239.746 74.7416 cv
240.17 74.7417 240.6 74.6336 240.994 74.4062 cv
241.607 74.0521 242.014 73.4772 242.171 72.8399 cv
252.472 66.893 li
271.856 100.468 li
269.983 101.549 li
269.728 101.602 269.477 101.696 269.239 101.833 cv
269.001 101.97 268.794 102.141 268.621 102.335 cv
250.685 112.691 li
250.992 89.2264 mo
250.568 89.2264 250.138 89.3345 249.744 89.5619 cv
248.548 90.2525 248.139 91.7812 248.829 92.9766 cv
249.292 93.7789 250.132 94.2274 250.996 94.2274 cv
251.421 94.2275 251.85 94.1194 252.244 93.8921 cv
253.439 93.2017 253.85 91.6728 253.159 90.4766 cv
252.696 89.6747 251.856 89.2264 250.992 89.2264 cv
247.242 82.7314 mo
246.818 82.7314 246.388 82.8395 245.994 83.0669 cv
244.798 83.7573 244.389 85.2857 245.079 86.4814 cv
245.542 87.2837 246.382 87.732 247.246 87.732 cv
247.67 87.732 248.1 87.6239 248.494 87.3964 cv
249.689 86.706 250.1 85.1778 249.409 83.9814 cv
248.946 83.1796 248.106 82.7314 247.242 82.7314 cv
243.492 76.2359 mo
243.067 76.2359 242.638 76.3439 242.244 76.5712 cv
241.048 77.2618 240.638 78.7905 241.328 79.9864 cv
241.792 80.7886 242.632 81.2368 243.496 81.2369 cv
243.92 81.2369 244.35 81.1288 244.744 80.9014 cv
245.94 80.2109 246.35 78.6821 245.659 77.4862 cv
245.196 76.6843 244.356 76.2359 243.492 76.2359 cv
0 .0431373 .145098 rgb
f
231.301 79.1159 mo
228.036 73.4609 li
233.125 70.5229 li
232.857 70.06 li
227.769 72.9979 li
227.64 72.7749 li
232.729 69.8369 li
232.461 69.3741 li
227.373 72.312 li
227.244 72.089 li
232.332 69.1508 li
232.065 68.6881 li
226.977 71.626 li
226.848 71.4032 li
231.936 68.4653 li
231.669 68.002 li
226.58 70.94 li
226.537 70.8655 li
233.696 66.7324 li
233.735 66.8217 233.779 66.9098 233.829 66.996 cv
234.292 67.798 235.132 68.2465 235.996 68.2465 cv
236.42 68.2466 236.85 68.1385 237.244 67.911 cv
238.344 67.2759 238.779 65.9307 238.304 64.7887 cv
248.019 59.1804 li
248.147 59.4031 li
238.411 65.0244 li
238.679 65.4873 li
248.415 59.8663 li
248.543 60.0889 li
238.807 65.7099 li
239.075 66.1734 li
248.811 60.5524 li
248.939 60.7748 li
239.203 66.396 li
239.471 66.8594 li
249.207 61.2382 li
252.472 66.893 li
242.171 72.8399 li
242.321 72.2348 242.245 71.5735 241.909 70.9912 cv
241.446 70.1892 240.606 69.7408 239.742 69.7408 cv
239.317 69.7408 238.888 69.8488 238.494 70.0762 cv
237.298 70.7666 236.888 72.2954 237.579 73.4917 cv
237.915 74.0739 238.45 74.4696 239.049 74.6427 cv
231.301 79.1159 li
226.184 70.254 mo
224.802 67.8597 li
245.973 55.6368 li
247.355 58.0312 li
237.619 63.6523 li
237.636 63.6823 li
237.509 63.7562 li
237.071 63.4238 236.536 63.2457 235.992 63.2457 cv
235.567 63.2457 235.138 63.3537 234.744 63.5811 cv
233.845 64.1002 233.39 65.0937 233.513 66.063 cv
231.29 67.3463 li
231.273 67.316 li
226.184 70.254 li
238.047 64.3197 mo
238.031 64.2959 238.014 64.2725 237.997 64.2494 cv
247.708 58.6426 li
247.751 58.7173 li
238.047 64.3197 li
f
228.036 73.4609 mo
227.769 72.9979 li
232.857 70.06 li
233.125 70.5229 li
228.036 73.4609 li
227.64 72.7749 mo
227.373 72.312 li
232.461 69.3741 li
232.729 69.8369 li
227.64 72.7749 li
227.244 72.089 mo
226.977 71.626 li
232.065 68.6881 li
232.332 69.1508 li
227.244 72.089 li
226.848 71.4032 mo
226.58 70.94 li
231.669 68.002 li
231.936 68.4653 li
226.848 71.4032 li
226.202 70.2841 mo
226.184 70.254 li
231.273 67.316 li
231.29 67.3463 li
226.202 70.2841 li
239.471 66.8594 mo
239.203 66.396 li
248.939 60.7748 li
249.207 61.2382 li
239.471 66.8594 li
239.075 66.1734 mo
238.807 65.7099 li
248.543 60.0889 li
248.811 60.5524 li
239.075 66.1734 li
238.679 65.4873 mo
238.411 65.0244 li
248.147 59.4031 li
248.415 59.8663 li
238.679 65.4873 li
238.304 64.7887 mo
238.263 64.6894 238.214 64.5917 238.159 64.4961 cv
238.124 64.4352 238.087 64.3765 238.047 64.3197 cv
247.751 58.7173 li
248.019 59.1804 li
238.304 64.7887 li
237.636 63.6823 mo
237.619 63.6523 li
247.355 58.0312 li
247.373 58.0613 li
237.636 63.6823 li
0 .0941176 .211765 rgb
f
226.537 70.8655 mo
226.452 70.7172 li
231.541 67.7793 li
231.29 67.3463 li
233.513 66.063 li
233.542 66.2896 233.602 66.5148 233.696 66.7324 cv
226.537 70.8655 li
237.997 64.2494 mo
237.962 64.2028 237.926 64.1575 237.888 64.114 cv
247.622 58.4942 li
247.708 58.6426 li
237.997 64.2494 li
237.879 64.1036 mo
237.767 63.9738 237.642 63.8579 237.509 63.7562 cv
237.636 63.6823 li
237.879 64.1036 li
0 .721569 .858823 rgb
f
226.452 70.7172 mo
226.202 70.2841 li
231.29 67.3463 li
231.541 67.7793 li
226.452 70.7172 li
237.888 64.114 mo
237.885 64.1105 237.882 64.107 237.879 64.1036 cv
237.636 63.6823 li
247.373 58.0613 li
247.622 58.4942 li
237.888 64.114 li
0 .737255 .866667 rgb
f
284.236 93.32 mo
264.852 59.7452 li
274.891 53.9492 li
277.068 57.7202 li
289.542 50.5186 li
287.365 46.7472 li
289.924 45.27 li
302.118 66.3906 li
296.082 69.8754 li
303.272 82.3295 li
284.236 93.32 li
0 .0235294 .0823529 rgb
f
264.852 59.7452 mo
261.587 54.0902 li
272.177 47.9766 li
271.909 47.5131 li
261.32 53.6274 li
261.191 53.4043 li
271.78 47.2905 li
271.513 46.8271 li
260.924 52.9412 li
260.795 52.7182 li
271.385 46.6045 li
271.117 46.1415 li
260.528 52.2555 li
260.399 52.0323 li
270.988 45.9185 li
270.721 45.4555 li
260.132 51.5692 li
260.003 51.3461 li
270.592 45.2324 li
270.325 44.7695 li
259.735 50.8831 li
258.353 48.4889 li
283.425 34.0136 li
289.924 45.27 li
287.365 46.7472 li
285.981 44.3501 li
273.507 51.5522 li
274.891 53.9492 li
264.852 59.7452 li
f
261.587 54.0902 mo
261.32 53.6274 li
271.909 47.5131 li
272.177 47.9766 li
261.587 54.0902 li
261.191 53.4043 mo
260.924 52.9412 li
271.513 46.8271 li
271.78 47.2905 li
261.191 53.4043 li
260.795 52.7182 mo
260.528 52.2555 li
271.117 46.1415 li
271.385 46.6045 li
260.795 52.7182 li
260.399 52.0323 mo
260.132 51.5692 li
270.721 45.4555 li
270.988 45.9185 li
260.399 52.0323 li
260.003 51.3461 mo
259.735 50.8831 li
270.325 44.7695 li
270.592 45.2324 li
260.003 51.3461 li
0 .0745098 .156863 rgb
f
281.873 94.6845 mo
262.488 61.1097 li
264.852 59.7452 li
284.236 93.32 li
281.873 94.6845 li
0 .0235294 .0823529 rgb
f
271.856 100.468 mo
252.472 66.893 li
258.95 63.1525 li
262.019 68.4672 li
262.441 68.2235 li
259.373 62.9087 li
259.576 62.7911 li
262.645 68.1059 li
263.067 67.8618 li
259.998 62.5473 li
260.202 62.4297 li
263.27 67.7447 li
263.693 67.5005 li
260.624 62.1859 li
262.488 61.1097 li
281.873 94.6845 li
280.009 95.7606 li
277.089 90.7021 li
276.666 90.9463 li
279.586 96.0047 li
279.383 96.1219 li
276.463 91.0635 li
276.04 91.3076 li
278.96 96.366 li
278.757 96.4834 li
275.837 91.4253 li
275.414 91.669 li
278.334 96.7274 li
271.856 100.468 li
270.075 81.4458 mo
269.652 81.6895 li
273.542 88.4257 li
273.964 88.1817 li
270.075 81.4458 li
270.701 81.0845 mo
270.278 81.328 li
274.168 88.0639 li
274.59 87.8203 li
270.701 81.0845 li
271.327 80.7231 mo
270.904 80.9668 li
274.793 87.7027 li
275.216 87.459 li
271.327 80.7231 li
264.313 71.4668 mo
263.892 71.711 li
267.78 78.4467 li
268.203 78.2027 li
264.313 71.4668 li
264.939 71.1055 mo
264.518 71.3496 li
268.406 78.0855 li
268.829 77.8413 li
264.939 71.1055 li
265.565 70.7441 mo
265.143 70.9878 li
269.032 77.7242 li
269.455 77.48 li
265.565 70.7441 li
0 .0431373 .145098 rgb
f
262.488 61.1097 mo
259.223 55.4547 li
261.587 54.0902 li
264.852 59.7452 li
262.488 61.1097 li
258.956 54.992 mo
258.828 54.7689 li
261.191 53.4043 li
261.32 53.6274 li
258.956 54.992 li
258.56 54.3059 mo
258.431 54.0827 li
260.795 52.7182 li
260.924 52.9412 li
258.56 54.3059 li
258.164 53.6201 mo
258.035 53.3969 li
260.399 52.0323 li
260.528 52.2555 li
258.164 53.6201 li
257.768 52.9338 mo
257.639 52.7107 li
260.003 51.3461 li
260.132 51.5692 li
257.768 52.9338 li
257.372 52.2476 mo
255.99 49.8535 li
258.353 48.4889 li
259.735 50.8831 li
257.372 52.2476 li
0 .0235294 .0823529 rgb
f
252.472 66.893 mo
249.207 61.2382 li
252.65 59.25 li
252.383 58.7865 li
248.939 60.7748 li
248.811 60.5524 li
252.255 58.564 li
251.987 58.1005 li
248.543 60.0889 li
248.415 59.8663 li
251.858 57.8779 li
251.591 57.415 li
248.147 59.4031 li
248.019 59.1804 li
251.463 57.1919 li
251.195 56.7289 li
247.751 58.7173 li
247.708 58.6426 li
251.584 56.4049 li
251.248 55.8238 li
250.816 56.073 li
250.799 56.0429 li
247.355 58.0312 li
245.973 55.6368 li
255.99 49.8535 li
257.372 52.2476 li
257.144 52.3789 li
257.412 52.8418 li
257.639 52.7107 li
257.768 52.9338 li
257.541 53.0649 li
257.809 53.5279 li
258.035 53.3969 li
258.164 53.6201 li
257.938 53.751 li
258.204 54.2139 li
258.431 54.0827 li
258.56 54.3059 li
258.333 54.437 li
258.601 54.9 li
258.828 54.7689 li
258.956 54.992 li
258.729 55.123 li
258.996 55.586 li
259.223 55.4547 li
262.488 61.1097 li
260.624 62.1859 li
259.804 60.7646 li
259.382 61.0088 li
260.202 62.4297 li
259.998 62.5473 li
259.178 61.126 li
258.756 61.37 li
259.576 62.7911 li
259.373 62.9087 li
258.552 61.4873 li
258.13 61.7315 li
258.95 63.1525 li
252.472 66.893 li
0 .0431373 .145098 rgb
f
259.223 55.4547 mo
258.956 54.992 li
261.32 53.6274 li
261.587 54.0902 li
259.223 55.4547 li
258.828 54.7689 mo
258.56 54.3059 li
260.924 52.9412 li
261.191 53.4043 li
258.828 54.7689 li
258.431 54.0827 mo
258.164 53.6201 li
260.528 52.2555 li
260.795 52.7182 li
258.431 54.0827 li
258.035 53.3969 mo
257.768 52.9338 li
260.132 51.5692 li
260.399 52.0323 li
258.035 53.3969 li
257.639 52.7107 mo
257.372 52.2476 li
259.735 50.8831 li
260.003 51.3461 li
257.639 52.7107 li
0 .0745098 .156863 rgb
f
249.207 61.2382 mo
248.939 60.7748 li
252.383 58.7865 li
252.65 59.25 li
249.207 61.2382 li
248.811 60.5524 mo
248.543 60.0889 li
251.987 58.1005 li
252.255 58.564 li
248.811 60.5524 li
248.415 59.8663 mo
248.147 59.4031 li
251.591 57.415 li
251.858 57.8779 li
248.415 59.8663 li
248.019 59.1804 mo
247.751 58.7173 li
251.195 56.7289 li
251.463 57.1919 li
248.019 59.1804 li
247.373 58.0613 mo
247.355 58.0312 li
250.799 56.0429 li
250.816 56.073 li
247.373 58.0613 li
258.996 55.586 mo
258.729 55.123 li
258.956 54.992 li
259.223 55.4547 li
258.996 55.586 li
258.601 54.9 mo
258.333 54.437 li
258.56 54.3059 li
258.828 54.7689 li
258.601 54.9 li
258.204 54.2139 mo
257.938 53.751 li
258.164 53.6201 li
258.431 54.0827 li
258.204 54.2139 li
257.809 53.5279 mo
257.541 53.0649 li
257.768 52.9338 li
258.035 53.3969 li
257.809 53.5279 li
257.412 52.8418 mo
257.144 52.3789 li
257.372 52.2476 li
257.639 52.7107 li
257.412 52.8418 li
0 .0941176 .211765 rgb
f
247.708 58.6426 mo
247.622 58.4942 li
251.066 56.5058 li
250.816 56.073 li
251.248 55.8238 li
251.584 56.4049 li
247.708 58.6426 li
0 .721569 .858823 rgb
f
247.622 58.4942 mo
247.373 58.0613 li
250.816 56.073 li
251.066 56.5058 li
247.622 58.4942 li
0 .737255 .866667 rgb
f
278.334 96.7274 mo
275.414 91.669 li
275.837 91.4253 li
278.757 96.4834 li
278.334 96.7274 li
278.96 96.366 mo
276.04 91.3076 li
276.463 91.0635 li
279.383 96.1219 li
278.96 96.366 li
279.586 96.0047 mo
276.666 90.9463 li
277.089 90.7021 li
280.009 95.7606 li
279.586 96.0047 li
273.542 88.4257 mo
269.652 81.6895 li
270.075 81.4458 li
273.964 88.1817 li
273.542 88.4257 li
274.168 88.0639 mo
270.278 81.328 li
270.701 81.0845 li
274.59 87.8203 li
274.168 88.0639 li
274.793 87.7027 mo
270.904 80.9668 li
271.327 80.7231 li
275.216 87.459 li
274.793 87.7027 li
267.78 78.4467 mo
263.892 71.711 li
264.313 71.4668 li
268.203 78.2027 li
267.78 78.4467 li
268.406 78.0855 mo
264.518 71.3496 li
264.939 71.1055 li
268.829 77.8413 li
268.406 78.0855 li
269.032 77.7242 mo
265.143 70.9878 li
265.565 70.7441 li
269.455 77.48 li
269.032 77.7242 li
262.019 68.4672 mo
258.95 63.1525 li
259.373 62.9087 li
262.441 68.2235 li
262.019 68.4672 li
.0156863 .141176 .270588 rgb
f
258.95 63.1525 mo
258.13 61.7315 li
258.552 61.4873 li
259.373 62.9087 li
258.95 63.1525 li
f
262.645 68.1059 mo
259.576 62.7911 li
259.998 62.5473 li
263.067 67.8618 li
262.645 68.1059 li
f
259.576 62.7911 mo
258.756 61.37 li
259.178 61.126 li
259.998 62.5473 li
259.576 62.7911 li
f
263.27 67.7447 mo
260.202 62.4297 li
260.624 62.1859 li
263.693 67.5005 li
263.27 67.7447 li
f
260.202 62.4297 mo
259.382 61.0088 li
259.804 60.7646 li
260.624 62.1859 li
260.202 62.4297 li
f
234.192 151.868 mo
233.256 150.247 li
234.249 149.674 li
235.185 151.295 li
234.192 151.868 li
.0156863 .0666667 .180392 rgb
f
233.256 150.247 mo
221.351 129.627 li
227.317 126.182 li
229.19 129.427 li
249.513 117.693 li
247.64 114.449 li
250.685 112.691 li
258.042 125.433 li
257.732 125.815 257.672 126.364 257.933 126.816 cv
258.069 127.053 258.272 127.227 258.505 127.327 cv
255.438 129.098 li
255.467 128.846 255.418 128.584 255.281 128.347 cv
255.055 127.954 254.643 127.735 254.22 127.735 cv
254.012 127.735 253.802 127.788 253.609 127.899 cv
253.023 128.237 252.822 128.986 253.16 129.572 cv
253.297 129.808 253.5 129.982 253.733 130.083 cv
250.666 131.853 li
250.695 131.602 250.646 131.339 250.51 131.102 cv
250.283 130.709 249.871 130.49 249.448 130.49 cv
249.24 130.49 249.03 130.543 248.837 130.654 cv
248.251 130.992 248.051 131.741 248.389 132.327 cv
248.525 132.563 248.728 132.737 248.961 132.838 cv
245.894 134.608 li
245.923 134.357 245.874 134.094 245.737 133.857 cv
245.511 133.464 245.099 133.245 244.676 133.245 cv
244.469 133.245 244.258 133.298 244.065 133.409 cv
243.479 133.748 243.278 134.496 243.617 135.082 cv
243.753 135.318 243.957 135.492 244.189 135.593 cv
241.122 137.363 li
241.151 137.112 241.102 136.849 240.965 136.612 cv
240.739 136.219 240.327 136 239.904 136 cv
239.697 136 239.486 136.053 239.293 136.164 cv
238.707 136.503 238.507 137.251 238.845 137.837 cv
238.981 138.073 239.184 138.247 239.417 138.348 cv
230.637 143.417 li
234.249 149.674 li
233.256 150.247 li
.0156863 .0705882 .192157 rgb
f
229.19 129.427 mo
227.317 126.182 li
247.64 114.449 li
249.513 117.693 li
229.19 129.427 li
.0156863 .0901961 .247059 rgb
f
260.21 126.343 mo
260.239 126.091 260.19 125.828 260.054 125.592 cv
259.827 125.199 259.416 124.98 258.992 124.98 cv
258.785 124.98 258.574 125.033 258.381 125.144 cv
258.247 125.221 258.134 125.32 258.042 125.433 cv
250.685 112.691 li
268.621 102.335 li
267.924 103.119 267.771 104.29 268.324 105.249 cv
268.787 106.05 269.627 106.499 270.491 106.499 cv
270.915 106.499 271.345 106.39 271.739 106.163 cv
272.934 105.473 273.345 103.943 272.654 102.748 cv
272.191 101.946 271.351 101.497 270.487 101.497 cv
270.319 101.497 270.15 101.514 269.983 101.549 cv
271.856 100.468 li
279.883 114.372 li
279.169 114.784 li
278.806 114.59 278.399 114.488 277.987 114.488 cv
277.563 114.488 277.133 114.596 276.739 114.823 cv
275.782 115.376 275.328 116.466 275.54 117.492 cv
264.982 123.588 li
265.011 123.336 264.962 123.073 264.825 122.837 cv
264.599 122.444 264.187 122.224 263.764 122.224 cv
263.556 122.224 263.345 122.277 263.152 122.389 cv
262.567 122.727 262.366 123.476 262.704 124.062 cv
262.841 124.298 263.044 124.472 263.277 124.572 cv
260.21 126.343 li
274.237 107.993 mo
273.813 107.993 273.383 108.101 272.989 108.328 cv
271.793 109.019 271.384 110.547 272.074 111.744 cv
272.537 112.545 273.377 112.994 274.241 112.994 cv
274.665 112.994 275.095 112.886 275.489 112.658 cv
276.685 111.968 277.095 110.439 276.404 109.243 cv
275.941 108.441 275.101 107.993 274.237 107.993 cv
.0156863 .0705882 .192157 rgb
f
292.264 107.224 mo
284.236 93.32 li
303.272 82.3295 li
311.3 96.2334 li
301.694 101.779 li
301.96 102.239 li
294.342 106.637 li
294.076 106.177 li
292.264 107.224 li
292.226 98.4503 mo
292.018 98.4503 291.808 98.5033 291.615 98.6147 cv
291.029 98.9531 290.828 99.7016 291.166 100.287 cv
291.393 100.68 291.805 100.9 292.228 100.9 cv
292.435 100.9 292.646 100.847 292.839 100.735 cv
293.425 100.397 293.625 99.649 293.287 99.0629 cv
293.06 98.6699 292.649 98.4503 292.226 98.4503 cv
296.998 95.6954 mo
296.79 95.6954 296.58 95.7484 296.387 95.8598 cv
295.801 96.1977 295.6 96.9467 295.938 97.5323 cv
296.165 97.9252 296.577 98.1449 297 98.1449 cv
297.208 98.1449 297.418 98.0919 297.611 97.9805 cv
298.197 97.6421 298.397 96.8936 298.06 96.3077 cv
297.832 95.915 297.421 95.6954 296.998 95.6954 cv
301.77 92.9403 mo
301.562 92.9403 301.351 92.9932 301.158 93.1045 cv
300.573 93.4428 300.372 94.1915 300.71 94.7774 cv
300.937 95.1701 301.349 95.3897 301.772 95.3897 cv
301.98 95.3897 302.19 95.3368 302.383 95.2256 cv
302.969 94.8872 303.17 94.1387 302.831 93.5528 cv
302.604 93.1597 302.193 92.9403 301.77 92.9403 cv
306.542 90.1852 mo
306.334 90.1852 306.124 90.2382 305.931 90.3497 cv
305.345 90.6876 305.145 91.4366 305.482 92.022 cv
305.709 92.4149 306.121 92.6346 306.544 92.6346 cv
306.752 92.6346 306.962 92.5816 307.155 92.4702 cv
307.741 92.1323 307.941 91.3833 307.604 90.7974 cv
307.376 90.4048 306.965 90.1852 306.542 90.1852 cv
.0156863 .0509804 .133333 rgb
f
241.19 163.988 mo
234.192 151.868 li
235.185 151.295 li
235.797 152.355 li
264.139 135.992 li
271.897 149.43 li
270.955 149.974 li
269.453 147.373 li
259.275 153.249 li
260.777 155.85 li
256.21 158.486 li
254.838 156.108 li
254.505 156.301 li
254.376 156.078 li
244.198 161.954 li
244.327 162.177 li
241.19 163.988 li
.0156863 .0862745 .231373 rgb
f
271.897 149.43 mo
264.139 135.992 li
281.495 125.972 li
281.577 125.98 281.659 125.984 281.742 125.984 cv
282.166 125.984 282.595 125.876 282.989 125.649 cv
283.46 125.377 283.808 124.976 284.016 124.516 cv
285.309 123.769 li
285.97 124.914 li
284.342 125.855 li
285.284 127.487 li
284.927 127.516 284.57 127.623 284.239 127.814 cv
283.043 128.504 282.634 130.033 283.324 131.229 cv
283.787 132.031 284.627 132.479 285.491 132.479 cv
285.915 132.479 286.345 132.371 286.739 132.144 cv
287.07 131.953 287.341 131.697 287.545 131.403 cv
288.45 132.971 li
290.079 132.031 li
292.057 135.457 li
291.62 135.71 li
291.567 135.544 291.495 135.381 291.404 135.224 cv
290.941 134.422 290.101 133.974 289.237 133.974 cv
288.813 133.974 288.383 134.082 287.989 134.309 cv
286.793 134.999 286.384 136.528 287.074 137.724 cv
287.537 138.526 288.377 138.974 289.241 138.974 cv
289.665 138.974 290.095 138.866 290.489 138.639 cv
290.82 138.448 291.091 138.192 291.295 137.897 cv
291.439 138.147 li
284.493 142.157 li
283.571 140.561 li
280.569 142.295 li
281.491 143.891 li
280.046 144.725 li
279.124 143.129 li
276.123 144.862 li
277.044 146.458 li
275.599 147.292 li
274.678 145.696 li
271.676 147.43 li
272.597 149.025 li
271.897 149.43 li
f
307.26 129.013 mo
306.25 127.263 li
304.438 128.309 li
302.459 124.883 li
304.271 123.836 li
300.163 116.72 li
298.351 117.767 li
297.69 116.622 li
316.726 105.631 li
317.387 106.776 li
307.781 112.322 li
311.89 119.438 li
321.495 113.892 li
323.474 117.319 li
313.868 122.865 li
314.878 124.614 li
307.26 129.013 li
.0156863 .0666667 .176471 rgb
f
289.9 108.588 mo
287.002 103.568 li
287.146 103.625 287.3 103.655 287.456 103.655 cv
287.664 103.655 287.874 103.602 288.067 103.491 cv
288.653 103.152 288.854 102.404 288.516 101.818 cv
288.288 101.425 287.877 101.206 287.454 101.206 cv
287.246 101.206 287.036 101.258 286.843 101.37 cv
286.505 101.565 286.295 101.896 286.243 102.254 cv
281.873 94.6845 li
284.236 93.32 li
292.264 107.224 li
289.9 108.588 li
.0156863 .0509804 .133333 rgb
f
279.883 114.372 mo
271.856 100.468 li
278.334 96.7274 li
279.303 98.4047 li
279.726 98.1607 li
278.757 96.4834 li
278.96 96.366 li
279.929 98.0435 li
280.352 97.7993 li
279.383 96.1219 li
279.586 96.0047 li
280.555 97.6822 li
280.977 97.438 li
280.009 95.7606 li
281.873 94.6845 li
286.243 102.254 li
286.205 102.517 286.251 102.795 286.395 103.043 cv
286.538 103.291 286.755 103.47 287.002 103.568 cv
289.9 108.588 li
279.883 114.372 li
281.598 101.404 mo
281.176 101.647 li
285.064 108.384 li
285.486 108.14 li
281.598 101.404 li
285.439 107.587 mo
285.69 108.022 li
286.113 107.778 li
285.862 107.342 li
286.065 107.225 li
286.316 107.661 li
286.738 107.417 li
286.487 106.981 li
287.766 106.243 li
282.882 97.7837 li
280.541 99.1352 li
285.425 107.595 li
285.439 107.587 li
.0156863 .0705882 .192157 rgb
f
302.074 129.674 mo
300.096 126.247 li
302.459 124.883 li
304.438 128.309 li
302.074 129.674 li
.0156863 .0666667 .176471 rgb
f
292.057 135.457 mo
290.079 132.031 li
300.096 126.247 li
302.074 129.674 li
292.057 135.457 li
.0156863 .0862745 .231373 rgb
f
295.987 119.131 mo
295.326 117.986 li
297.69 116.622 li
298.351 117.767 li
295.987 119.131 li
.0156863 .0666667 .176471 rgb
f
285.97 124.914 mo
285.309 123.769 li
295.326 117.986 li
295.987 119.131 li
285.97 124.914 li
.0156863 .0862745 .231373 rgb
f
285.064 108.384 mo
281.176 101.647 li
281.598 101.404 li
285.486 108.14 li
285.064 108.384 li
285.69 108.022 mo
285.439 107.587 li
285.862 107.342 li
286.113 107.778 li
285.69 108.022 li
286.316 107.661 mo
286.065 107.225 li
286.487 106.981 li
286.738 107.417 li
286.316 107.661 li
279.303 98.4047 mo
278.334 96.7274 li
278.757 96.4834 li
279.726 98.1607 li
279.303 98.4047 li
279.929 98.0435 mo
278.96 96.366 li
279.383 96.1219 li
280.352 97.7993 li
279.929 98.0435 li
280.555 97.6822 mo
279.586 96.0047 li
280.009 95.7606 li
280.977 97.438 li
280.555 97.6822 li
.0313725 .160784 .309804 rgb
f
285.425 107.595 mo
280.541 99.1352 li
282.882 97.7837 li
287.766 106.243 li
286.487 106.981 li
282.85 100.681 li
282.427 100.925 li
286.065 107.225 li
285.862 107.342 li
282.224 101.043 li
281.802 101.286 li
285.439 107.587 li
285.425 107.595 li
.0196078 .184314 .313725 rgb
f
285.439 107.587 mo
281.802 101.286 li
282.224 101.043 li
285.862 107.342 li
285.439 107.587 li
286.065 107.225 mo
282.427 100.925 li
282.85 100.681 li
286.487 106.981 li
286.065 107.225 li
.0352941 .266667 .415686 rgb
f
244.327 162.177 mo
244.198 161.954 li
254.376 156.078 li
254.505 156.301 li
244.327 162.177 li
.0156863 .219608 .4 rgb
f
260.777 155.85 mo
259.275 153.249 li
269.453 147.373 li
270.955 149.974 li
260.777 155.85 li
f
242.562 166.366 mo
241.19 163.988 li
244.327 162.177 li
245.7 164.554 li
242.562 166.366 li
255.878 158.678 mo
254.505 156.301 li
254.838 156.108 li
256.21 158.486 li
255.878 158.678 li
.0156863 .862745 1 rgb
f
245.7 164.554 mo
244.327 162.177 li
254.505 156.301 li
255.878 158.678 li
245.7 164.554 li
.0156863 .886274 1 rgb
f
272.597 149.025 mo
271.676 147.43 li
274.678 145.696 li
275.599 147.292 li
272.597 149.025 li
.0156863 .0862745 .231373 rgb
f
277.044 146.458 mo
276.123 144.862 li
279.124 143.129 li
280.046 144.725 li
277.044 146.458 li
f
281.491 143.891 mo
280.569 142.295 li
283.571 140.561 li
284.493 142.157 li
281.491 143.891 li
f
277.068 57.7202 mo
274.891 53.9492 li
287.365 46.7472 li
289.542 50.5186 li
277.068 57.7202 li
.47451 .0627451 1 rgb
f
274.891 53.9492 mo
273.507 51.5522 li
285.981 44.3501 li
287.365 46.7472 li
274.891 53.9492 li
f
291.439 138.147 mo
291.295 137.897 li
291.731 137.267 291.861 136.457 291.62 135.71 cv
292.057 135.457 li
293.067 137.207 li
291.439 138.147 li
.0156863 .219608 .4 rgb
f
305.448 130.059 mo
304.438 128.309 li
306.25 127.263 li
307.26 129.013 li
305.448 130.059 li
.0156863 .2 .356863 rgb
f
303.084 131.424 mo
302.074 129.674 li
304.438 128.309 li
305.448 130.059 li
303.084 131.424 li
f
293.067 137.207 mo
292.057 135.457 li
302.074 129.674 li
303.084 131.424 li
293.067 137.207 li
.0156863 .219608 .4 rgb
f
288.45 132.971 mo
287.545 131.403 li
288.077 130.632 288.154 129.594 287.654 128.729 cv
287.191 127.927 286.351 127.478 285.487 127.478 cv
285.42 127.478 285.352 127.481 285.284 127.487 cv
284.342 125.855 li
285.97 124.914 li
290.079 132.031 li
288.45 132.971 li
f
302.459 124.883 mo
298.351 117.767 li
300.163 116.72 li
304.271 123.836 li
302.459 124.883 li
.0156863 .2 .356863 rgb
f
300.096 126.247 mo
295.987 119.131 li
298.351 117.767 li
302.459 124.883 li
300.096 126.247 li
f
290.079 132.031 mo
285.97 124.914 li
295.987 119.131 li
300.096 126.247 li
290.079 132.031 li
.0156863 .219608 .4 rgb
f
314.878 124.614 mo
313.868 122.865 li
323.474 117.319 li
324.484 119.069 li
314.878 124.614 li
.0156863 .2 .356863 rgb
f
279.65 115.119 mo
279.502 114.988 279.341 114.876 279.169 114.784 cv
279.883 114.372 li
280.149 114.831 li
279.65 115.119 li
.0156863 .203922 .372549 rgb
f
292.529 107.684 mo
292.264 107.224 li
294.076 106.177 li
294.342 106.637 li
292.529 107.684 li
.0156863 .188235 .32549 rgb
f
290.166 109.048 mo
289.9 108.588 li
292.264 107.224 li
292.529 107.684 li
290.166 109.048 li
f
280.149 114.831 mo
279.883 114.372 li
289.9 108.588 li
290.166 109.048 li
280.149 114.831 li
.0156863 .203922 .372549 rgb
f
311.89 119.438 mo
307.781 112.322 li
317.387 106.776 li
321.495 113.892 li
311.89 119.438 li
.0156863 .2 .356863 rgb
f
301.96 102.239 mo
301.694 101.779 li
311.3 96.2334 li
311.565 96.6933 li
301.96 102.239 li
.0156863 .188235 .32549 rgb
f
235.185 151.295 mo
234.249 149.674 li
262.59 133.311 li
263.526 134.932 li
235.185 151.295 li
.027451 .188235 .309804 rgb
f
234.249 149.674 mo
230.637 143.417 li
239.417 138.348 li
239.571 138.414 239.738 138.449 239.906 138.449 cv
240.114 138.449 240.325 138.396 240.518 138.285 cv
240.867 138.084 241.079 137.736 241.122 137.363 cv
244.189 135.593 li
244.343 135.659 244.509 135.694 244.678 135.694 cv
244.886 135.694 245.096 135.641 245.289 135.53 cv
245.639 135.328 245.851 134.98 245.894 134.608 cv
248.961 132.838 li
249.115 132.904 249.281 132.939 249.45 132.939 cv
249.658 132.939 249.869 132.886 250.061 132.775 cv
250.411 132.573 250.623 132.225 250.666 131.853 cv
253.733 130.083 li
253.887 130.149 254.054 130.184 254.222 130.184 cv
254.43 130.184 254.64 130.131 254.833 130.02 cv
255.183 129.818 255.395 129.47 255.438 129.098 cv
258.505 127.327 li
258.659 127.394 258.825 127.429 258.994 127.429 cv
259.058 127.429 259.122 127.424 259.186 127.414 cv
262.59 133.311 li
234.249 149.674 li
.027451 .192157 .321569 rgb
f
263.526 134.932 mo
262.59 133.311 li
279.247 123.694 li
279.277 124.049 279.384 124.404 279.574 124.734 cv
279.716 124.979 279.892 125.19 280.094 125.367 cv
263.526 134.932 li
284.193 123 mo
284.141 122.737 284.046 122.479 283.904 122.234 cv
283.8 122.054 283.678 121.892 283.54 121.749 cv
283.992 121.488 li
284.697 122.709 li
284.193 123 li
.027451 .188235 .309804 rgb
f
262.59 133.311 mo
259.186 127.414 li
259.33 127.391 259.472 127.342 259.606 127.265 cv
259.955 127.063 260.167 126.715 260.21 126.343 cv
263.277 124.572 li
263.431 124.639 263.598 124.674 263.766 124.674 cv
263.974 124.674 264.184 124.621 264.377 124.51 cv
264.726 124.308 264.939 123.96 264.982 123.588 cv
275.54 117.492 li
275.593 117.748 275.686 118 275.824 118.239 cv
276.287 119.04 277.127 119.489 277.991 119.489 cv
278.415 119.489 278.845 119.381 279.239 119.153 cv
279.57 118.962 279.841 118.707 280.045 118.412 cv
281.534 120.991 li
281.177 121.021 280.82 121.127 280.489 121.318 cv
279.622 121.819 279.169 122.759 279.247 123.694 cv
262.59 133.311 li
.027451 .192157 .321569 rgb
f
297.077 115.561 mo
296.372 114.34 li
298.185 113.294 li
297.954 112.894 li
305.572 108.495 li
305.803 108.895 li
315.408 103.35 li
316.113 104.571 li
297.077 115.561 li
.027451 .172549 .258824 rgb
f
297.954 112.894 mo
294.342 106.637 li
301.96 102.239 li
305.572 108.495 li
297.954 112.894 li
.027451 .176471 .270588 rgb
f
235.797 152.355 mo
235.185 151.295 li
263.526 134.932 li
264.139 135.992 li
235.797 152.355 li
.027451 .207843 .352941 rgb
f
264.139 135.992 mo
263.526 134.932 li
280.094 125.367 li
280.489 125.712 280.982 125.921 281.495 125.972 cv
264.139 135.992 li
284.016 124.516 mo
284.229 124.046 284.294 123.515 284.193 123 cv
284.697 122.709 li
285.309 123.769 li
284.016 124.516 li
f
297.69 116.622 mo
297.077 115.561 li
316.113 104.571 li
316.726 105.631 li
297.69 116.622 li
.027451 .188235 .305882 rgb
f
294.714 116.926 mo
294.009 115.705 li
296.372 114.34 li
297.077 115.561 li
294.714 116.926 li
.027451 .172549 .258824 rgb
f
284.697 122.709 mo
283.992 121.488 li
294.009 115.705 li
294.714 116.926 li
284.697 122.709 li
.027451 .188235 .309804 rgb
f
295.326 117.986 mo
294.714 116.926 li
297.077 115.561 li
297.69 116.622 li
295.326 117.986 li
.027451 .188235 .305882 rgb
f
285.309 123.769 mo
284.697 122.709 li
294.714 116.926 li
295.326 117.986 li
285.309 123.769 li
.027451 .207843 .352941 rgb
f
283.54 121.749 mo
283.425 121.63 283.3 121.523 283.167 121.431 cv
283.761 121.088 li
283.992 121.488 li
283.54 121.749 li
.027451 .309804 .458824 rgb
f
283.167 121.431 mo
282.747 121.139 282.246 120.983 281.737 120.983 cv
281.669 120.983 281.601 120.986 281.534 120.991 cv
280.045 118.412 li
280.577 117.642 280.654 116.603 280.154 115.739 cv
280.017 115.5 279.845 115.293 279.65 115.119 cv
280.149 114.831 li
283.761 121.088 li
283.167 121.431 li
.027451 .313725 .470588 rgb
f
296.372 114.34 mo
296.141 113.94 li
297.954 112.894 li
298.185 113.294 li
296.372 114.34 li
.027451 .294118 .419608 rgb
f
296.141 113.94 mo
292.529 107.684 li
294.342 106.637 li
297.954 112.894 li
296.141 113.94 li
.027451 .298039 .431373 rgb
f
294.009 115.705 mo
293.778 115.305 li
296.141 113.94 li
296.372 114.34 li
294.009 115.705 li
.027451 .294118 .419608 rgb
f
293.778 115.305 mo
290.166 109.048 li
292.529 107.684 li
296.141 113.94 li
293.778 115.305 li
.027451 .298039 .431373 rgb
f
283.992 121.488 mo
283.761 121.088 li
293.778 115.305 li
294.009 115.705 li
283.992 121.488 li
.027451 .309804 .458824 rgb
f
283.761 121.088 mo
280.149 114.831 li
290.166 109.048 li
293.778 115.305 li
283.761 121.088 li
.027451 .313725 .470588 rgb
f
305.803 108.895 mo
305.572 108.495 li
315.177 102.95 li
315.408 103.35 li
305.803 108.895 li
.027451 .294118 .419608 rgb
f
305.572 108.495 mo
301.96 102.239 li
311.565 96.6933 li
315.177 102.95 li
305.572 108.495 li
.027451 .298039 .431373 rgb
f
79.8454 137.245 mo
79.2573 136.227 li
88.4391 130.925 li
89.0272 131.944 li
79.8454 137.245 li
1 .372549 .247059 rgb
f
89.0272 131.944 mo
88.4391 130.925 li
102.016 123.087 li
102.604 124.105 li
89.0272 131.944 li
f
41.0394 47.7148 mo
40.1755 47.7148 39.3352 47.2664 38.8721 46.4644 cv
38.1816 45.2686 38.5913 43.7398 39.7871 43.0493 cv
40.1809 42.8219 40.6106 42.7139 41.0347 42.7139 cv
41.8987 42.7139 42.7391 43.1624 43.2021 43.9644 cv
43.893 45.1601 43.483 46.6889 42.2871 47.3794 cv
41.8933 47.6068 41.4636 47.7148 41.0394 47.7148 cv
37.2893 41.2197 mo
36.4254 41.2196 35.5851 40.7713 35.122 39.9692 cv
34.4316 38.7734 34.8413 37.2446 36.0372 36.5543 cv
36.431 36.3268 36.8608 36.2188 37.285 36.2188 cv
38.1489 36.2188 38.9892 36.6671 39.4522 37.4687 cv
40.143 38.665 39.7328 40.1939 38.5372 40.8843 cv
38.1433 41.1116 37.7135 41.2197 37.2893 41.2197 cv
33.5393 34.7246 mo
32.6755 34.7245 31.8351 34.2761 31.372 33.4741 cv
30.6817 32.2784 31.0913 30.7494 32.287 30.0591 cv
32.681 29.8317 33.1109 29.7236 33.5352 29.7236 cv
34.399 29.7236 35.2391 30.1718 35.7022 30.9736 cv
36.3931 32.1699 35.9829 33.6987 34.7872 34.3891 cv
34.3933 34.6165 33.9636 34.7246 33.5393 34.7246 cv
29.7893 28.2289 mo
28.9254 28.2289 28.085 27.7806 27.622 26.9791 cv
26.9317 25.7827 27.3414 24.2544 28.5371 23.5639 cv
28.9309 23.3365 29.3608 23.2284 29.7851 23.2284 cv
30.649 23.2284 31.4892 23.6767 31.9526 24.4791 cv
32.6426 25.6743 32.2329 27.2035 31.037 27.8936 cv
30.6432 28.1209 30.2135 28.229 29.7893 28.2289 cv
.223529 .160784 .423529 rgb
f
26.0392 21.7339 mo
25.1753 21.7338 24.3351 21.2856 23.8721 20.4839 cv
23.1817 19.2875 23.5912 17.7587 24.7871 17.0684 cv
25.1809 16.8412 25.6107 16.7332 26.0348 16.7332 cv
26.8988 16.7332 27.7392 17.1815 28.2026 17.9839 cv
28.8926 19.1793 28.4829 20.708 27.2871 21.3984 cv
26.8933 21.6258 26.4634 21.7339 26.0392 21.7339 cv
.447059 .286274 .478431 rgb
f
20.9014 14.8199 mo
20.5905 14.6134 20.3214 14.3338 20.1221 13.9887 cv
19.4316 12.7925 19.8413 11.2637 21.0371 10.5732 cv
21.4309 10.3459 21.8607 10.2378 22.2849 10.2378 cv
23.1488 10.2378 23.9892 10.6863 24.4526 11.4882 cv
24.6518 11.8335 24.7594 12.2065 24.7828 12.579 cv
20.9014 14.8199 li
.223529 .160784 .423529 rgb
f
22.2893 15.2388 mo
21.7972 15.2388 21.3128 15.0933 20.9014 14.8199 cv
24.7828 12.579 li
24.8406 13.4969 24.3877 14.4122 23.5371 14.9034 cv
23.1433 15.1307 22.7135 15.2388 22.2893 15.2388 cv
.447059 .286274 .478431 rgb
f
18.5394 8.74357 mo
17.6754 8.74357 16.8352 8.29523 16.3721 7.4932 cv
15.6816 6.29734 16.0913 4.76857 17.2871 4.0782 cv
17.6809 3.85082 18.1108 3.74273 18.5349 3.74273 cv
19.3989 3.74273 20.2393 4.19113 20.7027 4.99322 cv
21.3925 6.18856 20.983 7.71784 19.7871 8.40821 cv
19.3934 8.63549 18.9635 8.74357 18.5394 8.74357 cv
.223529 .160784 .423529 rgb
f
77.4992 57.1424 mo
77.0761 57.1424 76.6646 56.9228 76.4381 56.5297 cv
76.0996 55.9443 76.3002 55.1958 76.8861 54.8574 cv
77.079 54.7461 77.2896 54.6932 77.4973 54.6932 cv
77.9205 54.6932 78.332 54.9127 78.5586 55.3057 cv
78.8969 55.8916 78.6963 56.6402 78.1104 56.978 cv
77.9176 57.0894 77.707 57.1424 77.4992 57.1424 cv
82.2711 54.3875 mo
81.848 54.3875 81.4365 54.1679 81.2099 53.7748 cv
80.8717 53.1889 81.0723 52.4404 81.6582 52.1025 cv
81.851 51.9911 82.0615 51.9381 82.2693 51.9381 cv
82.6922 51.9381 83.1036 52.1577 83.3305 52.5503 cv
83.6689 53.1362 83.4683 53.8848 82.8824 54.2231 cv
82.6895 54.3345 82.4789 54.3875 82.2711 54.3875 cv
87.0431 51.6322 mo
86.6201 51.6322 86.2086 51.4126 85.9819 51.0199 cv
85.6435 50.434 85.8443 49.6855 86.4302 49.3471 cv
86.623 49.2358 86.8335 49.1829 87.0411 49.1829 cv
87.4641 49.1829 87.8755 49.4024 88.1025 49.7954 cv
88.4409 50.3813 88.2402 51.1299 87.6543 51.4678 cv
87.4615 51.5792 87.2509 51.6322 87.0431 51.6322 cv
91.8152 48.8773 mo
91.3921 48.8773 90.9805 48.6577 90.754 48.2647 cv
90.6558 48.0948 90.6029 47.911 90.5918 47.7276 cv
90.7593 47.7624 90.9304 47.7802 91.1026 47.7802 cv
91.5268 47.7802 91.9568 47.6721 92.3505 47.4448 cv
92.5472 47.3313 92.7226 47.195 92.8753 47.0414 cv
93.2125 47.6272 93.0117 48.3753 92.4263 48.7129 cv
92.2335 48.8243 92.0229 48.8773 91.8152 48.8773 cv
.862745 .0196078 .14902 rgb
f
91.1026 47.7802 mo
90.9304 47.7802 90.7593 47.7624 90.5918 47.7276 cv
90.5644 47.279 90.7862 46.8321 91.2021 46.5922 cv
91.3949 46.4808 91.6056 46.4278 91.8133 46.4278 cv
92.2365 46.4278 92.6479 46.6474 92.8745 47.04 cv
92.8748 47.0404 92.8751 47.0409 92.8753 47.0414 cv
92.7226 47.195 92.5472 47.3313 92.3505 47.4448 cv
91.9568 47.6721 91.5268 47.7802 91.1026 47.7802 cv
.862745 .0352941 .47451 rgb
f
96.5871 46.1223 mo
96.1639 46.1223 95.7523 45.9028 95.5253 45.5098 cv
95.1876 44.9239 95.3882 44.1753 95.9741 43.837 cv
96.1669 43.7257 96.3775 43.6727 96.5853 43.6727 cv
97.0084 43.6727 97.4199 43.8922 97.6466 44.2852 cv
97.9848 44.8712 97.7842 45.6196 97.1983 45.9581 cv
97.0055 46.0693 96.7949 46.1223 96.5871 46.1223 cv
100.966 43.3026 mo
100.694 43.2107 100.453 43.0231 100.297 42.7544 cv
100.142 42.486 100.101 42.1832 100.157 41.9013 cv
100.966 43.3026 li
.862745 .0196078 .14902 rgb
f
101.359 43.3671 mo
101.225 43.3671 101.093 43.3451 100.966 43.3026 cv
100.157 41.9013 li
100.225 41.5685 100.429 41.265 100.746 41.0821 cv
100.939 40.9706 101.15 40.9176 101.357 40.9176 cv
101.78 40.9176 102.192 41.1372 102.418 41.5298 cv
102.757 42.1157 102.556 42.8647 101.97 43.2027 cv
101.777 43.3141 101.567 43.3671 101.359 43.3671 cv
.862745 .0235294 .164706 rgb
f
183.025 195.631 mo
182.398 195.631 181.784 195.395 181.317 194.96 cv
180.585 193.691 li
180.345 192.649 180.797 191.529 181.772 190.966 cv
182.166 190.738 182.596 190.63 183.021 190.63 cv
183.884 190.63 184.725 191.078 185.188 191.88 cv
185.878 193.076 185.468 194.606 184.272 195.296 cv
183.878 195.523 183.449 195.631 183.025 195.631 cv
.113725 .0862745 .552941 rgb
f
181.317 194.96 mo
181.14 194.794 180.984 194.601 180.857 194.38 cv
180.729 194.159 180.639 193.927 180.585 193.691 cv
181.317 194.96 li
f
179.274 189.135 mo
178.648 189.135 178.034 188.9 177.567 188.464 cv
176.835 187.196 li
176.595 186.154 177.047 185.033 178.022 184.47 cv
178.416 184.243 178.846 184.135 179.27 184.135 cv
180.134 184.135 180.974 184.583 181.438 185.385 cv
182.128 186.581 181.718 188.109 180.522 188.8 cv
180.128 189.027 179.698 189.135 179.274 189.135 cv
f
177.567 188.464 mo
177.39 188.299 177.234 188.105 177.107 187.885 cv
176.979 187.664 176.89 187.432 176.835 187.196 cv
177.567 188.464 li
f
175.524 182.64 mo
174.898 182.64 174.284 182.405 173.818 181.97 cv
173.085 180.701 li
172.845 179.658 173.297 178.538 174.272 177.975 cv
174.666 177.747 175.096 177.639 175.52 177.639 cv
176.384 177.639 177.224 178.088 177.687 178.89 cv
178.378 180.086 177.968 181.614 176.772 182.305 cv
176.378 182.532 175.948 182.64 175.524 182.64 cv
.113725 .0666667 .52549 rgb
f
173.818 181.97 mo
173.64 181.804 173.484 181.61 173.357 181.39 cv
173.229 181.169 173.14 180.937 173.085 180.701 cv
173.818 181.97 li
f
171.774 176.145 mo
171.148 176.145 170.534 175.91 170.068 175.475 cv
169.335 174.206 li
169.095 173.163 169.547 172.042 170.522 171.48 cv
170.916 171.252 171.346 171.144 171.77 171.144 cv
172.634 171.144 173.474 171.593 173.937 172.395 cv
174.628 173.591 174.218 175.119 173.022 175.81 cv
172.628 176.037 172.198 176.145 171.774 176.145 cv
f
170.068 175.475 mo
169.891 175.31 169.735 175.116 169.607 174.896 cv
169.48 174.675 169.39 174.442 169.335 174.206 cv
170.068 175.475 li
f
168.024 169.65 mo
167.398 169.65 166.784 169.414 166.317 168.979 cv
165.586 167.711 li
165.345 166.669 165.797 165.548 166.773 164.984 cv
167.166 164.757 167.596 164.649 168.02 164.649 cv
168.884 164.649 169.725 165.097 170.188 165.899 cv
170.878 167.095 170.468 168.624 169.272 169.314 cv
168.878 169.542 168.448 169.65 168.024 169.65 cv
f
166.317 168.979 mo
166.141 168.814 165.985 168.62 165.857 168.399 cv
165.73 168.179 165.64 167.947 165.586 167.711 cv
166.317 168.979 li
f
163.495 163.03 mo
163.154 162.919 162.836 162.734 162.567 162.484 cv
161.835 161.215 li
161.595 160.173 162.047 159.052 163.023 158.489 cv
163.416 158.262 163.846 158.154 164.27 158.154 cv
165.134 158.154 165.974 158.602 166.438 159.404 cv
166.758 159.96 166.841 160.587 166.719 161.169 cv
163.495 163.03 li
.101961 .0392157 .494118 rgb
f
162.567 162.484 mo
162.39 162.319 162.234 162.125 162.107 161.904 cv
161.98 161.684 161.89 161.451 161.835 161.215 cv
162.567 162.484 li
f
164.274 163.155 mo
164.009 163.155 163.746 163.112 163.495 163.03 cv
166.719 161.169 li
166.577 161.84 166.162 162.45 165.522 162.819 cv
165.128 163.047 164.699 163.155 164.274 163.155 cv
.113725 .0666667 .52549 rgb
f
160.525 156.66 mo
159.898 156.66 159.284 156.424 158.818 155.989 cv
158.085 154.72 li
157.845 153.677 158.297 152.557 159.272 151.994 cv
159.666 151.767 160.096 151.659 160.52 151.659 cv
161.384 151.659 162.224 152.107 162.688 152.909 cv
163.378 154.105 162.968 155.634 161.772 156.324 cv
161.378 156.551 160.949 156.66 160.525 156.66 cv
.101961 .0392157 .494118 rgb
f
158.818 155.989 mo
158.64 155.824 158.484 155.63 158.357 155.409 cv
158.229 155.188 158.139 154.956 158.085 154.72 cv
158.818 155.989 li
f
289.241 138.974 mo
288.377 138.974 287.537 138.526 287.074 137.724 cv
286.384 136.528 286.793 134.999 287.989 134.309 cv
288.383 134.082 288.813 133.974 289.237 133.974 cv
290.101 133.974 290.941 134.422 291.404 135.224 cv
291.495 135.381 291.567 135.544 291.62 135.71 cv
290.429 136.397 li
291.295 137.897 li
291.091 138.192 290.82 138.448 290.489 138.639 cv
290.095 138.866 289.665 138.974 289.241 138.974 cv
.25098 .192157 .552941 rgb
f
291.295 137.897 mo
290.429 136.397 li
291.62 135.71 li
291.861 136.457 291.731 137.267 291.295 137.897 cv
.25098 .309804 .65098 rgb
f
285.491 132.479 mo
284.627 132.479 283.787 132.031 283.324 131.229 cv
282.634 130.033 283.043 128.504 284.239 127.814 cv
284.57 127.623 284.927 127.516 285.284 127.487 cv
287.545 131.403 li
287.341 131.697 287.07 131.953 286.739 132.144 cv
286.345 132.371 285.915 132.479 285.491 132.479 cv
.25098 .192157 .552941 rgb
f
287.545 131.403 mo
285.284 127.487 li
285.352 127.481 285.42 127.478 285.487 127.478 cv
286.351 127.478 287.191 127.927 287.654 128.729 cv
288.154 129.594 288.077 130.632 287.545 131.403 cv
.25098 .309804 .65098 rgb
f
281.742 125.984 mo
281.659 125.984 281.577 125.98 281.495 125.972 cv
284.016 124.516 li
283.808 124.976 283.46 125.377 282.989 125.649 cv
282.595 125.876 282.166 125.984 281.742 125.984 cv
.25098 .192157 .552941 rgb
f
280.094 125.367 mo
279.892 125.19 279.716 124.979 279.574 124.734 cv
279.384 124.404 279.277 124.049 279.247 123.694 cv
282.132 122.028 li
282.363 122.428 li
283.54 121.749 li
283.678 121.892 283.8 122.054 283.904 122.234 cv
284.046 122.479 284.141 122.737 284.193 123 cv
280.094 125.367 li
.258824 .282353 .6 rgb
f
279.247 123.694 mo
279.169 122.759 279.622 121.819 280.489 121.318 cv
280.82 121.127 281.177 121.021 281.534 120.991 cv
282.132 122.028 li
279.247 123.694 li
.258824 .286274 .607843 rgb
f
281.495 125.972 mo
280.982 125.921 280.489 125.712 280.094 125.367 cv
284.193 123 li
284.294 123.515 284.229 124.046 284.016 124.516 cv
281.495 125.972 li
.258824 .298039 .623529 rgb
f
282.363 122.428 mo
282.132 122.028 li
283.167 121.431 li
283.3 121.523 283.425 121.63 283.54 121.749 cv
282.363 122.428 li
.258824 .388235 .686274 rgb
f
282.132 122.028 mo
281.534 120.991 li
281.601 120.986 281.669 120.983 281.737 120.983 cv
282.246 120.983 282.747 121.139 283.167 121.431 cv
282.132 122.028 li
.258824 .392157 .694118 rgb
f
275.54 117.492 mo
275.328 116.466 275.782 115.376 276.739 114.823 cv
277.133 114.596 277.563 114.488 277.987 114.488 cv
278.399 114.488 278.806 114.59 279.169 114.784 cv
278.255 115.312 li
278.52 115.772 li
275.54 117.492 li
.25098 .176471 .529412 rgb
f
278.52 115.772 mo
278.255 115.312 li
279.169 114.784 li
279.341 114.876 279.502 114.988 279.65 115.119 cv
278.52 115.772 li
.25098 .294118 .635294 rgb
f
277.991 119.489 mo
277.127 119.489 276.287 119.04 275.824 118.239 cv
275.686 118 275.593 117.748 275.54 117.492 cv
278.52 115.772 li
280.045 118.412 li
279.841 118.707 279.57 118.962 279.239 119.153 cv
278.845 119.381 278.415 119.489 277.991 119.489 cv
.258824 .286274 .607843 rgb
f
280.045 118.412 mo
278.52 115.772 li
279.65 115.119 li
279.845 115.293 280.017 115.5 280.154 115.739 cv
280.654 116.603 280.577 117.642 280.045 118.412 cv
.258824 .392157 .694118 rgb
f
274.241 112.994 mo
273.377 112.994 272.537 112.545 272.074 111.744 cv
271.384 110.547 271.793 109.019 272.989 108.328 cv
273.383 108.101 273.813 107.993 274.237 107.993 cv
275.101 107.993 275.941 108.441 276.404 109.243 cv
277.095 110.439 276.685 111.968 275.489 112.658 cv
275.095 112.886 274.665 112.994 274.241 112.994 cv
.25098 .176471 .529412 rgb
f
268.621 102.335 mo
268.794 102.141 269.001 101.97 269.239 101.833 cv
269.477 101.696 269.728 101.602 269.983 101.549 cv
268.621 102.335 li
.239216 .152941 .501961 rgb
f
270.491 106.499 mo
269.627 106.499 268.787 106.05 268.324 105.249 cv
267.771 104.29 267.924 103.119 268.621 102.335 cv
269.983 101.549 li
270.15 101.514 270.319 101.497 270.487 101.497 cv
271.351 101.497 272.191 101.946 272.654 102.748 cv
273.345 103.943 272.934 105.473 271.739 106.163 cv
271.345 106.39 270.915 106.499 270.491 106.499 cv
.25098 .176471 .529412 rgb
f
195.993 193.119 mo
195.129 193.119 194.289 192.671 193.826 191.869 cv
193.135 190.673 193.545 189.145 194.741 188.454 cv
195.135 188.227 195.565 188.119 195.989 188.119 cv
196.853 188.119 197.693 188.567 198.156 189.368 cv
198.664 190.249 198.576 191.31 198.017 192.084 cv
196.246 193.107 li
196.162 193.115 196.077 193.119 195.993 193.119 cv
192.243 186.624 mo
191.379 186.624 190.539 186.176 190.076 185.373 cv
189.385 184.178 189.795 182.649 190.991 181.959 cv
191.385 181.732 191.815 181.623 192.239 181.623 cv
193.103 181.623 193.943 182.071 194.406 182.873 cv
195.097 184.069 194.686 185.599 193.491 186.289 cv
193.097 186.516 192.667 186.624 192.243 186.624 cv
.0392157 .0862745 .305882 rgb
f
186.647 179.318 mo
186.527 179.186 186.419 179.04 186.326 178.879 cv
186.081 178.455 185.975 177.99 185.992 177.535 cv
189.659 175.418 li
190.062 175.63 190.412 175.955 190.656 176.379 cv
190.749 176.54 190.822 176.706 190.876 176.876 cv
186.647 179.318 li
.0392157 .0666667 .258824 rgb
f
185.992 177.535 mo
186.024 176.705 186.468 175.909 187.241 175.464 cv
187.635 175.236 188.064 175.128 188.489 175.128 cv
188.896 175.128 189.299 175.228 189.659 175.418 cv
185.992 177.535 li
.0392157 .0705882 .270588 rgb
f
188.492 180.128 mo
187.802 180.128 187.127 179.842 186.647 179.318 cv
190.876 176.876 li
191.222 177.97 190.776 179.196 189.741 179.793 cv
189.347 180.02 188.917 180.128 188.492 180.128 cv
.0392157 .0862745 .305882 rgb
f
184.742 173.633 mo
183.879 173.633 183.039 173.185 182.576 172.384 cv
181.885 171.187 182.295 169.658 183.491 168.968 cv
183.884 168.74 184.314 168.632 184.738 168.632 cv
185.602 168.632 186.443 169.081 186.906 169.883 cv
187.596 171.079 187.187 172.607 185.991 173.298 cv
185.597 173.525 185.167 173.633 184.742 173.633 cv
180.992 167.138 mo
180.129 167.138 179.289 166.69 178.826 165.889 cv
178.135 164.692 178.545 163.163 179.741 162.473 cv
180.134 162.245 180.564 162.137 180.988 162.137 cv
181.852 162.137 182.693 162.586 183.156 163.388 cv
183.846 164.584 183.437 166.112 182.241 166.803 cv
181.847 167.03 181.417 167.138 180.992 167.138 cv
177.243 160.643 mo
176.379 160.643 175.539 160.195 175.076 159.393 cv
174.385 158.197 174.795 156.668 175.991 155.978 cv
176.384 155.75 176.814 155.642 177.238 155.642 cv
178.103 155.642 178.943 156.091 179.406 156.893 cv
180.096 158.088 179.687 159.617 178.491 160.308 cv
178.097 160.535 177.667 160.643 177.243 160.643 cv
.0392157 .0705882 .270588 rgb
f
306.155 64.0598 mo
305.637 62.9043 306.067 61.5214 307.187 60.8746 cv
307.581 60.6472 308.011 60.5391 308.435 60.5391 cv
309.218 60.5391 309.981 60.9073 310.462 61.573 cv
306.155 64.0598 li
304.689 59.0449 mo
303.826 59.0448 302.985 58.5964 302.522 57.7944 cv
301.832 56.5987 302.241 55.0698 303.438 54.3794 cv
303.831 54.152 304.261 54.044 304.685 54.044 cv
305.549 54.044 306.389 54.4924 306.853 55.2944 cv
307.543 56.4903 307.133 58.019 305.937 58.7094 cv
305.544 58.9368 305.114 59.0449 304.689 59.0449 cv
300.94 52.5498 mo
300.076 52.5497 299.236 52.1014 298.773 51.2994 cv
298.082 50.1035 298.491 48.5748 299.688 47.8842 cv
300.081 47.6568 300.511 47.5487 300.935 47.5487 cv
301.799 47.5487 302.64 47.997 303.103 48.7989 cv
303.793 49.9951 303.383 51.5239 302.188 52.2144 cv
301.794 52.4417 301.364 52.5498 300.94 52.5498 cv
297.189 46.0542 mo
296.325 46.0542 295.486 45.6059 295.022 44.8042 cv
294.567 44.0148 294.59 43.0801 295.003 42.3375 cv
297.226 41.054 li
298.075 41.0678 298.897 41.5145 299.353 42.3042 cv
300.043 43.4996 299.633 45.0289 298.438 45.7187 cv
298.044 45.9461 297.614 46.0542 297.189 46.0542 cv
.0666667 .0745098 .227451 rgb
f
295.003 42.3375 mo
295.215 41.9552 295.531 41.6238 295.938 41.3892 cv
296.331 41.1618 296.761 41.0536 297.185 41.0536 cv
297.199 41.0536 297.213 41.0538 297.226 41.054 cv
295.003 42.3375 li
293.439 39.5591 mo
292.576 39.5591 291.736 39.1108 291.272 38.309 cv
290.582 37.1128 290.991 35.5839 292.187 34.8935 cv
292.581 34.6664 293.011 34.5584 293.435 34.5584 cv
294.299 34.5584 295.139 35.0068 295.603 35.8091 cv
296.293 37.0044 295.883 38.5337 294.687 39.2237 cv
294.294 39.451 293.864 39.5591 293.439 39.5591 cv
289.689 33.0639 mo
288.826 33.0638 287.985 32.6156 287.522 31.814 cv
286.832 30.6177 287.241 29.0889 288.437 28.3984 cv
288.831 28.171 289.261 28.063 289.685 28.063 cv
290.549 28.063 291.389 28.5115 291.852 29.3135 cv
292.543 30.5092 292.133 32.038 290.937 32.7285 cv
290.543 32.9559 290.114 33.064 289.689 33.0639 cv
f
285.939 26.5688 mo
285.076 26.5688 284.236 26.1204 283.772 25.3184 cv
283.518 24.8771 283.413 24.3905 283.442 23.9174 cv
287.055 21.8315 li
287.479 22.0429 287.848 22.3771 288.102 22.8184 cv
288.793 24.0137 288.383 25.543 287.187 26.2334 cv
286.794 26.4607 286.364 26.5688 285.939 26.5688 cv
f
283.442 23.9174 mo
283.491 23.1084 283.933 22.339 284.687 21.9034 cv
285.081 21.676 285.511 21.5679 285.935 21.5679 cv
286.324 21.5679 286.708 21.6587 287.055 21.8315 cv
283.442 23.9174 li
.0666667 .0941176 .282353 rgb
f
250.996 94.2274 mo
250.132 94.2274 249.292 93.7789 248.829 92.9766 cv
248.139 91.7812 248.548 90.2525 249.744 89.5619 cv
250.138 89.3345 250.568 89.2264 250.992 89.2264 cv
251.856 89.2264 252.696 89.6747 253.159 90.4766 cv
253.85 91.6728 253.439 93.2017 252.244 93.8921 cv
251.85 94.1194 251.421 94.2275 250.996 94.2274 cv
247.246 87.732 mo
246.382 87.732 245.542 87.2837 245.079 86.4814 cv
244.389 85.2857 244.798 83.7573 245.994 83.0669 cv
246.388 82.8395 246.818 82.7314 247.242 82.7314 cv
248.106 82.7314 248.946 83.1796 249.409 83.9814 cv
250.1 85.1778 249.689 86.706 248.494 87.3964 cv
248.1 87.6239 247.67 87.732 247.246 87.732 cv
243.496 81.2369 mo
242.632 81.2368 241.792 80.7886 241.328 79.9864 cv
240.638 78.7905 241.048 77.2618 242.244 76.5712 cv
242.638 76.3439 243.067 76.2359 243.492 76.2359 cv
244.356 76.2359 245.196 76.6843 245.659 77.4862 cv
246.35 78.6821 245.94 80.2109 244.744 80.9014 cv
244.35 81.1288 243.92 81.2369 243.496 81.2369 cv
239.746 74.7416 mo
239.509 74.7416 239.274 74.708 239.049 74.6427 cv
242.171 72.8399 li
242.014 73.4772 241.607 74.0521 240.994 74.4062 cv
240.6 74.6336 240.17 74.7417 239.746 74.7416 cv
0 .0431373 .501961 rgb
f
239.049 74.6427 mo
238.45 74.4696 237.915 74.0739 237.579 73.4917 cv
236.888 72.2954 237.298 70.7666 238.494 70.0762 cv
238.888 69.8488 239.317 69.7408 239.742 69.7408 cv
240.606 69.7408 241.446 70.1892 241.909 70.9912 cv
242.245 71.5735 242.321 72.2348 242.171 72.8399 cv
239.049 74.6427 li
235.996 68.2465 mo
235.132 68.2465 234.292 67.798 233.829 66.996 cv
233.779 66.9098 233.735 66.8217 233.696 66.7324 cv
237.997 64.2494 li
238.014 64.2725 238.031 64.2959 238.047 64.3197 cv
238.015 64.3383 li
238.282 64.8013 li
238.304 64.7887 li
238.779 65.9307 238.344 67.2759 237.244 67.911 cv
236.85 68.1385 236.42 68.2466 235.996 68.2465 cv
233.513 66.063 mo
233.39 65.0937 233.845 64.1002 234.744 63.5811 cv
235.138 63.3537 235.567 63.2457 235.992 63.2457 cv
236.536 63.2457 237.071 63.4238 237.509 63.7562 cv
233.513 66.063 li
f
238.282 64.8013 mo
238.015 64.3383 li
238.047 64.3197 li
238.087 64.3765 238.124 64.4352 238.159 64.4961 cv
238.214 64.5917 238.263 64.6894 238.304 64.7887 cv
238.282 64.8013 li
0 .0941176 .541176 rgb
f
233.696 66.7324 mo
233.602 66.5148 233.542 66.2896 233.513 66.063 cv
237.509 63.7562 li
237.642 63.8579 237.767 63.9738 237.879 64.1036 cv
237.886 64.1152 li
237.888 64.114 li
237.926 64.1575 237.962 64.2028 237.997 64.2494 cv
233.696 66.7324 li
0 .721569 .917647 rgb
f
237.886 64.1152 mo
237.879 64.1036 li
237.882 64.107 237.885 64.1105 237.888 64.114 cv
237.886 64.1152 li
0 .737255 .921569 rgb
f
230.948 61.3894 mo
230.599 61.1784 230.297 60.879 230.079 60.501 cv
229.388 59.3052 229.798 57.7764 230.994 57.0859 cv
231.388 56.8585 231.818 56.7504 232.242 56.7504 cv
233.106 56.7504 233.946 57.1987 234.409 58.0011 cv
234.627 58.379 234.736 58.7903 234.744 59.198 cv
230.948 61.3894 li
0 .0431373 .501961 rgb
f
232.246 61.7513 mo
231.79 61.7513 231.339 61.626 230.948 61.3894 cv
234.744 59.198 li
234.761 60.0795 234.311 60.9439 233.494 61.416 cv
233.1 61.6433 232.671 61.7513 232.246 61.7513 cv
f
226.543 51.191 mo
226.732 50.9557 226.967 50.7508 227.244 50.5909 cv
227.521 50.4309 227.816 50.33 228.114 50.2842 cv
226.543 51.191 li
f
229.689 54.9513 mo
229.798 54.8888 li
229.78 54.8997 229.762 54.9104 229.744 54.9209 cv
229.726 54.9313 229.707 54.9414 229.689 54.9513 cv
f
228.496 55.256 mo
227.632 55.256 226.792 54.8077 226.329 54.0059 cv
225.798 53.0866 225.917 51.9714 226.543 51.191 cv
228.114 50.2842 li
228.24 50.2648 228.366 50.2553 228.492 50.2553 cv
229.356 50.2553 230.196 50.7035 230.659 51.5059 cv
231.339 52.6831 230.952 54.1841 229.798 54.8888 cv
229.689 54.9513 li
229.311 55.1577 228.901 55.256 228.496 55.256 cv
0 .0627451 .537255 rgb
f
287.456 103.655 mo
287.3 103.655 287.146 103.625 287.002 103.568 cv
286.243 102.254 li
286.295 101.896 286.505 101.565 286.843 101.37 cv
287.036 101.258 287.246 101.206 287.454 101.206 cv
287.877 101.206 288.288 101.425 288.516 101.818 cv
288.854 102.404 288.653 103.152 288.067 103.491 cv
287.874 103.602 287.664 103.655 287.456 103.655 cv
.294118 .0509804 .160784 rgb
f
287.002 103.568 mo
286.755 103.47 286.538 103.291 286.395 103.043 cv
286.251 102.795 286.205 102.517 286.243 102.254 cv
287.002 103.568 li
.294118 .0705882 .215686 rgb
f
292.228 100.9 mo
291.805 100.9 291.393 100.68 291.166 100.287 cv
290.828 99.7016 291.029 98.9531 291.615 98.6147 cv
291.808 98.5033 292.018 98.4503 292.226 98.4503 cv
292.649 98.4503 293.06 98.6699 293.287 99.0629 cv
293.625 99.649 293.425 100.397 292.839 100.735 cv
292.646 100.847 292.435 100.9 292.228 100.9 cv
297 98.1449 mo
296.577 98.1449 296.165 97.9252 295.938 97.5323 cv
295.6 96.9467 295.801 96.1977 296.387 95.8598 cv
296.58 95.7484 296.79 95.6954 296.998 95.6954 cv
297.421 95.6954 297.832 95.915 298.06 96.3077 cv
298.397 96.8936 298.197 97.6421 297.611 97.9805 cv
297.418 98.0919 297.208 98.1449 297 98.1449 cv
301.772 95.3897 mo
301.349 95.3897 300.937 95.1701 300.71 94.7774 cv
300.372 94.1915 300.573 93.4428 301.158 93.1045 cv
301.351 92.9932 301.562 92.9403 301.77 92.9403 cv
302.193 92.9403 302.604 93.1597 302.831 93.5528 cv
303.17 94.1387 302.969 94.8872 302.383 95.2256 cv
302.19 95.3368 301.98 95.3897 301.772 95.3897 cv
306.544 92.6346 mo
306.121 92.6346 305.709 92.4149 305.482 92.022 cv
305.145 91.4366 305.345 90.6876 305.931 90.3497 cv
306.124 90.2382 306.334 90.1852 306.542 90.1852 cv
306.965 90.1852 307.376 90.4048 307.604 90.7974 cv
307.941 91.3833 307.741 92.1323 307.155 92.4702 cv
306.962 92.5816 306.752 92.6346 306.544 92.6346 cv
.294118 .0509804 .160784 rgb
f
203.446 129.022 mo
202.582 129.022 201.742 128.574 201.279 127.772 cv
200.588 126.576 200.999 125.047 202.194 124.356 cv
202.588 124.129 203.018 124.021 203.442 124.021 cv
204.306 124.021 205.146 124.469 205.609 125.271 cv
206.3 126.467 205.89 127.996 204.694 128.687 cv
204.301 128.914 203.871 129.022 203.446 129.022 cv
.0627451 .0941176 .501961 rgb
f
199.697 122.527 mo
199.432 122.527 199.169 122.485 198.919 122.403 cv
197.692 120.278 li
197.246 120.535 li
197.032 119.508 197.485 118.415 198.444 117.861 cv
198.838 117.634 199.268 117.526 199.692 117.526 cv
200.556 117.526 201.396 117.974 201.859 118.776 cv
202.55 119.972 202.14 121.501 200.944 122.191 cv
200.551 122.419 200.121 122.527 199.697 122.527 cv
.231373 .427451 .701961 rgb
f
198.919 122.403 mo
198.353 122.219 197.85 121.832 197.529 121.276 cv
197.392 121.039 197.299 120.789 197.246 120.535 cv
197.692 120.278 li
198.919 122.403 li
.301961 .52549 .764706 rgb
f
195.946 116.031 mo
195.682 116.031 195.419 115.989 195.169 115.908 cv
193.498 113.013 li
193.64 112.344 194.055 111.735 194.694 111.366 cv
195.088 111.139 195.518 111.031 195.942 111.031 cv
196.806 111.031 197.646 111.479 198.109 112.281 cv
198.8 113.477 198.39 115.005 197.194 115.696 cv
196.8 115.923 196.371 116.031 195.946 116.031 cv
.0627451 .0941176 .501961 rgb
f
195.169 115.908 mo
194.603 115.724 194.1 115.337 193.779 114.781 cv
193.458 114.224 193.375 113.596 193.498 113.013 cv
195.169 115.908 li
.14902 .235294 .603922 rgb
f
192.196 109.536 mo
191.932 109.536 191.669 109.494 191.419 109.413 cv
189.748 106.519 li
189.89 105.849 190.305 105.24 190.944 104.871 cv
191.338 104.643 191.768 104.535 192.192 104.535 cv
193.056 104.535 193.896 104.984 194.359 105.786 cv
195.05 106.981 194.64 108.51 193.444 109.201 cv
193.05 109.428 192.621 109.536 192.196 109.536 cv
.0627451 .0941176 .501961 rgb
f
191.419 109.413 mo
190.853 109.228 190.35 108.842 190.029 108.286 cv
189.708 107.73 189.625 107.101 189.748 106.519 cv
191.419 109.413 li
.14902 .235294 .603922 rgb
f
188.446 103.041 mo
187.959 103.041 187.48 102.899 187.071 102.631 cv
187.395 102.443 li
185.998 100.023 li
186.14 99.3535 186.555 98.7446 187.194 98.3755 cv
187.588 98.1481 188.018 98.0401 188.442 98.0401 cv
189.306 98.0401 190.146 98.4885 190.609 99.2905 cv
191.3 100.486 190.89 102.015 189.694 102.705 cv
189.3 102.933 188.871 103.041 188.446 103.041 cv
.0627451 .0941176 .501961 rgb
f
187.071 102.631 mo
186.755 102.423 186.481 102.141 186.279 101.791 cv
185.958 101.234 185.875 100.606 185.998 100.023 cv
187.395 102.443 li
187.071 102.631 li
.14902 .235294 .603922 rgb
f
184.696 96.5459 mo
184.11 96.5458 183.534 96.3392 183.08 95.9556 cv
187.156 93.6027 li
187.337 94.6106 186.882 95.6687 185.944 96.2105 cv
185.551 96.4378 185.121 96.5459 184.696 96.5459 cv
182.622 95.4448 mo
182.589 95.3965 182.558 95.3467 182.529 95.2955 cv
182.489 95.2272 182.454 95.1578 182.421 95.0875 cv
182.967 94.7725 li
182.248 93.5278 li
182.39 92.8583 182.805 92.2495 183.444 91.8803 cv
183.838 91.6529 184.268 91.5448 184.692 91.5448 cv
185.556 91.5448 186.396 91.9932 186.859 92.7953 cv
186.889 92.8465 186.916 92.8983 186.942 92.9507 cv
182.622 95.4448 li
.0627451 .0941176 .501961 rgb
f
182.421 95.0875 mo
182.19 94.5854 182.14 94.0389 182.248 93.5278 cv
182.967 94.7725 li
182.421 95.0875 li
.14902 .235294 .603922 rgb
f
183.08 95.9556 mo
182.908 95.8103 182.753 95.6394 182.622 95.4448 cv
186.942 92.9507 li
187.045 93.1616 187.116 93.3809 187.156 93.6027 cv
183.08 95.9556 li
.0627451 .737255 .917647 rgb
f
180.947 90.0505 mo
180.682 90.0505 180.419 90.0083 180.169 89.9269 cv
179.977 89.5948 li
179.732 89.7368 li
179.347 89.5243 179.014 89.2081 178.779 88.8003 cv
178.088 87.6044 178.499 86.0757 179.694 85.3853 cv
180.088 85.1579 180.518 85.0497 180.942 85.0497 cv
181.806 85.0497 182.646 85.498 183.109 86.3003 cv
183.648 87.2322 183.517 88.367 182.867 89.1491 cv
181.368 90.0146 li
181.228 90.0386 181.087 90.0505 180.947 90.0505 cv
.0627451 .0941176 .501961 rgb
f
180.169 89.9269 mo
180.018 89.8777 179.871 89.8141 179.732 89.7368 cv
179.977 89.5948 li
180.169 89.9269 li
.14902 .235294 .603922 rgb
f
181.368 90.0146 mo
182.867 89.1491 li
182.683 89.3702 182.458 89.5632 182.194 89.7153 cv
181.931 89.8674 181.651 89.966 181.368 90.0146 cv
.0627451 .0941176 .501961 rgb
f
239.417 138.348 mo
239.184 138.247 238.981 138.073 238.845 137.837 cv
238.507 137.251 238.707 136.503 239.293 136.164 cv
239.486 136.053 239.697 136 239.904 136 cv
240.327 136 240.739 136.219 240.965 136.612 cv
241.102 136.849 241.151 137.112 241.122 137.363 cv
239.417 138.348 li
.686274 .0705882 .239216 rgb
f
239.906 138.449 mo
239.738 138.449 239.571 138.414 239.417 138.348 cv
241.122 137.363 li
241.079 137.736 240.867 138.084 240.518 138.285 cv
240.325 138.396 240.114 138.449 239.906 138.449 cv
.690196 .192157 .360784 rgb
f
244.189 135.593 mo
243.957 135.492 243.753 135.318 243.617 135.082 cv
243.278 134.496 243.479 133.748 244.065 133.409 cv
244.258 133.298 244.469 133.245 244.676 133.245 cv
245.099 133.245 245.511 133.464 245.737 133.857 cv
245.874 134.094 245.923 134.357 245.894 134.608 cv
244.189 135.593 li
.686274 .0705882 .239216 rgb
f
244.678 135.694 mo
244.509 135.694 244.343 135.659 244.189 135.593 cv
245.894 134.608 li
245.851 134.98 245.639 135.328 245.289 135.53 cv
245.096 135.641 244.886 135.694 244.678 135.694 cv
.690196 .192157 .360784 rgb
f
248.961 132.838 mo
248.728 132.737 248.525 132.563 248.389 132.327 cv
248.051 131.741 248.251 130.992 248.837 130.654 cv
249.03 130.543 249.24 130.49 249.448 130.49 cv
249.871 130.49 250.283 130.709 250.51 131.102 cv
250.646 131.339 250.695 131.602 250.666 131.853 cv
248.961 132.838 li
.686274 .0705882 .239216 rgb
f
249.45 132.939 mo
249.281 132.939 249.115 132.904 248.961 132.838 cv
250.666 131.853 li
250.623 132.225 250.411 132.573 250.061 132.775 cv
249.869 132.886 249.658 132.939 249.45 132.939 cv
.690196 .192157 .360784 rgb
f
253.733 130.083 mo
253.5 129.982 253.297 129.808 253.16 129.572 cv
252.822 128.986 253.023 128.237 253.609 127.899 cv
253.802 127.788 254.012 127.735 254.22 127.735 cv
254.643 127.735 255.055 127.954 255.281 128.347 cv
255.418 128.584 255.467 128.846 255.438 129.098 cv
253.733 130.083 li
.686274 .0705882 .239216 rgb
f
254.222 130.184 mo
254.054 130.184 253.887 130.149 253.733 130.083 cv
255.438 129.098 li
255.395 129.47 255.183 129.818 254.833 130.02 cv
254.64 130.131 254.43 130.184 254.222 130.184 cv
.690196 .192157 .360784 rgb
f
258.505 127.327 mo
258.272 127.227 258.069 127.053 257.933 126.816 cv
257.672 126.364 257.732 125.815 258.042 125.433 cv
258.978 127.054 li
258.505 127.327 li
.686274 .0705882 .239216 rgb
f
258.978 127.054 mo
258.042 125.433 li
258.134 125.32 258.247 125.221 258.381 125.144 cv
258.574 125.033 258.785 124.98 258.992 124.98 cv
259.416 124.98 259.827 125.199 260.054 125.592 cv
260.19 125.828 260.239 126.091 260.21 126.343 cv
258.978 127.054 li
f
258.994 127.429 mo
258.825 127.429 258.659 127.394 258.505 127.327 cv
258.978 127.054 li
259.186 127.414 li
259.122 127.424 259.058 127.429 258.994 127.429 cv
.690196 .192157 .360784 rgb
f
259.186 127.414 mo
258.978 127.054 li
260.21 126.343 li
260.167 126.715 259.955 127.063 259.606 127.265 cv
259.472 127.342 259.33 127.391 259.186 127.414 cv
f
263.277 124.572 mo
263.044 124.472 262.841 124.298 262.704 124.062 cv
262.366 123.476 262.567 122.727 263.152 122.389 cv
263.345 122.277 263.556 122.224 263.764 122.224 cv
264.187 122.224 264.599 122.444 264.825 122.837 cv
264.962 123.073 265.011 123.336 264.982 123.588 cv
263.277 124.572 li
.686274 .0705882 .239216 rgb
f
263.766 124.674 mo
263.598 124.674 263.431 124.639 263.277 124.572 cv
264.982 123.588 li
264.939 123.96 264.726 124.308 264.377 124.51 cv
264.184 124.621 263.974 124.674 263.766 124.674 cv
.690196 .192157 .360784 rgb
f
478.149 135.695 mo
462.184 108.042 li
480 97.756 li
480 134.626 li
478.149 135.695 li
0 .0470588 .14902 rgb
f
462.184 108.042 mo
461.657 107.13 li
472.391 100.933 li
468.215 93.7004 li
480 86.8966 li
480 97.756 li
462.184 108.042 li
f
464.941 88.03 mo
438.49 42.2145 li
438.771 41.5241 438.741 40.7159 438.34 40.0201 cv
437.938 39.3246 437.253 38.8951 436.514 38.7934 cv
434.74 35.7193 li
434.971 35.1512 434.992 34.5031 434.768 33.9037 cv
472.179 12.3048 li
480 25.8517 li
480 79.3356 li
464.941 88.03 li
472.634 50.749 mo
472.427 50.749 472.216 50.8018 472.023 50.9131 cv
471.438 51.2515 471.237 52 471.575 52.5859 cv
471.802 52.9789 472.213 53.1983 472.637 53.1983 cv
472.844 53.1983 473.055 53.1454 473.248 53.0341 cv
473.834 52.6959 474.034 51.9472 473.696 51.3613 cv
473.469 50.9686 473.057 50.749 472.634 50.749 cv
477.406 47.9938 mo
477.199 47.9938 476.988 48.0468 476.795 48.1582 cv
476.21 48.4966 476.009 49.2451 476.347 49.8306 cv
476.574 50.2236 476.985 50.4432 477.408 50.4432 cv
477.616 50.4432 477.827 50.3902 478.02 50.2787 cv
478.605 49.941 478.806 49.1923 478.468 48.6064 cv
478.241 48.2134 477.83 47.9938 477.406 47.9938 cv
f
468.215 93.7004 mo
464.941 88.03 li
480 79.3356 li
480 86.8966 li
468.215 93.7004 li
.286274 .188235 .533333 rgb
f
438.49 42.2145 mo
436.514 38.7934 li
437.253 38.8951 437.938 39.3246 438.34 40.0201 cv
438.741 40.7159 438.771 41.5241 438.49 42.2145 cv
434.74 35.7193 mo
433.961 34.37 li
434.768 33.9037 li
434.992 34.5031 434.971 35.1512 434.74 35.7193 cv
.0352941 .0588235 .215686 rgb
f
472.637 53.1983 mo
472.213 53.1983 471.802 52.9789 471.575 52.5859 cv
471.237 52 471.438 51.2515 472.023 50.9131 cv
472.216 50.8018 472.427 50.749 472.634 50.749 cv
473.057 50.749 473.469 50.9686 473.696 51.3613 cv
474.034 51.9472 473.834 52.6959 473.248 53.0341 cv
473.055 53.1454 472.844 53.1983 472.637 53.1983 cv
477.408 50.4432 mo
476.985 50.4432 476.574 50.2236 476.347 49.8306 cv
476.009 49.2451 476.21 48.4966 476.795 48.1582 cv
476.988 48.0468 477.199 47.9938 477.406 47.9938 cv
477.83 47.9938 478.241 48.2134 478.468 48.6064 cv
478.806 49.1923 478.605 49.941 478.02 50.2787 cv
477.827 50.3902 477.616 50.4432 477.408 50.4432 cv
1 .054902 .188235 rgb
f
434.768 33.9037 mo
434.72 33.7747 434.661 33.6481 434.59 33.5249 cv
434.188 32.8294 433.503 32.4 432.764 32.2982 cv
430.99 29.224 li
431.271 28.5336 431.241 27.7253 430.84 27.0297 cv
430.438 26.3342 429.753 25.9047 429.014 25.8029 cv
427.24 22.7288 li
427.521 22.0383 427.491 21.23 427.09 20.5347 cv
426.688 19.8391 426.003 19.4095 425.264 19.3077 cv
423.49 16.2336 li
423.771 15.5432 423.741 14.7348 423.34 14.0396 cv
422.938 13.344 422.253 12.9144 421.514 12.8126 cv
419.74 9.73848 li
420.021 9.04801 419.991 8.23967 419.59 7.54439 cv
419.188 6.84867 418.503 6.41915 417.764 6.31736 cv
415.99 3.24331 li
416.271 2.55294 416.241 1.74457 415.84 1.04938 cv
415.793 .969133 415.743 .892502 415.69 .81943 cv
417.109 0 li
431.051 0 li
429.735 .759713 li
432.162 4.96295 li
440.759 0 li
465.074 0 li
472.179 12.3048 li
434.768 33.9037 li
0 .0509804 .164706 rgb
f
433.961 34.37 mo
432.764 32.2982 li
433.503 32.4 434.188 32.8294 434.59 33.5249 cv
434.661 33.6481 434.72 33.7747 434.768 33.9037 cv
433.961 34.37 li
430.99 29.224 mo
429.014 25.8029 li
429.753 25.9047 430.438 26.3342 430.84 27.0297 cv
431.241 27.7253 431.271 28.5336 430.99 29.224 cv
427.24 22.7288 mo
425.264 19.3077 li
426.003 19.4095 426.688 19.8391 427.09 20.5347 cv
427.491 21.23 427.521 22.0383 427.24 22.7288 cv
423.49 16.2336 mo
421.514 12.8126 li
422.253 12.9144 422.938 13.344 423.34 14.0396 cv
423.741 14.7348 423.771 15.5432 423.49 16.2336 cv
419.74 9.73848 mo
417.764 6.31736 li
418.503 6.41915 419.188 6.84867 419.59 7.54439 cv
419.991 8.23967 420.021 9.04801 419.74 9.73848 cv
415.99 3.24331 mo
414.865 1.29565 li
415.69 .81943 li
415.743 .892502 415.793 .969133 415.84 1.04938 cv
416.241 1.74457 416.271 2.55294 415.99 3.24331 cv
.0352941 .0627451 .223529 rgb
f
427.004 59.8783 mo
417.698 43.7593 li
420.517 42.1318 li
429.823 58.2507 li
427.004 59.8783 li
0 .0470588 .14902 rgb
f
461.657 107.13 mo
432.533 56.686 li
429.823 58.2507 li
420.517 42.1318 li
430.498 36.369 li
430.981 36.9542 431.695 37.2755 432.426 37.2755 cv
432.851 37.2755 433.281 37.1674 433.675 36.9399 cv
434.175 36.6511 434.537 36.2157 434.74 35.7193 cv
436.514 38.7934 li
436.401 38.7778 436.287 38.7699 436.173 38.7699 cv
435.748 38.7699 435.319 38.878 434.925 39.1054 cv
433.729 39.796 433.319 41.3242 434.01 42.5201 cv
434.473 43.3224 435.313 43.7706 436.177 43.7707 cv
436.601 43.7707 437.031 43.6628 437.425 43.4356 cv
437.925 43.1467 438.287 42.7111 438.49 42.2145 cv
464.941 88.03 li
458.228 91.9063 li
461.501 97.5767 li
468.215 93.7004 li
472.391 100.933 li
461.657 107.13 li
f
461.501 97.5767 mo
458.228 91.9063 li
464.941 88.03 li
468.215 93.7004 li
461.501 97.5767 li
.286274 .188235 .533333 rgb
f
436.177 43.7707 mo
435.313 43.7706 434.473 43.3224 434.01 42.5201 cv
433.319 41.3242 433.729 39.796 434.925 39.1054 cv
435.319 38.878 435.748 38.7699 436.173 38.7699 cv
436.287 38.7699 436.401 38.7778 436.514 38.7934 cv
438.49 42.2145 li
438.287 42.7111 437.925 43.1467 437.425 43.4356 cv
437.031 43.6628 436.601 43.7707 436.177 43.7707 cv
432.426 37.2755 mo
431.695 37.2755 430.981 36.9542 430.498 36.369 cv
433.961 34.37 li
434.74 35.7193 li
434.537 36.2157 434.175 36.6511 433.675 36.9399 cv
433.281 37.1674 432.851 37.2755 432.426 37.2755 cv
.0352941 .0588235 .215686 rgb
f
417.698 43.7593 mo
405.793 23.1392 li
399.168 26.9642 li
391.977 14.51 li
401.421 9.0574 li
420.517 42.1318 li
417.698 43.7593 li
0 .0509804 .164706 rgb
f
420.517 42.1318 mo
401.421 9.0574 li
411.385 3.30461 li
411.422 3.38742 411.463 3.46919 411.51 3.54936 cv
411.972 4.3511 412.812 4.79927 413.676 4.79927 cv
414.101 4.79927 414.531 4.69118 414.925 4.46385 cv
415.425 4.17527 415.787 3.73983 415.99 3.24331 cv
417.764 6.31736 li
417.651 6.30178 417.537 6.2939 417.423 6.2939 cv
416.998 6.2939 416.569 6.40196 416.175 6.62937 cv
414.979 7.31974 414.568 8.84868 415.26 10.0444 cv
415.722 10.8462 416.563 11.2947 417.427 11.2948 cv
417.851 11.2948 418.281 11.1868 418.675 10.9595 cv
419.175 10.6707 419.537 10.2351 419.74 9.73848 cv
421.514 12.8126 li
421.401 12.797 421.287 12.7891 421.172 12.7891 cv
420.748 12.7891 420.318 12.8971 419.925 13.1245 cv
418.729 13.8149 418.318 15.3437 419.01 16.5395 cv
419.472 17.3415 420.312 17.79 421.177 17.79 cv
421.601 17.7901 422.031 17.682 422.425 17.4546 cv
422.925 17.1657 423.287 16.7302 423.49 16.2336 cv
425.264 19.3077 li
425.151 19.2921 425.037 19.2842 424.922 19.2842 cv
424.498 19.2842 424.068 19.3922 423.675 19.6196 cv
422.478 20.3101 422.069 21.8389 422.76 23.0347 cv
423.222 23.8367 424.062 24.2851 424.927 24.2851 cv
425.351 24.2851 425.781 24.1771 426.175 23.9497 cv
426.675 23.661 427.037 23.2253 427.24 22.7288 cv
429.014 25.8029 li
428.901 25.7873 428.787 25.7794 428.672 25.7794 cv
428.248 25.7794 427.818 25.8874 427.425 26.1147 cv
426.228 26.8051 425.819 28.334 426.509 29.5297 cv
426.972 30.3321 427.813 30.7804 428.677 30.7804 cv
429.101 30.7804 429.531 30.6723 429.925 30.4449 cv
430.425 30.156 430.787 29.7205 430.99 29.224 cv
432.764 32.2982 li
432.652 32.2827 432.537 32.2748 432.423 32.2748 cv
431.998 32.2748 431.569 32.3829 431.175 32.6104 cv
429.978 33.3003 429.569 34.829 430.26 36.0249 cv
430.331 36.1481 430.411 36.2628 430.498 36.369 cv
420.517 42.1318 li
f
430.498 36.369 mo
430.411 36.2628 430.331 36.1481 430.26 36.0249 cv
429.569 34.829 429.978 33.3003 431.175 32.6104 cv
431.569 32.3829 431.998 32.2748 432.423 32.2748 cv
432.537 32.2748 432.652 32.2827 432.764 32.2982 cv
433.961 34.37 li
430.498 36.369 li
428.677 30.7804 mo
427.813 30.7804 426.972 30.3321 426.509 29.5297 cv
425.819 28.334 426.228 26.8051 427.425 26.1147 cv
427.818 25.8874 428.248 25.7794 428.672 25.7794 cv
428.787 25.7794 428.901 25.7873 429.014 25.8029 cv
430.99 29.224 li
430.787 29.7205 430.425 30.156 429.925 30.4449 cv
429.531 30.6723 429.101 30.7804 428.677 30.7804 cv
424.927 24.2851 mo
424.062 24.2851 423.222 23.8367 422.76 23.0347 cv
422.069 21.8389 422.478 20.3101 423.675 19.6196 cv
424.068 19.3922 424.498 19.2842 424.922 19.2842 cv
425.037 19.2842 425.151 19.2921 425.264 19.3077 cv
427.24 22.7288 li
427.037 23.2253 426.675 23.661 426.175 23.9497 cv
425.781 24.1771 425.351 24.2851 424.927 24.2851 cv
421.177 17.79 mo
420.312 17.79 419.472 17.3415 419.01 16.5395 cv
418.318 15.3437 418.729 13.8149 419.925 13.1245 cv
420.318 12.8971 420.748 12.7891 421.172 12.7891 cv
421.287 12.7891 421.401 12.797 421.514 12.8126 cv
423.49 16.2336 li
423.287 16.7302 422.925 17.1657 422.425 17.4546 cv
422.031 17.682 421.601 17.7901 421.177 17.79 cv
417.427 11.2948 mo
416.563 11.2947 415.722 10.8462 415.26 10.0444 cv
414.568 8.84868 414.979 7.31974 416.175 6.62937 cv
416.569 6.40196 416.998 6.2939 417.423 6.2939 cv
417.537 6.2939 417.651 6.30178 417.764 6.31736 cv
419.74 9.73848 li
419.537 10.2351 419.175 10.6707 418.675 10.9595 cv
418.281 11.1868 417.851 11.2948 417.427 11.2948 cv
413.676 4.79927 mo
412.812 4.79927 411.972 4.3511 411.51 3.54936 cv
411.463 3.46919 411.422 3.38742 411.385 3.30461 cv
414.865 1.29565 li
415.99 3.24331 li
415.787 3.73983 415.425 4.17527 414.925 4.46385 cv
414.531 4.69118 414.101 4.79927 413.676 4.79927 cv
.0352941 .0627451 .223529 rgb
f
309.308 78.8447 mo
302.118 66.3906 li
306.155 64.0598 li
306.19 64.1375 306.229 64.2142 306.272 64.2896 cv
306.736 65.0915 307.576 65.5399 308.44 65.5399 cv
308.864 65.54 309.294 65.4319 309.687 65.2046 cv
310.883 64.5142 311.293 62.9853 310.602 61.7896 cv
310.559 61.7142 310.512 61.642 310.462 61.573 cv
310.597 61.4949 li
317.788 73.949 li
309.308 78.8447 li
0 .0509804 .164706 rgb
f
317.788 73.949 mo
310.597 61.4949 li
333.17 48.4624 li
335.316 52.1802 li
341.165 48.8037 li
339.019 45.0858 li
341.643 43.5707 li
344.768 48.9834 li
377.173 30.2749 li
374.048 24.8615 li
391.977 14.51 li
399.168 26.9642 li
317.788 73.949 li
342.635 51.3495 mo
336.787 54.7262 li
339.84 60.0142 li
345.688 56.6376 li
342.635 51.3495 li
351.3 46.3472 mo
345.451 49.7236 li
348.504 55.0117 li
354.352 51.6352 li
351.3 46.3472 li
359.964 41.3448 mo
354.115 44.7212 li
357.169 50.0093 li
363.017 46.6329 li
359.964 41.3448 li
0 .0705882 .223529 rgb
f
339.84 60.0142 mo
336.787 54.7262 li
342.635 51.3495 li
345.688 56.6376 li
339.84 60.0142 li
348.504 55.0117 mo
345.451 49.7236 li
351.3 46.3472 li
354.352 51.6352 li
348.504 55.0117 li
335.316 52.1802 mo
333.17 48.4624 li
339.019 45.0858 li
341.165 48.8037 li
335.316 52.1802 li
357.169 50.0093 mo
354.115 44.7212 li
359.964 41.3448 li
363.017 46.6329 li
357.169 50.0093 li
0 .168627 .34902 rgb
f
344.768 48.9834 mo
341.643 43.5707 li
341.835 43.4601 li
343.981 47.1778 li
349.83 43.8012 li
347.683 40.0833 li
350.499 38.4575 li
352.646 42.1752 li
358.494 38.7988 li
356.347 35.0811 li
374.048 24.8615 li
377.173 30.2749 li
344.768 48.9834 li
.137255 .705882 .827451 rgb
f
343.981 47.1778 mo
341.835 43.4601 li
347.683 40.0833 li
349.83 43.8012 li
343.981 47.1778 li
352.646 42.1752 mo
350.499 38.4575 li
356.347 35.0811 li
358.494 38.7988 li
352.646 42.1752 li
.137255 .733333 .858823 rgb
f
322.848 100.682 mo
321.912 99.0615 li
329.011 94.9627 li
329.242 95.3628 li
345.063 86.2286 li
344.832 85.8283 li
352.266 81.5366 li
353.202 83.1577 li
322.848 100.682 li
379.68 87.2009 mo
371.517 73.0625 li
376.586 70.1357 li
375.443 68.1554 li
417.698 43.7593 li
427.004 59.8783 li
379.68 87.2009 li
359.05 79.781 mo
358.114 78.1601 li
360.93 76.5343 li
361.866 78.1554 li
359.05 79.781 li
367.714 74.7788 mo
366.779 73.1576 li
369.595 71.5318 li
370.531 73.1528 li
367.714 74.7788 li
.0156863 .0745098 .196078 rgb
f
321.912 99.0615 mo
318.3 92.8052 li
317.781 93.1046 li
317.516 92.6445 li
317.336 92.7485 li
309.308 78.8447 li
317.788 73.949 li
325.815 87.8526 li
325.133 88.2466 li
329.011 94.9627 li
321.912 99.0615 li
344.832 85.8283 mo
342.376 81.5731 li
408.616 43.3291 li
399.168 26.9642 li
405.793 23.1392 li
417.698 43.7593 li
375.443 68.1554 li
373.533 64.8476 li
367.685 68.2241 li
369.595 71.5318 li
366.779 73.1576 li
364.869 69.85 li
359.021 73.2266 li
360.93 76.5343 li
358.114 78.1601 li
356.204 74.8526 li
350.356 78.229 li
352.266 81.5366 li
344.832 85.8283 li
.0156863 .0784314 .211765 rgb
f
353.202 83.1577 mo
352.266 81.5366 li
358.114 78.1601 li
359.05 79.781 li
353.202 83.1577 li
.0156863 .172549 .333333 rgb
f
352.266 81.5366 mo
350.356 78.229 li
356.204 74.8526 li
358.114 78.1601 li
352.266 81.5366 li
.0156863 .176471 .345098 rgb
f
361.866 78.1554 mo
360.93 76.5343 li
366.779 73.1576 li
367.714 74.7788 li
361.866 78.1554 li
.0156863 .172549 .333333 rgb
f
360.93 76.5343 mo
359.021 73.2266 li
364.869 69.85 li
366.779 73.1576 li
360.93 76.5343 li
.0156863 .176471 .345098 rgb
f
370.531 73.1528 mo
369.595 71.5318 li
375.443 68.1554 li
376.586 70.1357 li
371.517 73.0625 li
371.309 72.7031 li
370.531 73.1528 li
.0156863 .172549 .333333 rgb
f
369.595 71.5318 mo
367.685 68.2241 li
373.533 64.8476 li
375.443 68.1554 li
369.595 71.5318 li
.0156863 .176471 .345098 rgb
f
330.699 115.48 mo
329.689 113.73 li
329.51 113.834 li
327.531 110.408 li
327.711 110.304 li
323.603 103.187 li
323.423 103.291 li
322.762 102.146 li
323.46 101.743 li
322.848 100.682 li
353.202 83.1577 li
353.409 83.5171 li
359.258 80.1407 li
359.05 79.781 li
361.866 78.1554 li
362.073 78.5147 li
367.922 75.1381 li
367.714 74.7788 li
370.531 73.1528 li
370.738 73.5121 li
371.517 73.0625 li
379.68 87.2009 li
354.139 101.947 li
353.129 100.198 li
337.308 109.332 li
338.318 111.082 li
330.699 115.48 li
347.042 89.6548 mo
331.221 98.789 li
335.329 105.905 li
351.15 96.771 li
347.042 89.6548 li
.0156863 .0901961 .25098 rgb
f
353.409 83.5171 mo
353.202 83.1577 li
359.05 79.781 li
359.258 80.1407 li
353.409 83.5171 li
362.073 78.5147 mo
361.866 78.1554 li
367.714 74.7788 li
367.922 75.1381 li
362.073 78.5147 li
370.738 73.5121 mo
370.531 73.1528 li
371.309 72.7031 li
371.517 73.0625 li
370.738 73.5121 li
.0156863 .188235 .372549 rgb
f
325.815 87.8526 mo
317.788 73.949 li
399.168 26.9642 li
408.616 43.3291 li
342.376 81.5731 li
340.955 79.1118 li
325.815 87.8526 li
351.682 67.018 mo
345.833 70.3946 li
348.886 75.6827 li
354.734 72.3061 li
351.682 67.018 li
344.897 72.5184 mo
344.69 72.5184 344.479 72.5713 344.286 72.6826 cv
343.7 73.021 343.5 73.7695 343.838 74.355 cv
344.065 74.748 344.476 74.9676 344.899 74.9676 cv
345.107 74.9676 345.318 74.9147 345.511 74.8033 cv
346.097 74.4654 346.297 73.7167 345.959 73.1308 cv
345.732 72.7378 345.32 72.5184 344.897 72.5184 cv
360.346 62.0156 mo
354.497 65.3921 li
357.551 70.6801 li
363.398 67.3037 li
360.346 62.0156 li
354.441 67.0082 mo
354.234 67.0082 354.023 67.0611 353.83 67.1724 cv
353.244 67.5107 353.044 68.2593 353.382 68.8453 cv
353.608 69.238 354.02 69.4575 354.444 69.4575 cv
354.651 69.4575 354.862 69.4047 355.055 69.2935 cv
355.641 68.9551 355.841 68.2066 355.503 67.6205 cv
355.276 67.2276 354.864 67.0082 354.441 67.0082 cv
347.158 59.1836 mo
341.31 62.5606 li
344.363 67.8486 li
350.211 64.4722 li
347.158 59.1836 li
364.947 63.4825 mo
366.215 65.6777 li
372.063 62.3013 li
369.01 57.0132 li
363.161 60.3897 li
363.809 61.5108 li
363.66 61.5326 363.512 61.5824 363.374 61.6621 cv
362.788 62.0004 362.588 62.7491 362.926 63.335 cv
363.152 63.7279 363.564 63.9474 363.987 63.9474 cv
364.195 63.9474 364.406 63.8945 364.599 63.7832 cv
364.737 63.7033 364.854 63.6006 364.947 63.4825 cv
355.822 54.1816 mo
349.975 57.5582 li
353.027 62.8462 li
358.876 59.4696 li
355.822 54.1816 li
364.487 49.1792 mo
358.639 52.5556 li
361.691 57.8437 li
367.54 54.4673 li
364.487 49.1792 li
402.143 37.5844 mo
390.601 44.2481 li
392.287 47.1671 li
403.828 40.5034 li
402.143 37.5844 li
.0156863 .0941176 .266667 rgb
f
348.886 75.6827 mo
345.833 70.3946 li
351.682 67.018 li
354.734 72.3061 li
348.886 75.6827 li
349.669 69.7633 mo
349.462 69.7633 349.251 69.8163 349.059 69.9277 cv
348.473 70.2656 348.271 71.0146 348.609 71.6002 cv
348.837 71.9931 349.248 72.2128 349.671 72.2128 cv
349.879 72.2128 350.09 72.1598 350.282 72.0484 cv
350.868 71.71 351.069 70.9615 350.73 70.3754 cv
350.504 69.9828 350.092 69.7633 349.669 69.7633 cv
.0156863 .192157 .388235 rgb
f
357.551 70.6801 mo
354.497 65.3921 li
360.346 62.0156 li
363.398 67.3037 li
357.551 70.6801 li
359.213 64.2531 mo
359.006 64.2531 358.795 64.3061 358.603 64.4175 cv
358.017 64.7553 357.815 65.5045 358.153 66.0899 cv
358.381 66.4828 358.792 66.7025 359.215 66.7025 cv
359.423 66.7025 359.634 66.6495 359.826 66.5381 cv
360.412 66.2002 360.613 65.4512 360.274 64.8653 cv
360.048 64.4726 359.636 64.2531 359.213 64.2531 cv
344.363 67.8486 mo
341.31 62.5606 li
347.158 59.1836 li
350.211 64.4722 li
344.363 67.8486 li
366.215 65.6777 mo
364.947 63.4825 li
365.249 63.1004 365.305 62.558 365.047 62.1104 cv
364.82 61.7174 364.409 61.4979 363.985 61.4979 cv
363.927 61.4979 363.867 61.5022 363.809 61.5108 cv
363.161 60.3897 li
369.01 57.0132 li
372.063 62.3013 li
366.215 65.6777 li
368.757 58.7428 mo
368.55 58.7428 368.339 58.7958 368.146 58.9073 cv
367.561 59.2452 367.359 59.9942 367.697 60.5796 cv
367.925 60.9725 368.336 61.1922 368.759 61.1922 cv
368.967 61.1922 369.178 61.1393 369.37 61.0278 cv
369.956 60.6899 370.157 59.9409 369.818 59.355 cv
369.592 58.9624 369.18 58.7428 368.757 58.7428 cv
353.027 62.8462 mo
349.975 57.5582 li
355.822 54.1816 li
358.876 59.4696 li
353.027 62.8462 li
361.691 57.8437 mo
358.639 52.5556 li
364.487 49.1792 li
367.54 54.4673 li
361.691 57.8437 li
f
392.287 47.1671 mo
390.601 44.2481 li
402.143 37.5844 li
403.828 40.5034 li
392.287 47.1671 li
.533333 .207843 1 rgb
f
303.272 82.3295 mo
296.082 69.8754 li
302.118 66.3906 li
309.308 78.8447 li
303.272 82.3295 li
0 .0509804 .164706 rgb
f
311.3 96.2334 mo
303.272 82.3295 li
309.308 78.8447 li
317.336 92.7485 li
311.3 96.2334 li
311.313 87.4302 mo
311.105 87.4302 310.895 87.483 310.702 87.5942 cv
310.117 87.9327 309.916 88.6812 310.254 89.2671 cv
310.481 89.66 310.893 89.8795 311.316 89.8795 cv
311.524 89.8795 311.734 89.8266 311.927 89.7153 cv
312.513 89.3769 312.714 88.6284 312.375 88.0425 cv
312.148 87.6498 311.737 87.4302 311.313 87.4302 cv
.0156863 .0784314 .211765 rgb
f
323.474 117.319 mo
321.495 113.892 li
327.531 110.408 li
329.51 113.834 li
323.474 117.319 li
317.387 106.776 mo
316.726 105.631 li
322.762 102.146 li
323.423 103.291 li
317.387 106.776 li
.0156863 .0901961 .25098 rgb
f
330.52 115.584 mo
329.51 113.834 li
329.689 113.73 li
330.699 115.48 li
330.52 115.584 li
338.318 111.082 mo
337.308 109.332 li
353.129 100.198 li
354.139 101.947 li
338.318 111.082 li
327.531 110.408 mo
323.423 103.291 li
323.603 103.187 li
327.711 110.304 li
327.531 110.408 li
335.329 105.905 mo
331.221 98.789 li
347.042 89.6548 li
351.15 96.771 li
335.329 105.905 li
.0156863 .223529 .415686 rgb
f
317.601 93.2085 mo
317.336 92.7485 li
317.516 92.6445 li
317.781 93.1046 li
317.601 93.2085 li
.0156863 .211765 .384314 rgb
f
329.242 95.3628 mo
329.011 94.9627 li
344.832 85.8283 li
345.063 86.2286 li
329.242 95.3628 li
.0156863 .207843 .376471 rgb
f
329.011 94.9627 mo
325.133 88.2466 li
325.815 87.8526 li
327.236 90.314 li
342.376 81.5731 li
344.832 85.8283 li
329.011 94.9627 li
.0156863 .211765 .384314 rgb
f
327.236 90.314 mo
325.815 87.8526 li
340.955 79.1118 li
342.376 81.5731 li
327.236 90.314 li
.0156863 .223529 .427451 rgb
f
324.484 119.069 mo
323.474 117.319 li
329.51 113.834 li
330.52 115.584 li
324.484 119.069 li
.0156863 .223529 .415686 rgb
f
321.495 113.892 mo
317.387 106.776 li
323.423 103.291 li
327.531 110.408 li
321.495 113.892 li
f
311.565 96.6933 mo
311.3 96.2334 li
317.336 92.7485 li
317.601 93.2085 li
311.565 96.6933 li
.0156863 .211765 .384314 rgb
f
322.149 101.086 mo
321.444 99.8649 li
321.624 99.7612 li
321.393 99.3611 li
321.912 99.0615 li
322.848 100.682 li
322.149 101.086 li
.027451 .196078 .32549 rgb
f
321.393 99.3611 mo
317.781 93.1046 li
318.3 92.8052 li
321.912 99.0615 li
321.393 99.3611 li
.027451 .2 .337255 rgb
f
322.762 102.146 mo
322.149 101.086 li
322.848 100.682 li
323.46 101.743 li
322.762 102.146 li
.027451 .211765 .368627 rgb
f
316.113 104.571 mo
315.408 103.35 li
321.444 99.8649 li
322.149 101.086 li
316.113 104.571 li
.027451 .196078 .32549 rgb
f
316.726 105.631 mo
316.113 104.571 li
322.149 101.086 li
322.762 102.146 li
316.726 105.631 li
.027451 .211765 .368627 rgb
f
321.444 99.8649 mo
321.213 99.4648 li
321.393 99.3611 li
321.624 99.7612 li
321.444 99.8649 li
.027451 .313725 .470588 rgb
f
321.213 99.4648 mo
317.601 93.2085 li
317.781 93.1046 li
321.393 99.3611 li
321.213 99.4648 li
.027451 .317647 .482353 rgb
f
315.408 103.35 mo
315.177 102.95 li
321.213 99.4648 li
321.444 99.8649 li
315.408 103.35 li
.027451 .313725 .470588 rgb
f
315.177 102.95 mo
311.565 96.6933 li
317.601 93.2085 li
321.213 99.4648 li
315.177 102.95 li
.027451 .317647 .482353 rgb
f
308.44 65.5399 mo
307.576 65.5399 306.736 65.0915 306.272 64.2896 cv
306.229 64.2142 306.19 64.1375 306.155 64.0598 cv
310.462 61.573 li
310.512 61.642 310.559 61.7142 310.602 61.7896 cv
311.293 62.9853 310.883 64.5142 309.687 65.2046 cv
309.294 65.4319 308.864 65.54 308.44 65.5399 cv
.0666667 .0980392 .298039 rgb
f
344.899 74.9676 mo
344.476 74.9676 344.065 74.748 343.838 74.355 cv
343.5 73.7695 343.7 73.021 344.286 72.6826 cv
344.479 72.5713 344.69 72.5184 344.897 72.5184 cv
345.32 72.5184 345.732 72.7378 345.959 73.1308 cv
346.297 73.7167 346.097 74.4654 345.511 74.8033 cv
345.318 74.9147 345.107 74.9676 344.899 74.9676 cv
.0509804 .0941176 .266667 rgb
f
349.671 72.2128 mo
349.248 72.2128 348.837 71.9931 348.609 71.6002 cv
348.271 71.0146 348.473 70.2656 349.059 69.9277 cv
349.251 69.8163 349.462 69.7633 349.669 69.7633 cv
350.092 69.7633 350.504 69.9828 350.73 70.3754 cv
351.069 70.9615 350.868 71.71 350.282 72.0484 cv
350.09 72.1598 349.879 72.2128 349.671 72.2128 cv
.0509804 .192157 .392157 rgb
f
354.444 69.4575 mo
354.02 69.4575 353.608 69.238 353.382 68.8453 cv
353.044 68.2593 353.244 67.5107 353.83 67.1724 cv
354.023 67.0611 354.234 67.0082 354.441 67.0082 cv
354.864 67.0082 355.276 67.2276 355.503 67.6205 cv
355.841 68.2066 355.641 68.9551 355.055 69.2935 cv
354.862 69.4047 354.651 69.4575 354.444 69.4575 cv
.0509804 .0941176 .266667 rgb
f
359.215 66.7025 mo
358.792 66.7025 358.381 66.4828 358.153 66.0899 cv
357.815 65.5045 358.017 64.7553 358.603 64.4175 cv
358.795 64.3061 359.006 64.2531 359.213 64.2531 cv
359.636 64.2531 360.048 64.4726 360.274 64.8653 cv
360.613 65.4512 360.412 66.2002 359.826 66.5381 cv
359.634 66.6495 359.423 66.7025 359.215 66.7025 cv
.0509804 .192157 .392157 rgb
f
363.987 63.9474 mo
363.564 63.9474 363.152 63.7279 362.926 63.335 cv
362.588 62.7491 362.788 62.0004 363.374 61.6621 cv
363.512 61.5824 363.66 61.5326 363.809 61.5108 cv
364.947 63.4825 li
364.854 63.6006 364.737 63.7033 364.599 63.7832 cv
364.406 63.8945 364.195 63.9474 363.987 63.9474 cv
.0509804 .0941176 .266667 rgb
f
364.947 63.4825 mo
363.809 61.5108 li
363.867 61.5022 363.927 61.4979 363.985 61.4979 cv
364.409 61.4979 364.82 61.7174 365.047 62.1104 cv
365.305 62.558 365.249 63.1004 364.947 63.4825 cv
368.759 61.1922 mo
368.336 61.1922 367.925 60.9725 367.697 60.5796 cv
367.359 59.9942 367.561 59.2452 368.146 58.9073 cv
368.339 58.7958 368.55 58.7428 368.757 58.7428 cv
369.18 58.7428 369.592 58.9624 369.818 59.355 cv
370.157 59.9409 369.956 60.6899 369.37 61.0278 cv
369.178 61.1393 368.967 61.1922 368.759 61.1922 cv
.0509804 .192157 .392157 rgb
f
311.316 89.8795 mo
310.893 89.8795 310.481 89.66 310.254 89.2671 cv
309.916 88.6812 310.117 87.9327 310.702 87.5942 cv
310.895 87.483 311.105 87.4302 311.313 87.4302 cv
311.737 87.4302 312.148 87.6498 312.375 88.0425 cv
312.714 88.6284 312.513 89.3769 311.927 89.7153 cv
311.734 89.8266 311.524 89.8795 311.316 89.8795 cv
.294118 .0784314 .235294 rgb
f
432.162 4.96295 mo
429.735 .759713 li
431.051 0 li
440.759 0 li
432.162 4.96295 li
.00784314 .0509804 .184314 rgb
f
480 138.9 mo
478.958 137.096 li
480 136.495 li
480 138.9 li
0 .0196078 .0666667 rgb
f
478.958 137.096 mo
478.149 135.695 li
480 134.626 li
480 136.495 li
478.958 137.096 li
0 .0470588 .14902 rgb
f
0 174.858 mo
0 138.901 li
14.0845 163.296 li
9.78133 165.78 li
11.2668 168.353 li
0 174.858 li
1.27655 165.234 mo
1.06877 165.234 .858084 165.287 .665116 165.399 cv
.0795511 165.736 -.121056 166.485 .216863 167.071 cv
.443743 167.464 .855339 167.684 1.27852 167.684 cv
1.48628 167.684 1.69687 167.631 1.88968 167.52 cv
2.4756 167.182 2.6762 166.433 2.33794 165.847 cv
2.11096 165.454 1.69965 165.234 1.27655 165.234 cv
6.04844 162.479 mo
5.84065 162.479 5.62994 162.532 5.43697 162.644 cv
4.85158 162.981 4.6508 163.731 4.98872 164.316 cv
5.21584 164.709 5.62778 164.929 6.05116 164.929 cv
6.25867 164.929 6.46899 164.876 6.66154 164.765 cv
7.24711 164.426 7.44823 163.678 7.10979 163.092 cv
6.88294 162.699 6.47158 162.479 6.04844 162.479 cv
0 .0235294 .0823529 rgb
f
1.27852 167.684 mo
.855339 167.684 .443743 167.464 .216863 167.071 cv
-.121056 166.485 .0795511 165.736 .665116 165.399 cv
.858084 165.287 1.06877 165.234 1.27655 165.234 cv
1.69965 165.234 2.11096 165.454 2.33794 165.847 cv
2.6762 166.433 2.4756 167.182 1.88968 167.52 cv
1.69687 167.631 1.48628 167.684 1.27852 167.684 cv
6.05116 164.929 mo
5.62778 164.929 5.21584 164.709 4.98872 164.316 cv
4.6508 163.731 4.85158 162.981 5.43697 162.644 cv
5.62994 162.532 5.84065 162.479 6.04844 162.479 cv
6.47158 162.479 6.88294 162.699 7.10979 163.092 cv
7.44823 163.678 7.24711 164.426 6.66154 164.765 cv
6.46899 164.876 6.25867 164.929 6.05116 164.929 cv
.380392 .0235294 .203922 rgb
f
11.2668 168.353 mo
9.78133 165.78 li
14.0845 163.296 li
15.57 165.869 li
11.2668 168.353 li
1 .364706 .203922 rgb
f
27.1651 270 mo
13.49 270 li
23.7463 264.078 li
27.1651 270 li
37.5656 203.966 mo
19.2446 172.233 li
32.4458 164.612 li
37.0772 172.633 li
29.206 177.178 li
29.5415 177.76 li
37.413 173.215 li
45.7754 187.699 li
45.7026 187.741 li
45.9275 188.131 li
45.6684 188.28 li
50.0337 195.841 li
50.3654 195.649 li
50.7668 196.345 li
37.5656 203.966 li
41.9013 189.936 mo
34.0064 194.494 li
37.4819 200.515 li
45.377 195.956 li
41.9013 189.936 li
0 .0196078 .0666667 rgb
f
50.7668 196.345 mo
50.3654 195.649 li
84.4516 175.969 li
84.853 176.665 li
50.7668 196.345 li
45.7754 187.699 mo
37.413 173.215 li
71.4993 153.535 li
80.0865 168.409 li
65.5185 176.82 li
65.294 176.431 li
57.3989 180.988 li
57.6237 181.378 li
53.8223 183.572 li
53.5977 183.184 li
45.7754 187.699 li
0 .0392157 .129412 rgb
f
37.0772 172.633 mo
32.4458 164.612 li
66.532 144.932 li
71.1635 152.954 li
37.0772 172.633 li
f
29.5415 177.76 mo
29.206 177.178 li
37.0772 172.633 li
37.413 173.215 li
29.5415 177.76 li
.164706 .0823529 .0941176 rgb
f
37.413 173.215 mo
37.0772 172.633 li
71.1635 152.954 li
71.4993 153.535 li
37.413 173.215 li
.164706 .101961 .156863 rgb
f
37.4819 200.515 mo
34.0064 194.494 li
41.9013 189.936 li
45.377 195.956 li
37.4819 200.515 li
45.9275 188.131 mo
45.7026 187.741 li
45.7754 187.699 li
46.0002 188.089 li
45.9275 188.131 li
0 .12549 .215686 rgb
f
46.0002 188.089 mo
45.7754 187.699 li
53.5977 183.184 li
53.8223 183.572 li
46.0002 188.089 li
57.6237 181.378 mo
57.3989 180.988 li
65.294 176.431 li
65.5185 176.82 li
57.6237 181.378 li
0 .141176 .270588 rgb
f
50.0337 195.841 mo
45.6684 188.28 li
45.9275 188.131 li
49.1782 193.762 li
49.2512 193.72 li
50.3654 195.649 li
50.0337 195.841 li
.392157 .913725 1 rgb
f
50.3654 195.649 mo
49.2512 193.72 li
57.0733 189.203 li
53.8223 183.572 li
57.6237 181.378 li
60.8746 187.009 li
68.7695 182.451 li
65.5185 176.82 li
80.0865 168.409 li
84.4516 175.969 li
50.3654 195.649 li
f
49.1782 193.762 mo
45.9275 188.131 li
46.0002 188.089 li
49.2512 193.72 li
49.1782 193.762 li
.392157 .917647 1 rgb
f
49.2512 193.72 mo
46.0002 188.089 li
53.8223 183.572 li
57.0733 189.203 li
49.2512 193.72 li
60.8746 187.009 mo
57.6237 181.378 li
65.5185 176.82 li
68.7695 182.451 li
60.8746 187.009 li
.392157 .921569 1 rgb
f
29.5803 270 mo
27.1651 270 li
23.7463 264.078 li
60.1401 243.066 li
37.5656 203.966 li
50.7668 196.345 li
50.9248 196.618 li
50.852 196.66 li
54.3277 202.681 li
54.4006 202.639 li
56.0741 205.537 li
56.0014 205.579 li
59.4771 211.6 li
59.5499 211.557 li
61.2233 214.456 li
61.1504 214.498 li
64.6265 220.519 li
64.6993 220.477 li
66.3728 223.375 li
66.3003 223.417 li
69.7758 229.438 li
69.8487 229.395 li
77.3638 242.412 li
29.5803 270 li
62.499 225.612 mo
54.6041 230.17 li
58.0796 236.19 li
65.9747 231.633 li
62.499 225.612 li
57.3491 216.692 mo
49.4542 221.251 li
52.9302 227.271 li
60.8251 222.713 li
57.3491 216.692 li
52.2002 207.774 mo
44.3051 212.332 li
47.7808 218.353 li
55.6757 213.794 li
52.2002 207.774 li
47.0503 198.854 mo
39.1557 203.413 li
42.6313 209.434 li
50.5264 204.875 li
47.0503 198.854 li
0 .0196078 .0666667 rgb
f
77.3638 242.412 mo
69.8487 229.395 li
77.6709 224.88 li
74.1952 218.859 li
66.3728 223.375 li
64.6993 220.477 li
66.0088 219.72 li
66.1172 219.908 li
98.8942 200.985 li
111.45 222.732 li
77.3638 242.412 li
85.8912 212.106 mo
77.9966 216.665 li
81.4721 222.684 li
89.3672 218.127 li
85.8912 212.106 li
61.2233 214.456 mo
59.5499 211.557 li
67.372 207.042 li
63.896 201.021 li
56.0741 205.537 li
54.4006 202.639 li
62.2226 198.122 li
58.7466 192.102 li
50.9248 196.618 li
50.7668 196.345 li
84.853 176.665 li
96.3948 196.656 li
81.8265 205.066 li
80.7416 203.188 li
72.8467 207.745 li
73.9317 209.624 li
70.1302 211.819 li
69.0453 209.94 li
61.2233 214.456 li
75.5922 194.268 mo
67.6973 198.826 li
71.1733 204.847 li
79.0684 200.289 li
75.5922 194.268 li
70.4429 185.35 mo
62.5479 189.907 li
66.024 195.928 li
73.9189 191.369 li
70.4429 185.35 li
0 .0392157 .129412 rgb
f
58.0796 236.19 mo
54.6041 230.17 li
62.499 225.612 li
65.9747 231.633 li
58.0796 236.19 li
69.7758 229.438 mo
66.3003 223.417 li
66.3728 223.375 li
69.8487 229.395 li
69.7758 229.438 li
0 .12549 .215686 rgb
f
69.8487 229.395 mo
66.3728 223.375 li
74.1952 218.859 li
77.6709 224.88 li
69.8487 229.395 li
0 .141176 .270588 rgb
f
52.9302 227.271 mo
49.4542 221.251 li
57.3491 216.692 li
60.8251 222.713 li
52.9302 227.271 li
0 .12549 .215686 rgb
f
81.4721 222.684 mo
77.9966 216.665 li
85.8912 212.106 li
89.3672 218.127 li
81.4721 222.684 li
0 .141176 .270588 rgb
f
64.6265 220.519 mo
61.1504 214.498 li
61.2233 214.456 li
64.6993 220.477 li
64.6265 220.519 li
0 .12549 .215686 rgb
f
64.6993 220.477 mo
61.2233 214.456 li
69.0453 209.94 li
70.1302 211.819 li
63.6177 215.579 li
66.0088 219.72 li
64.6993 220.477 li
0 .141176 .270588 rgb
f
47.7808 218.353 mo
44.3051 212.332 li
52.2002 207.774 li
55.6757 213.794 li
47.7808 218.353 li
59.4771 211.6 mo
56.0014 205.579 li
56.0741 205.537 li
59.5499 211.557 li
59.4771 211.6 li
0 .12549 .215686 rgb
f
59.5499 211.557 mo
56.0741 205.537 li
63.896 201.021 li
67.372 207.042 li
59.5499 211.557 li
73.9317 209.624 mo
72.8467 207.745 li
80.7416 203.188 li
81.8265 205.066 li
73.9317 209.624 li
0 .141176 .270588 rgb
f
42.6313 209.434 mo
39.1557 203.413 li
47.0503 198.854 li
50.5264 204.875 li
42.6313 209.434 li
0 .12549 .215686 rgb
f
71.1733 204.847 mo
67.6973 198.826 li
75.5922 194.268 li
79.0684 200.289 li
71.1733 204.847 li
0 .141176 .270588 rgb
f
54.3277 202.681 mo
50.852 196.66 li
50.9248 196.618 li
54.4006 202.639 li
54.3277 202.681 li
0 .12549 .215686 rgb
f
54.4006 202.639 mo
50.9248 196.618 li
58.7466 192.102 li
62.2226 198.122 li
54.4006 202.639 li
66.024 195.928 mo
62.5479 189.907 li
70.4429 185.35 li
73.9189 191.369 li
66.024 195.928 li
0 .141176 .270588 rgb
f
75.9654 270 mo
65.1839 270 li
73.27 265.331 li
75.9654 270 li
0 .0392157 .12549 rgb
f
46.5713 270 mo
36.2527 270 li
79.032 245.301 li
81.6115 249.769 li
46.5713 270 li
f
33.704 270 mo
29.5803 270 li
77.3638 242.412 li
78.3471 244.115 li
33.6567 269.918 li
33.704 270 li
f
90.4025 254.215 mo
86.2797 247.074 li
81.6115 249.769 li
79.032 245.301 li
83.8047 242.546 li
83.1202 241.359 li
78.3471 244.115 li
77.3638 242.412 li
111.45 222.732 li
116.294 231.122 li
115.682 231.475 li
115.478 231.122 li
111.173 233.607 li
111.377 233.961 li
109.304 235.158 li
109.1 234.805 li
104.795 237.29 li
104.999 237.643 li
104.858 237.725 li
108.385 243.833 li
90.4025 254.215 li
102.722 238.486 mo
98.4175 240.972 li
101.571 246.435 li
105.876 243.949 li
102.722 238.486 li
0 .0588235 .184314 rgb
f
36.2527 270 mo
33.704 270 li
33.6567 269.918 li
78.3471 244.115 li
79.032 245.301 li
36.2527 270 li
.560784 .227451 1 rgb
f
79.032 245.301 mo
78.3471 244.115 li
83.1202 241.359 li
83.8047 242.546 li
79.032 245.301 li
.560784 .243137 1 rgb
f
101.571 246.435 mo
98.4175 240.972 li
102.722 238.486 li
105.876 243.949 li
101.571 246.435 li
104.999 237.643 mo
104.795 237.29 li
109.1 234.805 li
109.304 235.158 li
104.999 237.643 li
111.377 233.961 mo
111.173 233.607 li
115.478 231.122 li
115.682 231.475 li
111.377 233.961 li
.00392157 .0666667 .192157 rgb
f
108.385 243.833 mo
104.858 237.725 li
104.999 237.643 li
107.949 242.753 li
112.254 240.268 li
109.304 235.158 li
111.377 233.961 li
114.327 239.07 li
118.632 236.585 li
115.682 231.475 li
116.294 231.122 li
119.821 237.231 li
108.385 243.833 li
0 .215686 .345098 rgb
f
107.949 242.753 mo
104.999 237.643 li
109.304 235.158 li
112.254 240.268 li
107.949 242.753 li
114.327 239.07 mo
111.377 233.961 li
115.682 231.475 li
118.632 236.585 li
114.327 239.07 li
.00392157 .223529 .34902 rgb
f
66.1172 219.908 mo
66.0088 219.72 li
72.5216 215.96 li
70.1302 211.819 li
73.9317 209.624 li
76.3227 213.766 li
84.2178 209.208 li
81.8265 205.066 li
96.3948 196.656 li
98.8942 200.985 li
66.1172 219.908 li
.85098 .407843 .329412 rgb
f
66.0088 219.72 mo
63.6177 215.579 li
70.1302 211.819 li
72.5216 215.96 li
66.0088 219.72 li
76.3227 213.766 mo
73.9317 209.624 li
81.8265 205.066 li
84.2178 209.208 li
76.3227 213.766 li
.85098 .470588 .435294 rgb
f
19.2446 172.233 mo
17.9846 170.051 li
31.1858 162.429 li
32.4458 164.612 li
19.2446 172.233 li
1 .360784 .192157 rgb
f
17.9846 170.051 mo
15.57 165.869 li
28.7712 158.247 li
31.1858 162.429 li
17.9846 170.051 li
1 .372549 .247059 rgb
f
32.4458 164.612 mo
31.1858 162.429 li
65.2721 142.75 li
66.532 144.932 li
32.4458 164.612 li
f
31.1858 162.429 mo
28.7712 158.247 li
62.8575 138.567 li
65.2721 142.75 li
31.1858 162.429 li
1 .388235 .298039 rgb
f
13.49 270 mo
0 270 li
0 266.212 li
18.7338 255.397 li
23.7463 264.078 li
13.49 270 li
0 258.153 mo
0 180.434 li
13.6814 172.535 li
14.9414 174.718 li
19.2446 172.233 li
37.5656 203.966 li
1.17182 224.979 li
15.244 249.352 li
0 258.153 li
0 .0235294 .0823529 rgb
f
0 180.434 mo
0 174.858 li
11.2668 168.353 li
13.6814 172.535 li
0 180.434 li
0 .0431373 .145098 rgb
f
23.7463 264.078 mo
18.7338 255.397 li
44.6612 240.428 li
41.1708 234.383 li
15.244 249.352 li
1.17182 224.979 li
37.5656 203.966 li
60.1401 243.066 li
23.7463 264.078 li
0 .0235294 .0823529 rgb
f
14.9414 174.718 mo
13.6814 172.535 li
17.9846 170.051 li
19.2446 172.233 li
14.9414 174.718 li
1 .364706 .203922 rgb
f
13.6814 172.535 mo
11.2668 168.353 li
15.57 165.869 li
17.9846 170.051 li
13.6814 172.535 li
1 .376471 .258824 rgb
f
0 266.212 mo
0 258.153 li
15.244 249.352 li
18.7338 255.397 li
0 266.212 li
.360784 .133333 .690196 rgb
f
18.7338 255.397 mo
15.244 249.352 li
41.1708 234.383 li
44.6612 240.428 li
18.7338 255.397 li
f
125.243 225.955 mo
124.868 225.306 li
124.891 225.292 li
125.266 225.942 li
125.243 225.955 li
1 .505882 .4 rgb
f
128.77 232.064 mo
125.243 225.955 li
125.266 225.942 li
128.793 232.05 li
128.77 232.064 li
1 .588235 .517647 rgb
f
132.08 229.789 mo
128.71 223.953 li
125.266 225.942 li
124.891 225.292 li
128.711 223.087 li
132.455 229.572 li
132.08 229.789 li
1 .521569 .435294 rgb
f
128.793 232.05 mo
125.266 225.942 li
128.71 223.953 li
132.08 229.789 li
131.458 230.148 li
131.615 230.421 li
128.793 232.05 li
1 .6 .545098 rgb
f
132.613 229.845 mo
132.455 229.572 li
132.977 229.271 li
133.134 229.544 li
132.613 229.845 li
.0156863 .0862745 .235294 rgb
f
133.134 229.544 mo
132.977 229.271 li
142.159 223.97 li
142.316 224.243 li
133.134 229.544 li
.0156863 .105882 .286274 rgb
f
142.316 224.243 mo
142.159 223.97 li
151.78 218.415 li
151.937 218.688 li
142.316 224.243 li
f
132.237 230.062 mo
132.08 229.789 li
132.455 229.572 li
132.613 229.845 li
132.237 230.062 li
1 .533333 .47451 rgb
f
131.615 230.421 mo
131.458 230.148 li
132.08 229.789 li
132.237 230.062 li
131.615 230.421 li
1 .607843 .576471 rgb
f
65.1839 270 mo
46.5713 270 li
81.6115 249.769 li
85.7344 256.911 li
72.7398 264.413 li
73.27 265.331 li
65.1839 270 li
.286274 .184314 .215686 rgb
f
85.7344 256.911 mo
81.6115 249.769 li
86.2797 247.074 li
90.4025 254.215 li
85.7344 256.911 li
.286274 .2 .266667 rgb
f
120.329 238.11 mo
120.255 237.983 li
129.228 232.803 li
129.301 232.93 li
120.329 238.11 li
0 .0431373 .137255 rgb
f
120.255 237.983 mo
119.821 237.231 li
128.77 232.064 li
129.094 232.625 li
129.117 232.612 li
129.228 232.803 li
120.255 237.983 li
0 .203922 .309804 rgb
f
129.301 232.93 mo
129.228 232.803 li
132.049 231.174 li
132.123 231.301 li
129.301 232.93 li
.0156863 .0705882 .188235 rgb
f
129.228 232.803 mo
129.117 232.612 li
131.939 230.983 li
132.049 231.174 li
129.228 232.803 li
.0156863 .227451 .34902 rgb
f
264.031 270 mo
256.148 270 li
255.551 268.965 li
253.758 270 li
246.621 270 li
253.767 265.875 li
250.061 259.458 li
237.783 266.547 li
239.776 270 li
230.358 270 li
230.123 269.593 li
268.059 247.69 li
263.405 239.631 li
263.003 239.863 li
262.764 239.448 li
250.484 246.537 li
250.724 246.952 li
244.812 250.366 li
244.572 249.95 li
232.293 257.04 li
232.533 257.455 li
225.47 261.533 li
225.12 260.928 li
279.149 229.734 li
279.258 229.925 li
268.676 236.035 li
272.381 242.452 li
282.964 236.342 li
284.747 239.432 li
274.164 245.542 li
277.869 251.959 li
288.452 245.849 li
290.237 248.939 li
279.653 255.05 li
283.358 261.467 li
293.942 255.357 li
295.726 258.447 li
285.143 264.557 li
285.169 264.603 li
279.27 268.009 li
277.279 264.561 li
277.266 264.568 li
273.741 258.463 li
261.463 265.552 li
264.031 270 li
268.252 248.955 mo
255.974 256.045 li
259.679 262.462 li
271.957 255.372 li
268.252 248.955 li
0 .0235294 .0823529 rgb
f
225.12 260.928 mo
216.537 246.061 li
208.056 250.957 li
206.617 248.465 li
210.811 246.044 li
209.669 244.066 li
227.318 233.876 li
214.634 211.907 li
255.3 188.428 li
279.149 229.734 li
225.12 260.928 li
236.201 206.593 mo
235.993 206.593 235.783 206.646 235.59 206.757 cv
235.004 207.096 234.803 207.844 235.142 208.43 cv
235.368 208.823 235.78 209.042 236.203 209.042 cv
236.411 209.042 236.621 208.989 236.814 208.878 cv
237.4 208.54 237.601 207.791 237.262 207.205 cv
237.036 206.812 236.624 206.593 236.201 206.593 cv
240.973 203.838 mo
240.765 203.838 240.555 203.891 240.362 204.002 cv
239.776 204.34 239.575 205.089 239.914 205.675 cv
240.14 206.068 240.551 206.287 240.975 206.287 cv
241.182 206.287 241.393 206.234 241.586 206.123 cv
242.172 205.784 242.372 205.036 242.034 204.45 cv
241.808 204.057 241.396 203.838 240.973 203.838 cv
245.745 201.082 mo
245.537 201.082 245.327 201.135 245.134 201.247 cv
244.548 201.585 244.348 202.334 244.686 202.919 cv
244.912 203.312 245.324 203.532 245.747 203.532 cv
245.955 203.532 246.165 203.479 246.358 203.367 cv
246.943 203.029 247.145 202.281 246.807 201.695 cv
246.579 201.302 246.168 201.082 245.745 201.082 cv
250.517 198.328 mo
250.309 198.328 250.098 198.381 249.905 198.492 cv
249.32 198.83 249.119 199.579 249.457 200.164 cv
249.684 200.557 250.096 200.777 250.519 200.777 cv
250.726 200.777 250.937 200.724 251.13 200.612 cv
251.716 200.274 251.916 199.525 251.578 198.94 cv
251.352 198.547 250.94 198.328 250.517 198.328 cv
255.289 195.572 mo
255.081 195.572 254.871 195.625 254.678 195.736 cv
254.092 196.075 253.891 196.823 254.229 197.409 cv
254.456 197.802 254.868 198.022 255.291 198.022 cv
255.499 198.022 255.709 197.969 255.902 197.857 cv
256.487 197.52 256.688 196.771 256.35 196.185 cv
256.123 195.792 255.712 195.572 255.289 195.572 cv
.0156863 .0509804 .129412 rgb
f
209.669 244.066 mo
196.985 222.096 li
214.634 211.907 li
227.318 233.876 li
209.669 244.066 li
216.867 219.777 mo
208.418 224.656 li
211.996 230.854 li
220.445 225.976 li
216.867 219.777 li
f
211.996 230.854 mo
208.418 224.656 li
216.867 219.777 li
220.445 225.976 li
211.996 230.854 li
.52549 .160784 1 rgb
f
206.617 248.465 mo
205.475 246.487 li
209.669 244.066 li
210.811 246.044 li
206.617 248.465 li
.0156863 .0509804 .129412 rgb
f
205.475 246.487 mo
192.791 224.518 li
196.985 222.096 li
209.669 244.066 li
205.475 246.487 li
f
214.634 211.907 mo
203.318 192.307 li
243.984 168.828 li
244.145 169.107 li
242.383 170.125 li
242.247 169.89 li
232.069 175.765 li
234.06 179.212 li
244.236 173.336 li
244.186 173.248 li
245.948 172.23 li
246.298 172.837 li
234.781 179.486 li
235.44 180.628 li
235.018 180.872 li
237.008 184.318 li
247.184 178.442 li
246.339 176.978 li
248.102 175.961 li
255.3 188.428 li
214.634 211.907 li
219.482 202.609 mo
219.275 202.609 219.064 202.662 218.871 202.773 cv
218.285 203.111 218.085 203.86 218.423 204.446 cv
218.65 204.839 219.061 205.059 219.484 205.059 cv
219.692 205.059 219.903 205.006 220.096 204.895 cv
220.681 204.556 220.882 203.808 220.544 203.222 cv
220.317 202.829 219.906 202.609 219.482 202.609 cv
224.254 199.854 mo
224.047 199.854 223.836 199.907 223.643 200.018 cv
223.057 200.356 222.856 201.105 223.195 201.69 cv
223.422 202.083 223.833 202.303 224.256 202.303 cv
224.464 202.303 224.675 202.25 224.868 202.139 cv
225.453 201.801 225.654 201.053 225.315 200.467 cv
225.089 200.074 224.677 199.854 224.254 199.854 cv
229.026 197.099 mo
228.819 197.099 228.608 197.152 228.415 197.264 cv
227.829 197.602 227.628 198.351 227.967 198.936 cv
228.194 199.329 228.605 199.548 229.028 199.548 cv
229.236 199.548 229.447 199.495 229.64 199.384 cv
230.225 199.046 230.426 198.297 230.087 197.711 cv
229.861 197.319 229.449 197.099 229.026 197.099 cv
233.798 194.344 mo
233.59 194.344 233.38 194.397 233.187 194.508 cv
232.601 194.847 232.4 195.595 232.739 196.181 cv
232.966 196.574 233.377 196.793 233.8 196.793 cv
234.008 196.793 234.219 196.74 234.412 196.629 cv
234.997 196.291 235.198 195.542 234.86 194.956 cv
234.633 194.563 234.221 194.344 233.798 194.344 cv
242.158 190.367 mo
240.914 191.085 li
242.904 194.532 li
253.082 188.656 li
251.092 185.209 li
244.203 189.186 li
243.971 188.958 243.66 188.834 243.342 188.834 cv
243.134 188.834 242.923 188.887 242.73 188.998 cv
242.243 189.28 242.022 189.847 242.158 190.367 cv
238.57 191.589 mo
238.362 191.589 238.152 191.642 237.959 191.753 cv
237.374 192.091 237.172 192.84 237.511 193.426 cv
237.738 193.819 238.149 194.038 238.572 194.038 cv
238.78 194.038 238.991 193.985 239.184 193.874 cv
239.769 193.536 239.97 192.787 239.632 192.201 cv
239.405 191.808 238.993 191.589 238.57 191.589 cv
230.126 184.66 mo
218.223 191.532 li
218.95 192.791 li
230.853 185.919 li
230.126 184.66 li
229.05 182.796 mo
217.147 189.668 li
217.873 190.927 li
229.776 184.055 li
229.05 182.796 li
248.144 180.103 mo
237.966 185.979 li
239.956 189.425 li
250.133 183.549 li
248.144 180.103 li
227.973 180.931 mo
216.07 187.803 li
216.796 189.062 li
228.7 182.19 li
227.973 180.931 li
226.896 179.065 mo
214.993 185.938 li
215.72 187.196 li
227.623 180.324 li
226.896 179.065 li
.0156863 .0705882 .188235 rgb
f
196.985 222.096 mo
185.669 202.497 li
197.874 195.45 li
197.176 196.233 197.022 197.405 197.576 198.364 cv
198.039 199.166 198.879 199.615 199.743 199.615 cv
200.167 199.615 200.597 199.507 200.991 199.279 cv
202.187 198.589 202.597 197.06 201.906 195.864 cv
201.443 195.062 200.603 194.614 199.739 194.614 cv
199.57 194.614 199.401 194.631 199.233 194.666 cv
203.318 192.307 li
214.634 211.907 li
196.985 222.096 li
f
203.318 192.307 mo
203.023 191.795 li
214.537 185.148 li
214.643 185.332 li
226.546 178.459 li
226.44 178.276 li
232.171 174.967 li
232.277 175.15 li
243.795 168.501 li
243.984 168.828 li
203.318 192.307 li
.0156863 .0901961 .243137 rgb
f
185.669 202.497 mo
184.247 200.034 li
196.246 193.107 li
196.587 193.072 196.925 192.966 197.241 192.784 cv
197.556 192.602 197.817 192.361 198.017 192.084 cv
199.822 191.042 li
200.948 192.993 li
203.023 191.795 li
203.318 192.307 li
199.233 194.666 li
198.979 194.718 198.728 194.812 198.491 194.949 cv
198.253 195.086 198.047 195.256 197.874 195.45 cv
185.669 202.497 li
f
245.38 175.315 mo
245.263 175.113 li
247.025 174.095 li
247.142 174.298 li
245.38 175.315 li
243.459 171.989 mo
243.109 171.383 li
244.872 170.366 li
245.222 170.972 li
243.459 171.989 li
.0156863 .0705882 .188235 rgb
f
192.791 224.518 mo
181.475 204.918 li
185.669 202.497 li
196.985 222.096 li
192.791 224.518 li
f
162.79 213.595 mo
162.282 212.716 li
184.247 200.034 li
185.669 202.497 li
181.475 204.918 li
180.561 203.335 li
162.79 213.595 li
.0156863 .0901961 .243137 rgb
f
218.95 192.791 mo
218.223 191.532 li
230.126 184.66 li
230.853 185.919 li
218.95 192.791 li
217.873 190.927 mo
217.147 189.668 li
229.05 182.796 li
229.776 184.055 li
217.873 190.927 li
216.796 189.062 mo
216.07 187.803 li
227.973 180.931 li
228.7 182.19 li
216.796 189.062 li
215.72 187.196 mo
214.993 185.938 li
226.896 179.065 li
227.623 180.324 li
215.72 187.196 li
.0156863 .203922 .364706 rgb
f
214.643 185.332 mo
214.537 185.148 li
226.44 178.276 li
226.546 178.459 li
214.643 185.332 li
.0156863 .219608 .403922 rgb
f
235.44 180.628 mo
234.781 179.486 li
246.298 172.837 li
247.025 174.095 li
245.263 175.113 li
245.195 174.996 li
235.44 180.628 li
246.339 176.978 mo
246.292 176.897 li
248.055 175.879 li
248.102 175.961 li
246.339 176.978 li
.0156863 .203922 .364706 rgb
f
232.277 175.15 mo
232.171 174.967 li
243.689 168.317 li
243.795 168.501 li
232.277 175.15 li
.0156863 .219608 .403922 rgb
f
244.186 173.248 mo
243.459 171.989 li
245.222 170.972 li
245.948 172.23 li
244.186 173.248 li
243.109 171.383 mo
242.383 170.125 li
244.145 169.107 li
244.872 170.366 li
243.109 171.383 li
.0156863 .203922 .364706 rgb
f
245.613 175.719 mo
245.38 175.315 li
247.142 174.298 li
247.375 174.702 li
245.613 175.719 li
.0156863 .862745 1 rgb
f
246.292 176.897 mo
245.613 175.719 li
247.375 174.702 li
248.055 175.879 li
246.292 176.897 li
.0156863 .886274 1 rgb
f
152.445 219.568 mo
151.937 218.688 li
162.282 212.716 li
162.79 213.595 li
152.445 219.568 li
.0156863 .0901961 .243137 rgb
f
242.904 194.532 mo
240.914 191.085 li
242.158 190.367 li
242.185 190.471 242.226 190.573 242.282 190.671 cv
242.509 191.064 242.921 191.283 243.344 191.283 cv
243.552 191.283 243.762 191.23 243.955 191.119 cv
244.541 190.78 244.742 190.032 244.403 189.446 cv
244.347 189.349 244.279 189.262 244.203 189.186 cv
251.092 185.209 li
253.082 188.656 li
242.904 194.532 li
239.956 189.425 mo
237.966 185.979 li
248.144 180.103 li
250.133 183.549 li
239.956 189.425 li
237.008 184.318 mo
235.018 180.872 li
235.44 180.628 li
235.507 180.745 li
245.263 175.113 li
245.38 175.315 li
235.234 181.173 li
236.147 182.754 li
236.537 182.529 li
236.584 182.61 li
246.339 176.978 li
247.184 178.442 li
237.008 184.318 li
.0156863 .203922 .364706 rgb
f
236.584 182.61 mo
236.537 182.529 li
246.292 176.897 li
246.339 176.978 li
236.584 182.61 li
235.507 180.745 mo
235.44 180.628 li
245.195 174.996 li
245.263 175.113 li
235.507 180.745 li
.0156863 .321569 .501961 rgb
f
236.147 182.754 mo
235.234 181.173 li
245.38 175.315 li
245.613 175.719 li
235.857 181.352 li
236.537 182.529 li
236.147 182.754 li
.0156863 .882353 1 rgb
f
236.537 182.529 mo
235.857 181.352 li
245.613 175.719 li
246.292 176.897 li
236.537 182.529 li
.0156863 .905882 1 rgb
f
234.06 179.212 mo
232.069 175.765 li
242.247 169.89 li
242.383 170.125 li
232.627 175.757 li
233.354 177.016 li
243.109 171.383 li
243.459 171.989 li
233.704 177.621 li
234.431 178.881 li
244.186 173.248 li
244.236 173.336 li
234.06 179.212 li
.0156863 .203922 .364706 rgb
f
234.431 178.881 mo
233.704 177.621 li
243.459 171.989 li
244.186 173.248 li
234.431 178.881 li
233.354 177.016 mo
232.627 175.757 li
242.383 170.125 li
243.109 171.383 li
233.354 177.016 li
.0156863 .321569 .501961 rgb
f
203.023 191.795 mo
201.897 189.844 li
230.623 173.259 li
231.111 174.105 li
241.288 168.229 li
240.8 167.384 li
242.562 166.366 li
243.068 167.242 li
231.55 173.892 li
232.171 174.967 li
226.44 178.276 li
225.819 177.2 li
213.916 184.072 li
214.537 185.148 li
203.023 191.795 li
.0156863 .862745 1 rgb
f
200.948 192.993 mo
199.822 191.042 li
201.897 189.844 li
203.023 191.795 li
200.948 192.993 li
f
214.537 185.148 mo
213.916 184.072 li
225.819 177.2 li
226.44 178.276 li
214.537 185.148 li
232.171 174.967 mo
231.55 173.892 li
243.068 167.242 li
243.689 168.317 li
232.171 174.967 li
.0156863 .886274 1 rgb
f
231.111 174.105 mo
230.623 173.259 li
240.8 167.384 li
241.288 168.229 li
231.111 174.105 li
f
295.726 258.447 mo
293.942 255.357 li
295.638 254.378 li
291.933 247.96 li
290.237 248.939 li
288.452 245.849 li
290.148 244.87 li
286.443 238.453 li
284.747 239.432 li
282.964 236.342 li
284.659 235.363 li
280.954 228.945 li
279.258 229.925 li
279.149 229.734 li
361.07 182.437 li
370.099 198.078 li
358.525 204.76 li
358.966 205.522 li
348.56 211.53 li
351.795 217.135 li
362.201 211.127 li
370.277 225.114 li
360.833 230.566 li
356.655 223.331 li
297.449 257.514 li
297.422 257.468 li
295.726 258.447 li
0 .0235294 .0823529 rgb
f
279.149 229.734 mo
255.3 188.428 li
284.635 171.492 li
292.168 184.54 li
283.783 189.381 li
288.531 197.605 li
296.916 192.764 li
301.021 199.873 li
353.607 169.512 li
361.07 182.437 li
279.149 229.734 li
260.061 192.817 mo
259.853 192.817 259.642 192.87 259.449 192.981 cv
258.864 193.319 258.663 194.068 259.001 194.654 cv
259.228 195.047 259.64 195.267 260.063 195.267 cv
260.27 195.267 260.481 195.214 260.674 195.103 cv
261.26 194.765 261.461 194.016 261.122 193.43 cv
260.895 193.037 260.484 192.817 260.061 192.817 cv
.0156863 .0509804 .129412 rgb
f
301.021 199.873 mo
296.916 192.764 li
297.616 192.36 li
297.86 192.783 li
300.862 191.051 li
300.618 190.627 li
302.063 189.793 li
302.308 190.216 li
305.31 188.483 li
305.065 188.06 li
305.163 188.003 li
305.137 187.958 li
306.484 187.18 li
306.755 187.648 li
309.757 185.916 li
309.486 185.447 li
326.179 175.81 li
325.22 174.149 li
328.875 172.039 li
333.202 179.535 li
335.544 178.184 li
330.659 169.724 li
328.926 170.724 li
320.72 156.512 li
322.533 155.466 li
319.998 151.075 li
327.616 146.677 li
330.15 151.067 li
339.756 145.522 li
353.607 169.512 li
301.021 199.873 li
329.449 152.448 mo
329.241 152.448 329.031 152.501 328.838 152.612 cv
328.252 152.95 328.052 153.699 328.39 154.285 cv
328.616 154.678 329.028 154.898 329.451 154.898 cv
329.659 154.898 329.87 154.845 330.063 154.733 cv
330.648 154.395 330.849 153.646 330.511 153.06 cv
330.283 152.668 329.872 152.448 329.449 152.448 cv
334.221 149.693 mo
334.013 149.693 333.803 149.746 333.61 149.857 cv
333.024 150.195 332.823 150.944 333.161 151.529 cv
333.388 151.922 333.8 152.142 334.223 152.142 cv
334.43 152.142 334.641 152.089 334.834 151.978 cv
335.42 151.64 335.621 150.891 335.282 150.306 cv
335.056 149.913 334.644 149.693 334.221 149.693 cv
338.993 146.938 mo
338.785 146.938 338.575 146.991 338.382 147.102 cv
337.796 147.44 337.596 148.189 337.934 148.774 cv
338.16 149.167 338.572 149.387 338.995 149.387 cv
339.203 149.387 339.414 149.334 339.606 149.223 cv
340.192 148.885 340.393 148.136 340.055 147.55 cv
339.827 147.158 339.416 146.938 338.993 146.938 cv
292.168 184.54 mo
284.635 171.492 li
285.335 171.088 li
286.658 173.381 li
289.66 171.647 li
288.336 169.355 li
289.782 168.52 li
291.106 170.814 li
294.107 169.08 li
292.784 166.787 li
294.229 165.953 li
295.553 168.246 li
298.555 166.513 li
297.23 164.22 li
304.176 160.209 li
306.711 164.6 li
308.34 163.659 li
315.185 175.515 li
306.61 180.466 li
305.976 179.367 li
302.974 181.101 li
303.608 182.199 li
302.262 182.977 li
300.415 179.778 li
292.168 184.54 li
291.48 174.801 mo
288.479 176.534 li
292.26 183.082 li
295.262 181.35 li
291.48 174.801 li
295.928 172.233 mo
292.926 173.967 li
296.707 180.515 li
299.709 178.782 li
295.928 172.233 li
300.375 169.666 mo
297.373 171.399 li
301.154 177.947 li
304.155 176.214 li
300.375 169.666 li
f
305.137 187.958 mo
302.262 182.977 li
303.608 182.199 li
306.484 187.18 li
305.137 187.958 li
309.486 185.447 mo
306.61 180.466 li
315.185 175.515 li
317.102 178.837 li
325.22 174.149 li
326.179 175.81 li
309.486 185.447 li
.403922 .0509804 .882353 rgb
f
255.3 188.428 mo
248.102 175.961 li
248.487 175.738 li
248.44 175.657 li
251.192 174.068 li
252.085 175.613 li
262.263 169.738 li
261.417 168.273 li
266.121 165.557 li
266.074 165.475 li
266.269 165.363 li
267.162 166.909 li
277.34 161.033 li
276.447 159.487 li
277.389 158.943 li
284.635 171.492 li
255.3 188.428 li
266.169 176.504 mo
255.991 182.38 li
257.981 185.827 li
268.159 179.951 li
266.169 176.504 li
263.221 171.398 mo
253.043 177.273 li
255.033 180.72 li
265.211 174.845 li
263.221 171.398 li
281.246 167.799 mo
271.069 173.675 li
273.059 177.122 li
283.236 171.246 li
281.246 167.799 li
278.298 162.692 mo
268.121 168.568 li
270.11 172.016 li
280.288 166.14 li
278.298 162.692 li
247.142 174.298 mo
247.025 174.095 li
247.41 173.873 li
246.684 172.614 li
246.298 172.837 li
245.948 172.23 li
246.334 172.008 li
245.607 170.749 li
245.222 170.972 li
244.872 170.366 li
245.257 170.144 li
244.53 168.885 li
244.145 169.107 li
243.984 168.828 li
273.319 151.892 li
276.477 157.362 li
275.534 157.906 li
275.35 157.586 li
265.172 163.462 li
265.357 163.782 li
260.457 166.611 li
260.34 166.409 li
265.045 163.692 li
264.318 162.434 li
252.415 169.306 li
253.074 170.447 li
250.095 172.167 li
250.279 172.487 li
247.142 174.298 li
257.324 161.185 mo
247.146 167.061 li
249.137 170.507 li
259.313 164.631 li
259.263 164.543 li
263.968 161.827 li
263.241 160.568 li
258.536 163.285 li
258.186 162.678 li
262.892 159.962 li
262.164 158.703 li
257.46 161.419 li
257.324 161.185 li
272.401 152.479 mo
262.224 158.355 li
264.214 161.802 li
274.392 155.926 li
272.401 152.479 li
.0156863 .0705882 .188235 rgb
f
243.984 168.828 mo
243.795 168.501 li
244.181 168.278 li
244.074 168.095 li
249.805 164.786 li
249.911 164.97 li
261.814 158.097 li
261.088 156.838 li
256.716 159.362 li
256.21 158.486 li
260.777 155.85 li
261.266 156.695 li
271.443 150.82 li
270.955 149.974 li
271.897 149.43 li
273.319 151.892 li
243.984 168.828 li
.0156863 .0901961 .243137 rgb
f
284.635 171.492 mo
277.389 158.943 li
278.09 158.538 li
281.058 163.68 li
284.06 161.946 li
281.091 156.806 li
282.536 155.971 li
285.505 161.112 li
288.507 159.379 li
285.538 154.238 li
286.984 153.403 li
289.952 158.545 li
292.953 156.811 li
289.985 151.671 li
296.931 147.66 li
300.624 154.057 li
302.253 153.116 li
304.231 156.543 li
302.603 157.483 li
304.176 160.209 li
297.23 164.22 li
294.773 159.965 li
291.772 161.697 li
294.229 165.953 li
292.784 166.787 li
290.327 162.532 li
287.325 164.265 li
289.782 168.52 li
288.336 169.355 li
285.88 165.1 li
282.878 166.832 li
285.335 171.088 li
284.635 171.492 li
276.477 157.362 mo
273.319 151.892 li
274.019 151.488 li
275.456 153.978 li
278.458 152.245 li
277.021 149.755 li
278.466 148.92 li
279.903 151.41 li
282.905 149.678 li
281.467 147.188 li
282.913 146.353 li
284.351 148.843 li
287.352 147.11 li
285.915 144.62 li
290.77 141.816 li
290.391 142.548 290.381 143.452 290.824 144.219 cv
291.287 145.021 292.128 145.47 292.992 145.47 cv
293.416 145.47 293.846 145.362 294.239 145.135 cv
295.042 144.671 295.491 143.829 295.49 142.964 cv
295.513 142.95 li
296.994 145.516 li
276.477 157.362 li
.0156863 .0705882 .188235 rgb
f
296.994 145.516 mo
295.513 142.95 li
296.166 142.573 li
297.647 145.139 li
296.994 145.516 li
.513725 .247059 .25098 rgb
f
273.319 151.892 mo
271.897 149.43 li
272.597 149.025 li
274.019 151.488 li
273.319 151.892 li
277.021 149.755 mo
275.599 147.292 li
277.044 146.458 li
278.466 148.92 li
277.021 149.755 li
281.467 147.188 mo
280.046 144.725 li
281.491 143.891 li
282.913 146.353 li
281.467 147.188 li
285.915 144.62 mo
284.493 142.157 li
291.439 138.147 li
292.784 140.477 li
292.427 140.507 292.07 140.613 291.739 140.805 cv
291.31 141.052 290.983 141.407 290.77 141.816 cv
285.915 144.62 li
.0156863 .0901961 .243137 rgb
f
248.102 175.961 mo
248.055 175.879 li
248.44 175.657 li
248.487 175.738 li
248.102 175.961 li
247.025 174.095 mo
246.298 172.837 li
246.684 172.614 li
247.41 173.873 li
247.025 174.095 li
245.948 172.23 mo
245.222 170.972 li
245.607 170.749 li
246.334 172.008 li
245.948 172.23 li
253.074 170.447 mo
252.415 169.306 li
264.318 162.434 li
265.045 163.692 li
260.34 166.409 li
260.272 166.291 li
253.074 170.447 li
244.872 170.366 mo
244.145 169.107 li
244.53 168.885 li
245.257 170.144 li
244.872 170.366 li
.0156863 .203922 .364706 rgb
f
243.795 168.501 mo
243.689 168.317 li
244.074 168.095 li
244.181 168.278 li
243.795 168.501 li
.0156863 .219608 .403922 rgb
f
261.417 168.273 mo
261.37 168.192 li
266.074 165.475 li
266.121 165.557 li
261.417 168.273 li
.0156863 .203922 .364706 rgb
f
249.911 164.97 mo
249.805 164.786 li
257.337 160.437 li
256.716 159.362 li
261.088 156.838 li
261.814 158.097 li
249.911 164.97 li
.0156863 .219608 .403922 rgb
f
259.263 164.543 mo
258.536 163.285 li
263.241 160.568 li
263.968 161.827 li
259.263 164.543 li
258.186 162.678 mo
257.46 161.419 li
262.164 158.703 li
262.892 159.962 li
258.186 162.678 li
.0156863 .203922 .364706 rgb
f
319.998 151.075 mo
318.424 148.349 li
316.611 149.395 li
314.633 145.968 li
316.445 144.922 li
312.337 137.806 li
310.524 138.852 li
310.196 138.283 li
329.232 127.293 li
329.56 127.862 li
319.955 133.408 li
324.063 140.524 li
333.669 134.978 li
335.648 138.405 li
326.042 143.951 li
327.616 146.677 li
319.998 151.075 li
308.254 130.734 mo
307.26 129.013 li
314.878 124.614 li
315.872 126.336 li
308.254 130.734 li
.0156863 .0705882 .188235 rgb
f
310.196 138.283 mo
308.546 135.426 li
310.358 134.379 li
308.254 130.734 li
315.872 126.336 li
317.977 129.981 li
327.582 124.435 li
329.232 127.293 li
310.196 138.283 li
.513725 .247059 .25098 rgb
f
248.44 175.657 mo
247.761 174.479 li
247.375 174.702 li
247.142 174.298 li
250.279 172.487 li
251.192 174.068 li
248.44 175.657 li
260.69 167.014 mo
260.457 166.611 li
265.357 163.782 li
266.269 165.363 li
266.074 165.475 li
265.394 164.298 li
260.69 167.014 li
276.447 159.487 mo
275.534 157.906 li
276.477 157.362 li
277.389 158.943 li
276.447 159.487 li
.0156863 .862745 1 rgb
f
277.389 158.943 mo
276.477 157.362 li
296.994 145.516 li
297.162 145.808 li
297.815 145.431 li
298.144 146 li
296.516 146.94 li
296.931 147.66 li
289.985 151.671 li
289.173 150.264 li
286.171 151.996 li
286.984 153.403 li
285.538 154.238 li
284.726 152.831 li
281.724 154.563 li
282.536 155.971 li
281.091 156.806 li
280.278 155.398 li
277.277 157.131 li
278.09 158.538 li
277.389 158.943 li
f
297.162 145.808 mo
296.994 145.516 li
297.647 145.139 li
297.815 145.431 li
297.162 145.808 li
.513725 .890196 1 rgb
f
248.055 175.879 mo
247.375 174.702 li
247.761 174.479 li
248.44 175.657 li
248.055 175.879 li
261.37 168.192 mo
260.69 167.014 li
265.394 164.298 li
266.074 165.475 li
261.37 168.192 li
.0156863 .886274 1 rgb
f
333.202 179.535 mo
328.875 172.039 li
329.482 171.688 li
328.926 170.724 li
330.659 169.724 li
335.544 178.184 li
333.202 179.535 li
1 .290196 .129412 rgb
f
315.185 175.515 mo
308.34 163.659 li
320.72 156.512 li
328.926 170.724 li
328.318 171.075 li
328.875 172.039 li
325.22 174.149 li
323.303 170.828 li
315.185 175.515 li
.0156863 .0509804 .129412 rgb
f
317.102 178.837 mo
315.185 175.515 li
323.303 170.828 li
325.22 174.149 li
317.102 178.837 li
.403922 .0509804 .882353 rgb
f
304.231 156.543 mo
302.253 153.116 li
314.633 145.968 li
316.611 149.395 li
304.231 156.543 li
301.683 143.957 mo
301.355 143.387 li
310.196 138.283 li
310.524 138.852 li
301.683 143.957 li
.0156863 .0705882 .188235 rgb
f
297.647 145.139 mo
296.166 142.573 li
308.546 135.426 li
310.196 138.283 li
301.355 143.387 li
301.187 143.096 li
297.647 145.139 li
.513725 .247059 .25098 rgb
f
298.144 146 mo
297.815 145.431 li
301.355 143.387 li
301.683 143.957 li
298.144 146 li
.0156863 .862745 1 rgb
f
297.815 145.431 mo
297.647 145.139 li
301.187 143.096 li
301.355 143.387 li
297.815 145.431 li
.513725 .890196 1 rgb
f
328.875 172.039 mo
328.318 171.075 li
328.926 170.724 li
329.482 171.688 li
328.875 172.039 li
1 .290196 .129412 rgb
f
257.981 185.827 mo
255.991 182.38 li
266.169 176.504 li
268.159 179.951 li
257.981 185.827 li
255.033 180.72 mo
253.043 177.273 li
263.221 171.398 li
265.211 174.845 li
255.033 180.72 li
273.059 177.122 mo
271.069 173.675 li
281.246 167.799 li
283.236 171.246 li
273.059 177.122 li
252.085 175.613 mo
251.192 174.068 li
254.171 172.348 li
254.219 172.43 li
261.417 168.273 li
262.263 169.738 li
252.085 175.613 li
250.279 172.487 mo
250.095 172.167 li
253.074 170.447 li
253.142 170.564 li
260.34 166.409 li
260.457 166.611 li
250.279 172.487 li
.0156863 .203922 .364706 rgb
f
254.219 172.43 mo
254.171 172.348 li
261.37 168.192 li
261.417 168.273 li
254.219 172.43 li
253.142 170.564 mo
253.074 170.447 li
260.272 166.291 li
260.34 166.409 li
253.142 170.564 li
.0156863 .321569 .501961 rgb
f
251.192 174.068 mo
250.279 172.487 li
260.457 166.611 li
260.69 167.014 li
253.491 171.17 li
254.171 172.348 li
251.192 174.068 li
.0156863 .882353 1 rgb
f
254.171 172.348 mo
253.491 171.17 li
260.69 167.014 li
261.37 168.192 li
254.171 172.348 li
.0156863 .905882 1 rgb
f
270.11 172.016 mo
268.121 168.568 li
278.298 162.692 li
280.288 166.14 li
270.11 172.016 li
249.137 170.507 mo
247.146 167.061 li
257.324 161.185 li
257.46 161.419 li
250.262 165.575 li
250.988 166.834 li
258.186 162.678 li
258.536 163.285 li
251.338 167.44 li
252.064 168.699 li
259.263 164.543 li
259.313 164.631 li
249.137 170.507 li
.0156863 .203922 .364706 rgb
f
252.064 168.699 mo
251.338 167.44 li
258.536 163.285 li
259.263 164.543 li
252.064 168.699 li
250.988 166.834 mo
250.262 165.575 li
257.46 161.419 li
258.186 162.678 li
250.988 166.834 li
.0156863 .321569 .501961 rgb
f
267.162 166.909 mo
266.269 165.363 li
276.447 159.487 li
277.34 161.033 li
267.162 166.909 li
265.357 163.782 mo
265.172 163.462 li
275.35 157.586 li
275.534 157.906 li
265.357 163.782 li
.0156863 .203922 .364706 rgb
f
266.269 165.363 mo
265.357 163.782 li
275.534 157.906 li
276.447 159.487 li
266.269 165.363 li
.0156863 .882353 1 rgb
f
264.214 161.802 mo
262.224 158.355 li
272.401 152.479 li
274.392 155.926 li
264.214 161.802 li
.0156863 .203922 .364706 rgb
f
261.266 156.695 mo
260.777 155.85 li
270.955 149.974 li
271.443 150.82 li
261.266 156.695 li
.0156863 .223529 .407843 rgb
f
244.074 168.095 mo
243.453 167.019 li
243.068 167.242 li
242.562 166.366 li
245.7 164.554 li
246.189 165.4 li
256.366 159.524 li
255.878 158.678 li
256.21 158.486 li
256.716 159.362 li
249.185 163.711 li
249.805 164.786 li
244.074 168.095 li
.0156863 .862745 1 rgb
f
243.689 168.317 mo
243.068 167.242 li
243.453 167.019 li
244.074 168.095 li
243.689 168.317 li
249.805 164.786 mo
249.185 163.711 li
256.716 159.362 li
257.337 160.437 li
249.805 164.786 li
.0156863 .886274 1 rgb
f
246.189 165.4 mo
245.7 164.554 li
255.878 158.678 li
256.366 159.524 li
246.189 165.4 li
f
297.86 192.783 mo
297.616 192.36 li
300.618 190.627 li
300.862 191.051 li
297.86 192.783 li
302.308 190.216 mo
302.063 189.793 li
305.065 188.06 li
305.31 188.483 li
302.308 190.216 li
306.755 187.648 mo
306.484 187.18 li
309.486 185.447 li
309.757 185.916 li
306.755 187.648 li
303.608 182.199 mo
302.974 181.101 li
305.976 179.367 li
306.61 180.466 li
303.608 182.199 li
.0156863 .0509804 .129412 rgb
f
306.484 187.18 mo
303.608 182.199 li
306.61 180.466 li
309.486 185.447 li
306.484 187.18 li
.403922 .0509804 .882353 rgb
f
292.26 183.082 mo
288.479 176.534 li
291.48 174.801 li
295.262 181.35 li
292.26 183.082 li
296.707 180.515 mo
292.926 173.967 li
295.928 172.233 li
299.709 178.782 li
296.707 180.515 li
301.154 177.947 mo
297.373 171.399 li
300.375 169.666 li
304.155 176.214 li
301.154 177.947 li
286.658 173.381 mo
285.335 171.088 li
288.336 169.355 li
289.66 171.647 li
286.658 173.381 li
.0156863 .0509804 .129412 rgb
f
285.335 171.088 mo
282.878 166.832 li
285.88 165.1 li
288.336 169.355 li
285.335 171.088 li
.0156863 .0705882 .188235 rgb
f
291.106 170.814 mo
289.782 168.52 li
292.784 166.787 li
294.107 169.08 li
291.106 170.814 li
.0156863 .0509804 .129412 rgb
f
289.782 168.52 mo
287.325 164.265 li
290.327 162.532 li
292.784 166.787 li
289.782 168.52 li
.0156863 .0705882 .188235 rgb
f
295.553 168.246 mo
294.229 165.953 li
297.23 164.22 li
298.555 166.513 li
295.553 168.246 li
.0156863 .0509804 .129412 rgb
f
294.229 165.953 mo
291.772 161.697 li
294.773 159.965 li
297.23 164.22 li
294.229 165.953 li
281.058 163.68 mo
278.09 158.538 li
281.091 156.806 li
284.06 161.946 li
281.058 163.68 li
.0156863 .0705882 .188235 rgb
f
278.09 158.538 mo
277.277 157.131 li
280.278 155.398 li
281.091 156.806 li
278.09 158.538 li
.0156863 .862745 1 rgb
f
285.505 161.112 mo
282.536 155.971 li
285.538 154.238 li
288.507 159.379 li
285.505 161.112 li
.0156863 .0705882 .188235 rgb
f
282.536 155.971 mo
281.724 154.563 li
284.726 152.831 li
285.538 154.238 li
282.536 155.971 li
.0156863 .862745 1 rgb
f
289.952 158.545 mo
286.984 153.403 li
289.985 151.671 li
292.953 156.811 li
289.952 158.545 li
.0156863 .0705882 .188235 rgb
f
286.984 153.403 mo
286.171 151.996 li
289.173 150.264 li
289.985 151.671 li
286.984 153.403 li
.0156863 .862745 1 rgb
f
275.456 153.978 mo
274.019 151.488 li
277.021 149.755 li
278.458 152.245 li
275.456 153.978 li
.0156863 .0705882 .188235 rgb
f
274.019 151.488 mo
272.597 149.025 li
275.599 147.292 li
277.021 149.755 li
274.019 151.488 li
.0156863 .0901961 .243137 rgb
f
279.903 151.41 mo
278.466 148.92 li
281.467 147.188 li
282.905 149.678 li
279.903 151.41 li
.0156863 .0705882 .188235 rgb
f
278.466 148.92 mo
277.044 146.458 li
280.046 144.725 li
281.467 147.188 li
278.466 148.92 li
.0156863 .0901961 .243137 rgb
f
284.351 148.843 mo
282.913 146.353 li
285.915 144.62 li
287.352 147.11 li
284.351 148.843 li
.0156863 .0705882 .188235 rgb
f
282.913 146.353 mo
281.491 143.891 li
284.493 142.157 li
285.915 144.62 li
282.913 146.353 li
.0156863 .0901961 .243137 rgb
f
288.531 197.605 mo
283.783 189.381 li
292.168 184.54 li
296.916 192.764 li
288.531 197.605 li
.176471 .780392 .894118 rgb
f
296.916 192.764 mo
292.168 184.54 li
300.415 179.778 li
302.262 182.977 li
302.164 183.033 li
301.529 181.935 li
298.527 183.668 li
299.162 184.767 li
298.999 184.86 li
301.875 189.841 li
302.037 189.747 li
302.063 189.793 li
300.618 190.627 li
297.082 184.502 li
294.08 186.235 li
297.616 192.36 li
296.916 192.764 li
305.065 188.06 mo
305.039 188.014 li
305.137 187.958 li
305.163 188.003 li
305.065 188.06 li
f
301.875 189.841 mo
298.999 184.86 li
299.162 184.767 li
302.037 189.747 li
301.875 189.841 li
305.039 188.014 mo
302.164 183.033 li
302.262 182.977 li
305.137 187.958 li
305.039 188.014 li
.501961 .780392 .984314 rgb
f
297.616 192.36 mo
294.08 186.235 li
297.082 184.502 li
300.618 190.627 li
297.616 192.36 li
302.063 189.793 mo
302.037 189.747 li
305.039 188.014 li
305.065 188.06 li
302.063 189.793 li
299.162 184.767 mo
298.527 183.668 li
301.529 181.935 li
302.164 183.033 li
299.162 184.767 li
.176471 .780392 .894118 rgb
f
302.037 189.747 mo
299.162 184.767 li
302.164 183.033 li
305.039 188.014 li
302.037 189.747 li
.501961 .780392 .984314 rgb
f
306.711 164.6 mo
304.176 160.209 li
305.805 159.269 li
308.34 163.659 li
306.711 164.6 li
320.72 156.512 mo
318.185 152.121 li
319.998 151.075 li
322.533 155.466 li
320.72 156.512 li
.0156863 .188235 .32549 rgb
f
304.176 160.209 mo
302.603 157.483 li
304.231 156.543 li
305.805 159.269 li
304.176 160.209 li
.0156863 .203922 .364706 rgb
f
318.185 152.121 mo
316.611 149.395 li
318.424 148.349 li
319.998 151.075 li
318.185 152.121 li
f
308.34 163.659 mo
305.805 159.269 li
318.185 152.121 li
320.72 156.512 li
308.34 163.659 li
.0156863 .188235 .32549 rgb
f
305.805 159.269 mo
304.231 156.543 li
316.611 149.395 li
318.185 152.121 li
305.805 159.269 li
.0156863 .203922 .364706 rgb
f
300.624 154.057 mo
296.931 147.66 li
298.56 146.72 li
302.253 153.116 li
300.624 154.057 li
f
314.633 145.968 mo
310.524 138.852 li
312.337 137.806 li
316.445 144.922 li
314.633 145.968 li
f
296.931 147.66 mo
296.516 146.94 li
298.144 146 li
298.56 146.72 li
296.931 147.66 li
.0156863 .882353 1 rgb
f
302.253 153.116 mo
298.56 146.72 li
302.099 144.677 li
301.683 143.957 li
310.524 138.852 li
314.633 145.968 li
302.253 153.116 li
.0156863 .203922 .364706 rgb
f
298.56 146.72 mo
298.144 146 li
301.683 143.957 li
302.099 144.677 li
298.56 146.72 li
.0156863 .882353 1 rgb
f
330.15 151.067 mo
327.616 146.677 li
337.221 141.131 li
339.756 145.522 li
330.15 151.067 li
.0156863 .188235 .32549 rgb
f
327.616 146.677 mo
326.042 143.951 li
335.648 138.405 li
337.221 141.131 li
327.616 146.677 li
.0156863 .203922 .364706 rgb
f
295.49 142.964 mo
295.49 142.946 295.489 142.927 295.489 142.909 cv
295.513 142.95 li
295.49 142.964 li
294.291 140.835 mo
293.931 140.615 293.52 140.491 293.1 140.472 cv
293.836 140.046 li
294.291 140.835 li
f
295.513 142.95 mo
295.489 142.909 li
295.48 142.504 295.371 142.095 295.154 141.719 cv
294.937 141.343 294.637 141.045 294.291 140.835 cv
293.836 140.046 li
294.489 139.669 li
296.166 142.573 li
295.513 142.95 li
.513725 .356863 .415686 rgb
f
292.784 140.477 mo
291.439 138.147 li
293.067 137.207 li
294.061 138.928 li
293.408 139.305 li
293.836 140.046 li
293.1 140.472 li
293.062 140.47 293.025 140.469 292.987 140.469 cv
292.92 140.469 292.852 140.472 292.784 140.477 cv
.0156863 .223529 .407843 rgb
f
293.836 140.046 mo
293.408 139.305 li
294.061 138.928 li
294.489 139.669 li
293.836 140.046 li
.513725 .364706 .454902 rgb
f
306.441 131.78 mo
305.448 130.059 li
307.26 129.013 li
308.254 130.734 li
306.441 131.78 li
.0156863 .203922 .364706 rgb
f
308.546 135.426 mo
306.441 131.78 li
308.254 130.734 li
310.358 134.379 li
308.546 135.426 li
.513725 .356863 .415686 rgb
f
304.078 133.145 mo
303.084 131.424 li
305.448 130.059 li
306.441 131.78 li
304.078 133.145 li
.0156863 .203922 .364706 rgb
f
296.166 142.573 mo
294.489 139.669 li
304.506 133.886 li
304.078 133.145 li
306.441 131.78 li
308.546 135.426 li
296.166 142.573 li
.513725 .356863 .415686 rgb
f
294.061 138.928 mo
293.067 137.207 li
303.084 131.424 li
304.078 133.145 li
294.061 138.928 li
.0156863 .223529 .407843 rgb
f
294.489 139.669 mo
294.061 138.928 li
304.078 133.145 li
304.506 133.886 li
294.489 139.669 li
.513725 .364706 .454902 rgb
f
324.063 140.524 mo
319.955 133.408 li
329.56 127.862 li
333.669 134.978 li
324.063 140.524 li
.0156863 .203922 .364706 rgb
f
315.872 126.336 mo
314.878 124.614 li
324.484 119.069 li
325.477 120.79 li
315.872 126.336 li
f
317.977 129.981 mo
315.872 126.336 li
325.477 120.79 li
327.582 124.435 li
317.977 129.981 li
.513725 .356863 .415686 rgb
f
219.484 205.059 mo
219.061 205.059 218.65 204.839 218.423 204.446 cv
218.085 203.86 218.285 203.111 218.871 202.773 cv
219.064 202.662 219.275 202.609 219.482 202.609 cv
219.906 202.609 220.317 202.829 220.544 203.222 cv
220.882 203.808 220.681 204.556 220.096 204.895 cv
219.903 205.006 219.692 205.059 219.484 205.059 cv
224.256 202.303 mo
223.833 202.303 223.422 202.083 223.195 201.69 cv
222.856 201.105 223.057 200.356 223.643 200.018 cv
223.836 199.907 224.047 199.854 224.254 199.854 cv
224.677 199.854 225.089 200.074 225.315 200.467 cv
225.654 201.053 225.453 201.801 224.868 202.139 cv
224.675 202.25 224.464 202.303 224.256 202.303 cv
229.028 199.548 mo
228.605 199.548 228.194 199.329 227.967 198.936 cv
227.628 198.351 227.829 197.602 228.415 197.264 cv
228.608 197.152 228.819 197.099 229.026 197.099 cv
229.449 197.099 229.861 197.319 230.087 197.711 cv
230.426 198.297 230.225 199.046 229.64 199.384 cv
229.447 199.495 229.236 199.548 229.028 199.548 cv
233.8 196.793 mo
233.377 196.793 232.966 196.574 232.739 196.181 cv
232.4 195.595 232.601 194.847 233.187 194.508 cv
233.38 194.397 233.59 194.344 233.798 194.344 cv
234.221 194.344 234.633 194.563 234.86 194.956 cv
235.198 195.542 234.997 196.291 234.412 196.629 cv
234.219 196.74 234.008 196.793 233.8 196.793 cv
238.572 194.038 mo
238.149 194.038 237.738 193.819 237.511 193.426 cv
237.172 192.84 237.374 192.091 237.959 191.753 cv
238.152 191.642 238.362 191.589 238.57 191.589 cv
238.993 191.589 239.405 191.808 239.632 192.201 cv
239.97 192.787 239.769 193.536 239.184 193.874 cv
238.991 193.985 238.78 194.038 238.572 194.038 cv
242.158 190.367 mo
242.022 189.847 242.243 189.28 242.73 188.998 cv
242.923 188.887 243.134 188.834 243.342 188.834 cv
243.66 188.834 243.971 188.958 244.203 189.186 cv
242.158 190.367 li
1 .117647 .188235 rgb
f
243.344 191.283 mo
242.921 191.283 242.509 191.064 242.282 190.671 cv
242.226 190.573 242.185 190.471 242.158 190.367 cv
244.203 189.186 li
244.279 189.262 244.347 189.349 244.403 189.446 cv
244.742 190.032 244.541 190.78 243.955 191.119 cv
243.762 191.23 243.552 191.283 243.344 191.283 cv
1 .243137 .364706 rgb
f
292.992 145.47 mo
292.128 145.47 291.287 145.021 290.824 144.219 cv
290.381 143.452 290.391 142.548 290.77 141.816 cv
292.861 140.61 li
294.537 143.514 li
295.49 142.964 li
295.491 143.829 295.042 144.671 294.239 145.135 cv
293.846 145.362 293.416 145.47 292.992 145.47 cv
.25098 .176471 .529412 rgb
f
290.77 141.816 mo
290.983 141.407 291.31 141.052 291.739 140.805 cv
292.07 140.613 292.427 140.507 292.784 140.477 cv
292.861 140.61 li
290.77 141.816 li
.25098 .196078 .560784 rgb
f
294.537 143.514 mo
292.861 140.61 li
293.1 140.472 li
293.52 140.491 293.931 140.615 294.291 140.835 cv
295.489 142.909 li
295.489 142.927 295.49 142.946 295.49 142.964 cv
294.537 143.514 li
.25098 .294118 .631373 rgb
f
295.489 142.909 mo
294.291 140.835 li
294.637 141.045 294.937 141.343 295.154 141.719 cv
295.371 142.095 295.48 142.504 295.489 142.909 cv
.631373 .431373 .658823 rgb
f
292.861 140.61 mo
292.784 140.477 li
292.852 140.472 292.92 140.469 292.987 140.469 cv
293.025 140.469 293.062 140.47 293.1 140.472 cv
292.861 140.61 li
.25098 .313725 .654902 rgb
f
329.451 154.898 mo
329.028 154.898 328.616 154.678 328.39 154.285 cv
328.052 153.699 328.252 152.95 328.838 152.612 cv
329.031 152.501 329.241 152.448 329.449 152.448 cv
329.872 152.448 330.283 152.668 330.511 153.06 cv
330.849 153.646 330.648 154.395 330.063 154.733 cv
329.87 154.845 329.659 154.898 329.451 154.898 cv
334.223 152.142 mo
333.8 152.142 333.388 151.922 333.161 151.529 cv
332.823 150.944 333.024 150.195 333.61 149.857 cv
333.803 149.746 334.013 149.693 334.221 149.693 cv
334.644 149.693 335.056 149.913 335.282 150.306 cv
335.621 150.891 335.42 151.64 334.834 151.978 cv
334.641 152.089 334.43 152.142 334.223 152.142 cv
338.995 149.387 mo
338.572 149.387 338.16 149.167 337.934 148.774 cv
337.596 148.189 337.796 147.44 338.382 147.102 cv
338.575 146.991 338.785 146.938 338.993 146.938 cv
339.416 146.938 339.827 147.158 340.055 147.55 cv
340.393 148.136 340.192 148.885 339.606 149.223 cv
339.414 149.334 339.203 149.387 338.995 149.387 cv
.211765 .0705882 .172549 rgb
f
199.743 199.615 mo
198.879 199.615 198.039 199.166 197.576 198.364 cv
197.022 197.405 197.176 196.233 197.874 195.45 cv
199.233 194.666 li
199.401 194.631 199.57 194.614 199.739 194.614 cv
200.603 194.614 201.443 195.062 201.906 195.864 cv
202.597 197.06 202.187 198.589 200.991 199.279 cv
200.597 199.507 200.167 199.615 199.743 199.615 cv
.0392157 .0705882 .270588 rgb
f
197.874 195.45 mo
198.047 195.256 198.253 195.086 198.491 194.949 cv
198.728 194.812 198.979 194.718 199.233 194.666 cv
197.874 195.45 li
196.246 193.107 mo
198.017 192.084 li
197.817 192.361 197.556 192.602 197.241 192.784 cv
196.925 192.966 196.587 193.072 196.246 193.107 cv
.0392157 .0901961 .317647 rgb
f
236.203 209.042 mo
235.78 209.042 235.368 208.823 235.142 208.43 cv
234.803 207.844 235.004 207.096 235.59 206.757 cv
235.783 206.646 235.993 206.593 236.201 206.593 cv
236.624 206.593 237.036 206.812 237.262 207.205 cv
237.601 207.791 237.4 208.54 236.814 208.878 cv
236.621 208.989 236.411 209.042 236.203 209.042 cv
240.975 206.287 mo
240.551 206.287 240.14 206.068 239.914 205.675 cv
239.575 205.089 239.776 204.34 240.362 204.002 cv
240.555 203.891 240.765 203.838 240.973 203.838 cv
241.396 203.838 241.808 204.057 242.034 204.45 cv
242.372 205.036 242.172 205.784 241.586 206.123 cv
241.393 206.234 241.182 206.287 240.975 206.287 cv
245.747 203.532 mo
245.324 203.532 244.912 203.312 244.686 202.919 cv
244.348 202.334 244.548 201.585 245.134 201.247 cv
245.327 201.135 245.537 201.082 245.745 201.082 cv
246.168 201.082 246.579 201.302 246.807 201.695 cv
247.145 202.281 246.943 203.029 246.358 203.367 cv
246.165 203.479 245.955 203.532 245.747 203.532 cv
250.519 200.777 mo
250.096 200.777 249.684 200.557 249.457 200.164 cv
249.119 199.579 249.32 198.83 249.905 198.492 cv
250.098 198.381 250.309 198.328 250.517 198.328 cv
250.94 198.328 251.352 198.547 251.578 198.94 cv
251.916 199.525 251.716 200.274 251.13 200.612 cv
250.937 200.724 250.726 200.777 250.519 200.777 cv
255.291 198.022 mo
254.868 198.022 254.456 197.802 254.229 197.409 cv
253.891 196.823 254.092 196.075 254.678 195.736 cv
254.871 195.625 255.081 195.572 255.289 195.572 cv
255.712 195.572 256.123 195.792 256.35 196.185 cv
256.688 196.771 256.487 197.52 255.902 197.857 cv
255.709 197.969 255.499 198.022 255.291 198.022 cv
.270588 .0509804 .156863 rgb
f
260.063 195.267 mo
259.64 195.267 259.228 195.047 259.001 194.654 cv
258.663 194.068 258.864 193.319 259.449 192.981 cv
259.642 192.87 259.853 192.817 260.061 192.817 cv
260.484 192.817 260.895 193.037 261.122 193.43 cv
261.461 194.016 261.26 194.765 260.674 195.103 cv
260.481 195.214 260.27 195.267 260.063 195.267 cv
f
351.795 217.135 mo
348.56 211.53 li
358.966 205.522 li
362.201 211.127 li
351.795 217.135 li
.937255 .254902 .0823529 rgb
f
376.136 194.592 mo
367.106 178.952 li
463.59 123.247 li
456.127 110.322 li
458.947 108.694 li
459.474 109.607 li
462.184 108.042 li
478.149 135.695 li
427.453 164.965 li
426.984 164.518 426.361 164.276 425.727 164.276 cv
425.302 164.276 424.872 164.384 424.478 164.611 cv
423.496 165.179 423.044 166.313 423.298 167.363 cv
376.136 194.592 li
421.976 157.78 mo
421.552 157.78 421.122 157.888 420.729 158.115 cv
419.533 158.806 419.123 160.335 419.814 161.53 cv
420.276 162.333 421.117 162.781 421.981 162.781 cv
422.405 162.781 422.835 162.673 423.229 162.445 cv
424.424 161.755 424.834 160.226 424.144 159.03 cv
423.68 158.228 422.84 157.78 421.976 157.78 cv
418.226 151.285 mo
417.802 151.285 417.372 151.393 416.979 151.62 cv
415.783 152.31 415.373 153.84 416.064 155.035 cv
416.527 155.837 417.367 156.286 418.231 156.286 cv
418.655 156.286 419.085 156.178 419.479 155.95 cv
420.674 155.26 421.084 153.731 420.394 152.535 cv
419.93 151.733 419.09 151.285 418.226 151.285 cv
0 .0509804 .160784 rgb
f
459.474 109.607 mo
458.947 108.694 li
461.657 107.13 li
462.184 108.042 li
459.474 109.607 li
f
456.127 110.322 mo
440.551 83.3422 li
442.057 82.4727 li
441.144 80.8915 li
439.638 81.7609 li
427.004 59.8783 li
429.823 58.2507 li
458.947 108.694 li
456.127 110.322 li
f
458.947 108.694 mo
429.823 58.2507 li
432.533 56.686 li
461.657 107.13 li
458.947 108.694 li
f
440.551 83.3422 mo
439.638 81.7609 li
441.144 80.8915 li
442.057 82.4727 li
440.551 83.3422 li
1 .317647 .196078 rgb
f
367.106 178.952 mo
359.643 166.027 li
456.127 110.322 li
463.59 123.247 li
367.106 178.952 li
412.027 146.799 mo
411.912 147.374 411.997 147.992 412.313 148.54 cv
412.776 149.342 413.617 149.79 414.481 149.791 cv
414.905 149.791 415.335 149.682 415.729 149.455 cv
416.924 148.765 417.334 147.235 416.644 146.04 cv
416.327 145.492 415.835 145.11 415.279 144.922 cv
452.223 123.593 li
450.348 120.346 li
412.952 141.937 li
413.326 141.207 413.334 140.308 412.894 139.545 cv
412.431 138.743 411.59 138.294 410.726 138.294 cv
410.302 138.294 409.872 138.402 409.478 138.63 cv
408.283 139.32 407.873 140.85 408.563 142.045 cv
409.004 142.808 409.786 143.251 410.605 143.292 cv
408.057 144.764 li
409.931 148.01 li
412.027 146.799 li
.0156863 .0784314 .207843 rgb
f
359.643 166.027 mo
345.792 142.037 li
345.973 141.933 li
343.437 137.542 li
351.055 133.144 li
353.59 137.535 li
369.411 128.4 li
366.876 124.01 li
375.295 119.149 li
376.104 120.55 li
440.551 83.3422 li
456.127 110.322 li
359.643 166.027 li
348.537 141.428 mo
348.329 141.428 348.119 141.481 347.926 141.592 cv
347.34 141.93 347.14 142.679 347.478 143.265 cv
347.704 143.658 348.116 143.877 348.539 143.877 cv
348.747 143.877 348.957 143.824 349.15 143.713 cv
349.736 143.375 349.937 142.626 349.599 142.04 cv
349.372 141.647 348.96 141.428 348.537 141.428 cv
353.309 138.673 mo
353.101 138.673 352.891 138.726 352.698 138.837 cv
352.112 139.175 351.911 139.924 352.249 140.51 cv
352.476 140.902 352.888 141.122 353.312 141.122 cv
353.519 141.122 353.729 141.069 353.922 140.958 cv
354.508 140.619 354.709 139.871 354.37 139.285 cv
354.143 138.892 353.732 138.673 353.309 138.673 cv
406.976 131.799 mo
406.552 131.799 406.122 131.907 405.728 132.135 cv
404.533 132.825 404.123 134.354 404.813 135.55 cv
405.277 136.352 406.117 136.8 406.981 136.8 cv
407.405 136.8 407.835 136.692 408.228 136.465 cv
409.424 135.774 409.834 134.246 409.143 133.05 cv
408.68 132.248 407.84 131.799 406.976 131.799 cv
409.071 110.659 mo
379.384 127.799 li
382.619 133.403 li
398.835 124.041 li
399.002 124.33 li
404.36 121.236 li
404.194 120.947 li
406.773 119.458 li
406.939 119.747 li
412.298 116.653 li
412.131 116.365 li
412.307 116.263 li
409.071 110.659 li
403.226 125.304 mo
402.802 125.304 402.372 125.412 401.979 125.64 cv
400.783 126.33 400.373 127.859 401.064 129.055 cv
401.527 129.857 402.367 130.305 403.231 130.305 cv
403.655 130.305 404.085 130.197 404.478 129.97 cv
405.674 129.279 406.084 127.75 405.393 126.555 cv
404.93 125.753 404.09 125.304 403.226 125.304 cv
397.967 110.163 mo
392.608 113.256 li
395.186 117.719 li
400.543 114.625 li
397.967 110.163 li
417.659 107.607 mo
412.302 110.701 li
414.878 115.164 li
420.236 112.07 li
417.659 107.607 li
405.904 105.58 mo
400.547 108.673 li
403.123 113.136 li
408.481 110.042 li
405.904 105.58 li
413.843 100.997 mo
408.484 104.09 li
411.06 108.553 li
416.419 105.459 li
413.843 100.997 li
396.087 106.905 mo
394.15 103.551 li
390.378 105.729 li
389.137 103.581 li
392.909 101.403 li
390.333 96.9405 li
386.561 99.1181 li
385.32 96.9696 li
389.093 94.7915 li
386.516 90.3291 li
382.744 92.507 li
379.68 87.2009 li
427.004 59.8783 li
439.638 81.7609 li
411.962 97.7393 li
410.025 94.3857 li
404.668 97.479 li
406.604 100.833 li
404.024 102.322 li
402.088 98.9683 li
396.73 102.062 li
398.666 105.416 li
396.087 106.905 li
398.271 92.3575 mo
392.913 95.4506 li
395.489 99.9136 li
400.848 96.8198 li
398.271 92.3575 li
406.209 87.7744 mo
400.851 90.8681 li
403.427 95.3306 li
408.785 92.2367 li
406.209 87.7744 li
394.454 85.7461 mo
389.096 88.8399 li
391.672 93.3022 li
397.03 90.2085 li
394.454 85.7461 li
402.392 81.1631 mo
397.033 84.2569 li
399.61 88.7192 li
404.968 85.6255 li
402.392 81.1631 li
f
376.104 120.55 mo
375.295 119.149 li
390.832 110.179 li
391.368 111.107 li
396.727 108.014 li
396.087 106.905 li
398.666 105.416 li
399.306 106.524 li
404.664 103.431 li
404.024 102.322 li
406.604 100.833 li
407.244 101.941 li
412.603 98.8481 li
411.962 97.7393 li
439.638 81.7609 li
440.551 83.3422 li
376.104 120.55 li
1 .337255 .243137 rgb
f
343.437 137.542 mo
341.863 134.816 li
341.684 134.92 li
339.705 131.493 li
339.885 131.39 li
335.776 124.273 li
335.596 124.377 li
335.268 123.808 li
338.262 122.08 li
334.507 115.577 li
331.693 117.201 li
330.699 115.48 li
338.318 111.082 li
341.416 116.449 li
357.237 107.314 li
354.139 101.947 li
379.68 87.2009 li
382.744 92.507 li
381.158 93.4224 li
383.734 97.8852 li
385.32 96.9696 li
386.561 99.1181 li
384.975 100.034 li
387.552 104.497 li
389.137 103.581 li
390.378 105.729 li
388.792 106.645 li
390.728 109.999 li
375.191 118.969 li
375.295 119.149 li
366.876 124.01 li
365.303 121.284 li
349.482 130.418 li
351.055 133.144 li
343.437 137.542 li
359.216 110.74 mo
343.394 119.875 li
347.503 126.992 li
363.324 117.857 li
359.216 110.74 li
.0156863 .0941176 .262745 rgb
f
335.268 123.808 mo
333.618 120.95 li
333.798 120.847 li
331.693 117.201 li
334.507 115.577 li
338.262 122.08 li
335.268 123.808 li
.513725 .266667 .317647 rgb
f
375.295 119.149 mo
375.191 118.969 li
390.728 109.999 li
390.832 110.179 li
375.295 119.149 li
1 .34902 .290196 rgb
f
409.931 148.01 mo
408.057 144.764 li
410.605 143.292 li
410.647 143.294 410.689 143.295 410.731 143.295 cv
411.155 143.295 411.585 143.187 411.978 142.96 cv
412.411 142.71 412.74 142.351 412.952 141.937 cv
450.348 120.346 li
452.223 123.593 li
415.279 144.922 li
415.021 144.835 414.749 144.79 414.476 144.79 cv
414.051 144.79 413.622 144.898 413.228 145.125 cv
412.581 145.499 412.164 146.119 412.027 146.799 cv
409.931 148.01 li
.490196 .12549 1 rgb
f
370.099 198.078 mo
361.07 182.437 li
367.106 178.952 li
376.136 194.592 li
370.099 198.078 li
0 .0509804 .160784 rgb
f
361.07 182.437 mo
353.607 169.512 li
359.643 166.027 li
367.106 178.952 li
361.07 182.437 li
.0156863 .0784314 .207843 rgb
f
353.607 169.512 mo
339.756 145.522 li
345.792 142.037 li
359.643 166.027 li
353.607 169.512 li
343.765 144.182 mo
343.557 144.182 343.347 144.235 343.154 144.347 cv
342.568 144.685 342.367 145.434 342.705 146.02 cv
342.932 146.413 343.344 146.632 343.767 146.632 cv
343.975 146.632 344.185 146.579 344.378 146.468 cv
344.964 146.13 345.165 145.381 344.826 144.795 cv
344.6 144.402 344.188 144.182 343.765 144.182 cv
f
335.648 138.405 mo
333.669 134.978 li
339.705 131.493 li
341.684 134.92 li
335.648 138.405 li
329.56 127.862 mo
329.232 127.293 li
335.268 123.808 li
335.596 124.377 li
329.56 127.862 li
.0156863 .0941176 .262745 rgb
f
329.232 127.293 mo
327.582 124.435 li
333.618 120.95 li
335.268 123.808 li
329.232 127.293 li
.513725 .266667 .317647 rgb
f
345.792 142.037 mo
343.257 137.646 li
343.437 137.542 li
345.973 141.933 li
345.792 142.037 li
.0156863 .211765 .384314 rgb
f
343.257 137.646 mo
341.684 134.92 li
341.863 134.816 li
343.437 137.542 li
343.257 137.646 li
.0156863 .227451 .423529 rgb
f
353.59 137.535 mo
351.055 133.144 li
366.876 124.01 li
369.411 128.4 li
353.59 137.535 li
.0156863 .211765 .384314 rgb
f
351.055 133.144 mo
349.482 130.418 li
365.303 121.284 li
366.876 124.01 li
351.055 133.144 li
339.705 131.493 mo
335.596 124.377 li
335.776 124.273 li
339.885 131.39 li
339.705 131.493 li
347.503 126.992 mo
343.394 119.875 li
359.216 110.74 li
363.324 117.857 li
347.503 126.992 li
331.513 117.305 mo
330.52 115.584 li
330.699 115.48 li
331.693 117.201 li
331.513 117.305 li
.0156863 .227451 .423529 rgb
f
333.618 120.95 mo
331.513 117.305 li
331.693 117.201 li
333.798 120.847 li
333.618 120.95 li
.513725 .372549 .470588 rgb
f
341.416 116.449 mo
338.318 111.082 li
354.139 101.947 li
357.237 107.314 li
341.416 116.449 li
.0156863 .227451 .423529 rgb
f
339.756 145.522 mo
337.221 141.131 li
343.257 137.646 li
345.792 142.037 li
339.756 145.522 li
.0156863 .211765 .384314 rgb
f
337.221 141.131 mo
335.648 138.405 li
341.684 134.92 li
343.257 137.646 li
337.221 141.131 li
.0156863 .227451 .423529 rgb
f
333.669 134.978 mo
329.56 127.862 li
335.596 124.377 li
339.705 131.493 li
333.669 134.978 li
f
325.477 120.79 mo
324.484 119.069 li
330.52 115.584 li
331.513 117.305 li
325.477 120.79 li
f
327.582 124.435 mo
325.477 120.79 li
331.513 117.305 li
333.618 120.95 li
327.582 124.435 li
.513725 .372549 .470588 rgb
f
343.767 146.632 mo
343.344 146.632 342.932 146.413 342.705 146.02 cv
342.367 145.434 342.568 144.685 343.154 144.347 cv
343.347 144.235 343.557 144.182 343.765 144.182 cv
344.188 144.182 344.6 144.402 344.826 144.795 cv
345.165 145.381 344.964 146.13 344.378 146.468 cv
344.185 146.579 343.975 146.632 343.767 146.632 cv
.211765 .0941176 .247059 rgb
f
348.539 143.877 mo
348.116 143.877 347.704 143.658 347.478 143.265 cv
347.14 142.679 347.34 141.93 347.926 141.592 cv
348.119 141.481 348.329 141.428 348.537 141.428 cv
348.96 141.428 349.372 141.647 349.599 142.04 cv
349.937 142.626 349.736 143.375 349.15 143.713 cv
348.957 143.824 348.747 143.877 348.539 143.877 cv
353.312 141.122 mo
352.888 141.122 352.476 140.902 352.249 140.51 cv
351.911 139.924 352.112 139.175 352.698 138.837 cv
352.891 138.726 353.101 138.673 353.309 138.673 cv
353.732 138.673 354.143 138.892 354.37 139.285 cv
354.709 139.871 354.508 140.619 353.922 140.958 cv
353.729 141.069 353.519 141.122 353.312 141.122 cv
f
423.298 167.363 mo
423.044 166.313 423.496 165.179 424.478 164.611 cv
424.872 164.384 425.302 164.276 425.727 164.276 cv
426.361 164.276 426.984 164.518 427.453 164.965 cv
423.298 167.363 li
421.981 162.781 mo
421.117 162.781 420.276 162.333 419.814 161.53 cv
419.123 160.335 419.533 158.806 420.729 158.115 cv
421.122 157.888 421.552 157.78 421.976 157.78 cv
422.84 157.78 423.68 158.228 424.144 159.03 cv
424.834 160.226 424.424 161.755 423.229 162.445 cv
422.835 162.673 422.405 162.781 421.981 162.781 cv
418.231 156.286 mo
417.367 156.286 416.527 155.837 416.064 155.035 cv
415.373 153.84 415.783 152.31 416.979 151.62 cv
417.372 151.393 417.802 151.285 418.226 151.285 cv
419.09 151.285 419.93 151.733 420.394 152.535 cv
421.084 153.731 420.674 155.26 419.479 155.95 cv
419.085 156.178 418.655 156.286 418.231 156.286 cv
.00392157 .0509804 .286274 rgb
f
414.481 149.791 mo
413.617 149.79 412.776 149.342 412.313 148.54 cv
411.997 147.992 411.912 147.374 412.027 146.799 cv
415.279 144.922 li
415.835 145.11 416.327 145.492 416.644 146.04 cv
417.334 147.235 416.924 148.765 415.729 149.455 cv
415.335 149.682 414.905 149.791 414.481 149.791 cv
.0196078 .0784314 .32549 rgb
f
412.027 146.799 mo
412.164 146.119 412.581 145.499 413.228 145.125 cv
413.622 144.898 414.051 144.79 414.476 144.79 cv
414.749 144.79 415.021 144.835 415.279 144.922 cv
412.027 146.799 li
.490196 .12549 1 rgb
f
410.605 143.292 mo
409.786 143.251 409.004 142.808 408.563 142.045 cv
407.873 140.85 408.283 139.32 409.478 138.63 cv
409.872 138.402 410.302 138.294 410.726 138.294 cv
411.59 138.294 412.431 138.743 412.894 139.545 cv
413.334 140.308 413.326 141.207 412.952 141.937 cv
410.605 143.292 li
.0196078 .0784314 .32549 rgb
f
410.731 143.295 mo
410.689 143.295 410.647 143.294 410.605 143.292 cv
412.952 141.937 li
412.74 142.351 412.411 142.71 411.978 142.96 cv
411.585 143.187 411.155 143.295 410.731 143.295 cv
.490196 .12549 1 rgb
f
406.981 136.8 mo
406.117 136.8 405.277 136.352 404.813 135.55 cv
404.123 134.354 404.533 132.825 405.728 132.135 cv
406.122 131.907 406.552 131.799 406.976 131.799 cv
407.84 131.799 408.68 132.248 409.143 133.05 cv
409.834 134.246 409.424 135.774 408.228 136.465 cv
407.835 136.692 407.405 136.8 406.981 136.8 cv
403.231 130.305 mo
402.367 130.305 401.527 129.857 401.064 129.055 cv
400.373 127.859 400.783 126.33 401.979 125.64 cv
402.372 125.412 402.802 125.304 403.226 125.304 cv
404.09 125.304 404.93 125.753 405.393 126.555 cv
406.084 127.75 405.674 129.279 404.478 129.97 cv
404.085 130.197 403.655 130.305 403.231 130.305 cv
.0196078 .0784314 .32549 rgb
f
399.002 124.33 mo
398.835 124.041 li
404.194 120.947 li
404.36 121.236 li
399.002 124.33 li
406.939 119.747 mo
406.773 119.458 li
412.131 116.365 li
412.298 116.653 li
406.939 119.747 li
395.186 117.719 mo
392.608 113.256 li
397.967 110.163 li
400.543 114.625 li
395.186 117.719 li
414.878 115.164 mo
412.302 110.701 li
417.659 107.607 li
420.236 112.07 li
414.878 115.164 li
403.123 113.136 mo
400.547 108.673 li
405.904 105.58 li
408.481 110.042 li
403.123 113.136 li
392.314 109.083 mo
390.378 105.729 li
394.15 103.551 li
396.087 106.905 li
392.314 109.083 li
.0156863 .101961 .247059 rgb
f
391.368 111.107 mo
390.832 110.179 li
392.418 109.263 li
392.314 109.083 li
396.087 106.905 li
396.727 108.014 li
391.368 111.107 li
1 .356863 .278431 rgb
f
390.728 109.999 mo
388.792 106.645 li
390.378 105.729 li
392.314 109.083 li
390.728 109.999 li
.0156863 .121569 .298039 rgb
f
390.832 110.179 mo
390.728 109.999 li
392.314 109.083 li
392.418 109.263 li
390.832 110.179 li
1 .364706 .32549 rgb
f
411.06 108.553 mo
408.484 104.09 li
413.843 100.997 li
416.419 105.459 li
411.06 108.553 li
398.666 105.416 mo
396.73 102.062 li
402.088 98.9683 li
404.024 102.322 li
398.666 105.416 li
.0156863 .101961 .247059 rgb
f
399.306 106.524 mo
398.666 105.416 li
404.024 102.322 li
404.664 103.431 li
399.306 106.524 li
1 .356863 .278431 rgb
f
389.137 103.581 mo
386.561 99.1181 li
390.333 96.9405 li
392.909 101.403 li
389.137 103.581 li
.0156863 .101961 .247059 rgb
f
387.552 104.497 mo
384.975 100.034 li
386.561 99.1181 li
389.137 103.581 li
387.552 104.497 li
.0156863 .121569 .298039 rgb
f
406.604 100.833 mo
404.668 97.479 li
410.025 94.3857 li
411.962 97.7393 li
406.604 100.833 li
.0156863 .101961 .247059 rgb
f
407.244 101.941 mo
406.604 100.833 li
411.962 97.7393 li
412.603 98.8481 li
407.244 101.941 li
1 .356863 .278431 rgb
f
395.489 99.9136 mo
392.913 95.4506 li
398.271 92.3575 li
400.848 96.8198 li
395.489 99.9136 li
385.32 96.9696 mo
382.744 92.507 li
386.516 90.3291 li
389.093 94.7915 li
385.32 96.9696 li
.0156863 .101961 .247059 rgb
f
383.734 97.8852 mo
381.158 93.4224 li
382.744 92.507 li
385.32 96.9696 li
383.734 97.8852 li
.0156863 .121569 .298039 rgb
f
403.427 95.3306 mo
400.851 90.8681 li
406.209 87.7744 li
408.785 92.2367 li
403.427 95.3306 li
391.672 93.3022 mo
389.096 88.8399 li
394.454 85.7461 li
397.03 90.2085 li
391.672 93.3022 li
399.61 88.7192 mo
397.033 84.2569 li
402.392 81.1631 li
404.968 85.6255 li
399.61 88.7192 li
.0156863 .101961 .247059 rgb
f
382.619 133.403 mo
379.384 127.799 li
409.071 110.659 li
412.307 116.263 li
412.131 116.365 li
409.722 112.19 li
404.363 115.284 li
406.773 119.458 li
404.194 120.947 li
401.783 116.773 li
396.426 119.867 li
398.835 124.041 li
382.619 133.403 li
.0627451 .235294 .356863 rgb
f
398.835 124.041 mo
396.426 119.867 li
401.783 116.773 li
404.194 120.947 li
398.835 124.041 li
406.773 119.458 mo
404.363 115.284 li
409.722 112.19 li
412.131 116.365 li
406.773 119.458 li
.0627451 .258824 .392157 rgb
f
389.39 227.172 mo
389.062 226.604 li
393.229 224.198 li
388.324 215.703 li
408.149 204.257 li
404.314 197.616 li
384.489 209.062 li
379.812 200.96 li
381.482 199.995 li
378.615 195.029 li
424.168 168.729 li
424.613 169.085 425.167 169.276 425.731 169.276 cv
426.155 169.276 426.585 169.168 426.978 168.94 cv
427.895 168.412 428.35 167.389 428.201 166.401 cv
478.958 137.096 li
480 138.9 li
480 174.858 li
389.39 227.172 li
462.189 176.255 mo
461.981 176.255 461.77 176.308 461.577 176.419 cv
460.991 176.757 460.791 177.506 461.129 178.092 cv
461.356 178.485 461.767 178.704 462.19 178.704 cv
462.398 178.704 462.609 178.651 462.802 178.54 cv
463.388 178.201 463.588 177.453 463.25 176.867 cv
463.023 176.474 462.612 176.255 462.189 176.255 cv
466.96 173.499 mo
466.753 173.499 466.542 173.552 466.35 173.664 cv
465.764 174.002 465.563 174.751 465.901 175.336 cv
466.128 175.729 466.539 175.949 466.963 175.949 cv
467.17 175.949 467.381 175.896 467.574 175.784 cv
468.159 175.446 468.36 174.697 468.021 174.112 cv
467.795 173.719 467.383 173.499 466.96 173.499 cv
471.732 170.744 mo
471.524 170.744 471.314 170.797 471.121 170.908 cv
470.535 171.247 470.335 171.995 470.673 172.581 cv
470.899 172.974 471.311 173.194 471.734 173.194 cv
471.942 173.194 472.153 173.141 472.346 173.029 cv
472.932 172.691 473.132 171.942 472.794 171.356 cv
472.567 170.964 472.155 170.744 471.732 170.744 cv
476.504 167.989 mo
476.297 167.989 476.086 168.042 475.894 168.153 cv
475.308 168.492 475.106 169.24 475.445 169.826 cv
475.672 170.219 476.083 170.439 476.507 170.439 cv
476.715 170.439 476.925 170.386 477.118 170.274 cv
477.703 169.937 477.904 169.188 477.565 168.601 cv
477.339 168.209 476.927 167.989 476.504 167.989 cv
0 .0235294 .0823529 rgb
f
389.062 226.604 mo
384.158 218.108 li
388.324 215.703 li
393.229 224.198 li
389.062 226.604 li
370.277 225.114 mo
362.201 211.127 li
379.812 200.96 li
384.489 209.062 li
371.91 216.324 li
375.307 222.209 li
370.277 225.114 li
f
425.731 169.276 mo
425.167 169.276 424.613 169.085 424.168 168.729 cv
428.201 166.401 li
428.35 167.389 427.895 168.412 426.978 168.94 cv
426.585 169.168 426.155 169.276 425.731 169.276 cv
.00392157 .0235294 .215686 rgb
f
462.19 178.704 mo
461.767 178.704 461.356 178.485 461.129 178.092 cv
460.791 177.506 460.991 176.757 461.577 176.419 cv
461.77 176.308 461.981 176.255 462.189 176.255 cv
462.612 176.255 463.023 176.474 463.25 176.867 cv
463.588 177.453 463.388 178.201 462.802 178.54 cv
462.609 178.651 462.398 178.704 462.19 178.704 cv
466.963 175.949 mo
466.539 175.949 466.128 175.729 465.901 175.336 cv
465.563 174.751 465.764 174.002 466.35 173.664 cv
466.542 173.552 466.753 173.499 466.96 173.499 cv
467.383 173.499 467.795 173.719 468.021 174.112 cv
468.36 174.697 468.159 175.446 467.574 175.784 cv
467.381 175.896 467.17 175.949 466.963 175.949 cv
471.734 173.194 mo
471.311 173.194 470.899 172.974 470.673 172.581 cv
470.335 171.995 470.535 171.247 471.121 170.908 cv
471.314 170.797 471.524 170.744 471.732 170.744 cv
472.155 170.744 472.567 170.964 472.794 171.356 cv
473.132 171.942 472.932 172.691 472.346 173.029 cv
472.153 173.141 471.942 173.194 471.734 173.194 cv
476.507 170.439 mo
476.083 170.439 475.672 170.219 475.445 169.826 cv
475.106 169.24 475.308 168.492 475.894 168.153 cv
476.086 168.042 476.297 167.989 476.504 167.989 cv
476.927 167.989 477.339 168.209 477.565 168.601 cv
477.904 169.188 477.703 169.937 477.118 170.274 cv
476.925 170.386 476.715 170.439 476.507 170.439 cv
.380392 .0235294 .203922 rgb
f
358.966 205.522 mo
358.525 204.76 li
370.099 198.078 li
370.54 198.84 li
358.966 205.522 li
0 .0235294 .0823529 rgb
f
379.812 200.96 mo
376.945 195.994 li
378.615 195.029 li
381.482 199.995 li
379.812 200.96 li
.937255 .254902 .0823529 rgb
f
362.201 211.127 mo
358.966 205.522 li
370.54 198.84 li
370.908 199.479 li
376.945 195.994 li
379.812 200.96 li
362.201 211.127 li
f
376.576 195.355 mo
376.136 194.592 li
423.298 167.363 li
423.353 167.59 423.441 167.813 423.563 168.025 cv
423.724 168.304 423.931 168.54 424.168 168.729 cv
378.615 195.029 li
378.247 194.391 li
376.576 195.355 li
0 .0509804 .160784 rgb
f
370.54 198.84 mo
370.099 198.078 li
376.136 194.592 li
376.576 195.355 li
370.54 198.84 li
f
428.201 166.401 mo
428.155 166.101 428.054 165.804 427.893 165.525 cv
427.771 165.313 427.622 165.126 427.453 164.965 cv
478.149 135.695 li
478.958 137.096 li
428.201 166.401 li
f
424.168 168.729 mo
423.931 168.54 423.724 168.304 423.563 168.025 cv
423.441 167.813 423.353 167.59 423.298 167.363 cv
427.453 164.965 li
427.622 165.126 427.771 165.313 427.893 165.525 cv
428.054 165.804 428.155 166.101 428.201 166.401 cv
424.168 168.729 li
.00392157 .0509804 .286274 rgb
f
376.945 195.994 mo
376.576 195.355 li
378.247 194.391 li
378.615 195.029 li
376.945 195.994 li
.937255 .27451 .160784 rgb
f
370.908 199.479 mo
370.54 198.84 li
376.576 195.355 li
376.945 195.994 li
370.908 199.479 li
f
121.512 270 mo
116.825 270 li
119.894 268.229 li
119.191 267.011 li
119.637 266.753 li
121.512 270 li
0 .0235294 .0823529 rgb
f
115.177 270 mo
114.013 270 li
114.886 269.496 li
115.177 270 li
f
114.013 270 mo
75.9654 270 li
73.27 265.331 li
86.2646 257.829 li
87.1562 259.373 li
103.57 249.897 li
106.244 254.527 li
110.549 252.042 li
107.875 247.411 li
108.321 247.154 li
119.637 266.753 li
119.191 267.011 li
116.74 262.766 li
112.435 265.251 li
114.886 269.496 li
114.013 270 li
112.067 254.673 mo
107.762 257.158 li
110.917 262.621 li
115.221 260.136 li
112.067 254.673 li
0 .0431373 .137255 rgb
f
87.1562 259.373 mo
86.2646 257.829 li
90.9326 255.134 li
90.4025 254.215 li
108.385 243.833 li
108.819 244.585 li
120.255 237.983 li
120.329 238.11 li
107.407 245.57 li
108.321 247.154 li
107.875 247.411 li
107.395 246.579 li
103.09 249.064 li
103.57 249.897 li
87.1562 259.373 li
0 .0627451 .196078 rgb
f
116.825 270 mo
115.177 270 li
114.886 269.496 li
119.191 267.011 li
119.894 268.229 li
116.825 270 li
.00392157 .0313725 .0862745 rgb
f
114.886 269.496 mo
112.435 265.251 li
116.74 262.766 li
119.191 267.011 li
114.886 269.496 li
.00392157 .0509804 .145098 rgb
f
110.917 262.621 mo
107.762 257.158 li
112.067 254.673 li
115.221 260.136 li
110.917 262.621 li
106.244 254.527 mo
103.57 249.897 li
107.875 247.411 li
110.549 252.042 li
106.244 254.527 li
f
103.57 249.897 mo
103.09 249.064 li
107.395 246.579 li
107.875 247.411 li
103.57 249.897 li
.00392157 .0705882 .203922 rgb
f
108.819 244.585 mo
108.385 243.833 li
119.821 237.231 li
120.255 237.983 li
108.819 244.585 li
0 .219608 .352941 rgb
f
129.094 232.625 mo
128.77 232.064 li
128.793 232.05 li
129.117 232.612 li
129.094 232.625 li
1 .592157 .52549 rgb
f
129.117 232.612 mo
128.793 232.05 li
131.615 230.421 li
131.939 230.983 li
129.117 232.612 li
1 .6 .552941 rgb
f
132.123 231.301 mo
132.049 231.174 li
132.671 230.814 li
132.561 230.624 li
132.937 230.407 li
132.613 229.845 li
133.134 229.544 li
133.642 230.424 li
132.123 231.301 li
.0156863 .0901961 .247059 rgb
f
132.049 231.174 mo
131.939 230.983 li
132.561 230.624 li
132.671 230.814 li
132.049 231.174 li
.0156863 .243137 .392157 rgb
f
133.642 230.424 mo
133.134 229.544 li
142.316 224.243 li
142.824 225.122 li
133.642 230.424 li
.0156863 .109804 .298039 rgb
f
142.824 225.122 mo
142.316 224.243 li
151.937 218.688 li
152.445 219.568 li
142.824 225.122 li
f
132.561 230.624 mo
132.237 230.062 li
132.613 229.845 li
132.937 230.407 li
132.561 230.624 li
1 .537255 .482353 rgb
f
131.939 230.983 mo
131.615 230.421 li
132.237 230.062 li
132.561 230.624 li
131.939 230.983 li
1 .607843 .584314 rgb
f
150.704 270 mo
138.74 270 li
132.559 259.293 li
141.531 254.113 li
150.704 270 li
0 .00392157 .0156863 rgb
f
132.559 259.293 mo
121.243 239.693 li
130.215 234.513 li
141.531 254.113 li
132.559 259.293 li
0 .0235294 .0784314 rgb
f
121.243 239.693 mo
120.329 238.11 li
129.301 232.93 li
130.215 234.513 li
121.243 239.693 li
0 .0431373 .137255 rgb
f
154.466 270 mo
150.704 270 li
141.531 254.113 li
144.353 252.484 li
154.466 270 li
.0156863 .0313725 .0705882 rgb
f
141.531 254.113 mo
130.215 234.513 li
133.037 232.884 li
144.353 252.484 li
141.531 254.113 li
.0156863 .0509804 .129412 rgb
f
130.215 234.513 mo
129.301 232.93 li
132.123 231.301 li
133.037 232.884 li
130.215 234.513 li
.0156863 .0705882 .188235 rgb
f
193.798 267.304 mo
188.846 258.726 li
206.617 248.465 li
208.056 250.957 li
204.156 253.208 li
207.67 259.295 li
193.798 267.304 li
.0156863 .0509804 .129412 rgb
f
188.846 258.726 mo
187.704 256.747 li
205.475 246.487 li
206.617 248.465 li
188.846 258.726 li
f
187.704 256.747 mo
175.02 234.778 li
192.791 224.518 li
205.475 246.487 li
187.704 256.747 li
f
175.02 234.778 mo
163.704 215.178 li
181.475 204.918 li
192.791 224.518 li
175.02 234.778 li
180.448 208.054 mo
170.074 214.043 li
171.477 216.474 li
181.851 210.483 li
180.448 208.054 li
.0156863 .0705882 .188235 rgb
f
163.704 215.178 mo
162.79 213.595 li
180.561 203.335 li
181.475 204.918 li
163.704 215.178 li
.0156863 .0901961 .243137 rgb
f
189.128 270 mo
181.562 270 li
178.501 264.698 li
188.846 258.726 li
193.798 267.304 li
189.128 270 li
.0156863 .0509804 .129412 rgb
f
178.501 264.698 mo
177.359 262.72 li
187.704 256.747 li
188.846 258.726 li
178.501 264.698 li
f
177.359 262.72 mo
164.675 240.75 li
175.02 234.778 li
187.704 256.747 li
177.359 262.72 li
f
164.675 240.75 mo
153.359 221.151 li
163.704 215.178 li
175.02 234.778 li
164.675 240.75 li
.0156863 .0705882 .188235 rgb
f
153.359 221.151 mo
152.445 219.568 li
162.79 213.595 li
163.704 215.178 li
153.359 221.151 li
.0156863 .0901961 .243137 rgb
f
138.74 270 mo
135.515 270 li
137.322 268.957 li
134.167 263.494 li
129.863 265.979 li
132.184 270 li
129.42 270 li
127.79 267.177 li
123.485 269.662 li
123.68 270 li
121.512 270 li
119.637 266.753 li
121.264 265.814 li
121.966 267.031 li
126.271 264.546 li
125.569 263.329 li
127.641 262.132 li
128.344 263.35 li
132.649 260.864 li
131.946 259.647 li
132.559 259.293 li
138.74 270 li
0 .0235294 .0823529 rgb
f
119.637 266.753 mo
108.321 247.154 li
109.947 246.215 li
112.621 250.846 li
116.926 248.36 li
114.253 243.729 li
116.326 242.532 li
118.999 247.163 li
123.304 244.678 li
120.63 240.047 li
121.243 239.693 li
132.559 259.293 li
131.946 259.647 li
129.495 255.401 li
125.19 257.887 li
127.641 262.132 li
125.569 263.329 li
123.117 259.083 li
118.813 261.568 li
121.264 265.814 li
119.637 266.753 li
118.445 250.99 mo
114.14 253.476 li
117.294 258.939 li
121.599 256.453 li
118.445 250.99 li
124.823 247.309 mo
120.518 249.794 li
123.672 255.257 li
127.977 252.771 li
124.823 247.309 li
0 .0431373 .137255 rgb
f
108.321 247.154 mo
107.407 245.57 li
120.329 238.11 li
121.243 239.693 li
120.63 240.047 li
120.15 239.215 li
115.845 241.7 li
116.326 242.532 li
114.253 243.729 li
113.772 242.897 li
109.467 245.383 li
109.947 246.215 li
108.321 247.154 li
0 .0627451 .196078 rgb
f
135.515 270 mo
132.184 270 li
129.863 265.979 li
134.167 263.494 li
137.322 268.957 li
135.515 270 li
.00392157 .0313725 .0862745 rgb
f
129.42 270 mo
123.68 270 li
123.485 269.662 li
127.79 267.177 li
129.42 270 li
f
121.966 267.031 mo
121.264 265.814 li
125.569 263.329 li
126.271 264.546 li
121.966 267.031 li
f
121.264 265.814 mo
118.813 261.568 li
123.117 259.083 li
125.569 263.329 li
121.264 265.814 li
.00392157 .0509804 .145098 rgb
f
128.344 263.35 mo
127.641 262.132 li
131.946 259.647 li
132.649 260.864 li
128.344 263.35 li
.00392157 .0313725 .0862745 rgb
f
127.641 262.132 mo
125.19 257.887 li
129.495 255.401 li
131.946 259.647 li
127.641 262.132 li
117.294 258.939 mo
114.14 253.476 li
118.445 250.99 li
121.599 256.453 li
117.294 258.939 li
123.672 255.257 mo
120.518 249.794 li
124.823 247.309 li
127.977 252.771 li
123.672 255.257 li
112.621 250.846 mo
109.947 246.215 li
114.253 243.729 li
116.926 248.36 li
112.621 250.846 li
.00392157 .0509804 .145098 rgb
f
109.947 246.215 mo
109.467 245.383 li
113.772 242.897 li
114.253 243.729 li
109.947 246.215 li
.00392157 .0705882 .203922 rgb
f
118.999 247.163 mo
116.326 242.532 li
120.63 240.047 li
123.304 244.678 li
118.999 247.163 li
.00392157 .0509804 .145098 rgb
f
116.326 242.532 mo
115.845 241.7 li
120.15 239.215 li
120.63 240.047 li
116.326 242.532 li
.00392157 .0705882 .203922 rgb
f
155.51 270 mo
154.466 270 li
144.353 252.484 li
145.872 251.606 li
151.833 261.931 li
150.578 262.655 li
152.067 265.235 li
153.322 264.511 li
154.039 265.753 li
152.784 266.478 li
154.274 269.058 li
155.529 268.333 li
156.246 269.575 li
155.51 270 li
.0156863 .0509804 .133333 rgb
f
144.353 252.484 mo
133.037 232.884 li
134.556 232.007 li
145.872 251.606 li
144.353 252.484 li
.0156863 .0705882 .192157 rgb
f
133.037 232.884 mo
132.123 231.301 li
133.642 230.424 li
134.556 232.007 li
133.037 232.884 li
.0156863 .0901961 .247059 rgb
f
181.562 270 mo
169.318 270 li
178.501 264.698 li
181.562 270 li
.0156863 .0705882 .192157 rgb
f
169.318 270 mo
168.009 270 li
167.091 268.409 li
164.595 269.85 li
164.681 270 li
161.468 270 li
162.675 269.303 li
161.186 266.723 li
158.689 268.164 li
159.75 270 li
158.147 270 li
157.487 268.858 li
156.246 269.575 li
155.529 268.333 li
156.771 267.616 li
155.281 265.036 li
154.039 265.753 li
153.322 264.511 li
154.563 263.794 li
153.074 261.214 li
151.833 261.931 li
145.872 251.606 li
155.054 246.305 li
167.738 268.274 li
177.359 262.72 li
178.501 264.698 li
169.318 270 li
164.885 264.587 mo
162.388 266.028 li
163.877 268.608 li
166.374 267.167 li
164.885 264.587 li
158.979 262.9 mo
156.483 264.342 li
157.972 266.922 li
160.469 265.48 li
158.979 262.9 li
162.678 260.766 mo
160.182 262.207 li
161.671 264.786 li
164.168 263.345 li
162.678 260.766 li
156.772 259.078 mo
154.276 260.52 li
155.766 263.1 li
158.262 261.658 li
156.772 259.078 li
160.471 256.943 mo
157.975 258.385 li
159.464 260.965 li
161.961 259.523 li
160.471 256.943 li
f
167.738 268.274 mo
155.054 246.305 li
164.675 240.75 li
177.359 262.72 li
167.738 268.274 li
f
145.872 251.606 mo
134.556 232.007 li
143.738 226.706 li
155.054 246.305 li
145.872 251.606 li
.0156863 .0901961 .247059 rgb
f
155.054 246.305 mo
143.738 226.706 li
153.359 221.151 li
164.675 240.75 li
155.054 246.305 li
f
134.556 232.007 mo
133.642 230.424 li
142.824 225.122 li
143.738 226.706 li
134.556 232.007 li
.0156863 .109804 .298039 rgb
f
143.738 226.706 mo
142.824 225.122 li
152.445 219.568 li
153.359 221.151 li
143.738 226.706 li
f
156.491 270 mo
155.51 270 li
156.246 269.575 li
156.491 270 li
.0862745 .215686 .32549 rgb
f
168.009 270 mo
164.681 270 li
164.595 269.85 li
167.091 268.409 li
168.009 270 li
.0862745 .231373 .368627 rgb
f
158.147 270 mo
156.491 270 li
156.246 269.575 li
157.487 268.858 li
158.147 270 li
f
161.468 270 mo
159.75 270 li
158.689 268.164 li
161.186 266.723 li
162.675 269.303 li
161.468 270 li
f
154.274 269.058 mo
152.784 266.478 li
154.039 265.753 li
155.529 268.333 li
154.274 269.058 li
.0862745 .215686 .32549 rgb
f
163.877 268.608 mo
162.388 266.028 li
164.885 264.587 li
166.374 267.167 li
163.877 268.608 li
155.529 268.333 mo
154.039 265.753 li
155.281 265.036 li
156.771 267.616 li
155.529 268.333 li
157.972 266.922 mo
156.483 264.342 li
158.979 262.9 li
160.469 265.48 li
157.972 266.922 li
.0862745 .231373 .368627 rgb
f
152.067 265.235 mo
150.578 262.655 li
151.833 261.931 li
153.322 264.511 li
152.067 265.235 li
.0862745 .215686 .32549 rgb
f
161.671 264.786 mo
160.182 262.207 li
162.678 260.766 li
164.168 263.345 li
161.671 264.786 li
153.322 264.511 mo
151.833 261.931 li
153.074 261.214 li
154.563 263.794 li
153.322 264.511 li
155.766 263.1 mo
154.276 260.52 li
156.772 259.078 li
158.262 261.658 li
155.766 263.1 li
159.464 260.965 mo
157.975 258.385 li
160.471 256.943 li
161.961 259.523 li
159.464 260.965 li
.0862745 .231373 .368627 rgb
f
171.477 216.474 mo
170.074 214.043 li
180.448 208.054 li
181.851 210.483 li
171.477 216.474 li
.556863 .317647 .905882 rgb
f
256.148 270 mo
253.758 270 li
255.551 268.965 li
256.148 270 li
.0666667 .188235 .282353 rgb
f
246.621 270 mo
239.776 270 li
237.783 266.547 li
250.061 259.458 li
253.767 265.875 li
246.621 270 li
f
267.859 270 mo
264.031 270 li
261.463 265.552 li
273.741 258.463 li
277.266 264.568 li
267.859 270 li
285.169 264.603 mo
285.143 264.557 li
295.726 258.447 li
295.752 258.493 li
285.169 264.603 li
f
295.752 258.493 mo
295.726 258.447 li
297.422 257.468 li
297.449 257.514 li
295.752 258.493 li
f
259.679 262.462 mo
255.974 256.045 li
268.252 248.955 li
271.957 255.372 li
259.679 262.462 li
283.358 261.467 mo
279.653 255.05 li
290.237 248.939 li
293.942 255.357 li
283.358 261.467 li
f
293.942 255.357 mo
290.237 248.939 li
291.933 247.96 li
295.638 254.378 li
293.942 255.357 li
f
232.533 257.455 mo
232.293 257.04 li
244.572 249.95 li
244.812 250.366 li
232.533 257.455 li
277.869 251.959 mo
274.164 245.542 li
284.747 239.432 li
288.452 245.849 li
277.869 251.959 li
f
288.452 245.849 mo
284.747 239.432 li
286.443 238.453 li
290.148 244.87 li
288.452 245.849 li
f
250.724 246.952 mo
250.484 246.537 li
262.764 239.448 li
263.003 239.863 li
250.724 246.952 li
272.381 242.452 mo
268.676 236.035 li
279.258 229.925 li
282.964 236.342 li
272.381 242.452 li
f
282.964 236.342 mo
279.258 229.925 li
280.954 228.945 li
284.659 235.363 li
282.964 236.342 li
f
230.123 269.593 mo
225.47 261.533 li
232.533 257.455 li
235.999 263.457 li
248.277 256.368 li
244.812 250.366 li
250.724 246.952 li
254.189 252.955 li
266.469 245.865 li
263.003 239.863 li
263.405 239.631 li
268.059 247.69 li
230.123 269.593 li
.439216 .917647 1 rgb
f
235.999 263.457 mo
232.533 257.455 li
244.812 250.366 li
248.277 256.368 li
235.999 263.457 li
254.189 252.955 mo
250.724 246.952 li
263.003 239.863 li
266.469 245.865 li
254.189 252.955 li
.478431 .933333 1 rgb
f
73.27 265.331 mo
72.7398 264.413 li
85.7344 256.911 li
86.2646 257.829 li
73.27 265.331 li
.286274 .188235 .227451 rgb
f
86.2646 257.829 mo
85.7344 256.911 li
90.4025 254.215 li
90.9326 255.134 li
86.2646 257.829 li
.286274 .203922 .278431 rgb
f
210.805 270 mo
209.406 270 li
212.74 268.075 li
213.089 268.681 li
210.805 270 li
0 .0431373 .145098 rgb
f
209.406 270 mo
195.355 270 li
193.798 267.304 li
207.67 259.295 li
212.74 268.075 li
209.406 270 li
.0156863 .0705882 .188235 rgb
f
195.355 270 mo
189.128 270 li
193.798 267.304 li
195.355 270 li
f
213.851 270 mo
210.805 270 li
213.089 268.681 li
213.851 270 li
.439216 .917647 1 rgb
f
388.324 215.703 mo
384.489 209.062 li
404.314 197.616 li
408.149 204.257 li
388.324 215.703 li
.611765 .172549 .0823529 rgb
f
375.307 222.209 mo
371.91 216.324 li
384.489 209.062 li
388.324 215.703 li
384.158 218.108 li
383.721 217.352 li
375.307 222.209 li
f
366.502 240.386 mo
366.174 239.818 li
375.618 234.366 li
375.946 234.933 li
366.502 240.386 li
0 .0235294 .0823529 rgb
f
366.174 239.818 mo
360.833 230.566 li
370.277 225.114 li
375.618 234.366 li
366.174 239.818 li
f
375.946 234.933 mo
375.618 234.366 li
389.062 226.604 li
389.39 227.172 li
375.946 234.933 li
f
375.618 234.366 mo
370.277 225.114 li
375.307 222.209 li
375.744 222.966 li
384.158 218.108 li
389.062 226.604 li
375.618 234.366 li
f
375.744 222.966 mo
375.307 222.209 li
383.721 217.352 li
384.158 218.108 li
375.744 222.966 li
.611765 .172549 .0823529 rgb
f
230.358 270 mo
229.417 270 li
230.123 269.593 li
230.358 270 li
223.106 262.898 mo
222.756 262.292 li
225.12 260.928 li
225.47 261.533 li
223.106 262.898 li
0 .0235294 .0823529 rgb
f
222.756 262.292 mo
217.687 253.512 li
211.57 257.043 li
208.056 250.957 li
216.537 246.061 li
225.12 260.928 li
222.756 262.292 li
.0156863 .0509804 .129412 rgb
f
207.67 259.295 mo
204.156 253.208 li
208.056 250.957 li
211.57 257.043 li
207.67 259.295 li
f
229.417 270 mo
227.206 270 li
223.106 262.898 li
225.47 261.533 li
230.123 269.593 li
229.417 270 li
.439216 .917647 1 rgb
f
216.989 266.429 mo
216.639 265.824 li
222.756 262.292 li
223.106 262.898 li
216.989 266.429 li
0 .0431373 .145098 rgb
f
216.639 265.824 mo
211.57 257.043 li
217.687 253.512 li
222.756 262.292 li
216.639 265.824 li
.0156863 .0705882 .188235 rgb
f
213.089 268.681 mo
212.74 268.075 li
213.1 267.867 li
213.441 268.458 li
215.197 267.444 li
214.856 266.854 li
216.639 265.824 li
216.989 266.429 li
213.089 268.681 li
0 .0431373 .145098 rgb
f
212.74 268.075 mo
207.67 259.295 li
211.57 257.043 li
216.639 265.824 li
214.856 266.854 li
211.534 261.1 li
209.778 262.113 li
213.1 267.867 li
212.74 268.075 li
.0156863 .0705882 .188235 rgb
f
227.206 270 mo
219.05 270 li
216.989 266.429 li
223.106 262.898 li
227.206 270 li
.439216 .917647 1 rgb
f
219.05 270 mo
213.851 270 li
213.089 268.681 li
216.989 266.429 li
219.05 270 li
f
213.441 268.458 mo
213.1 267.867 li
214.856 266.854 li
215.197 267.444 li
213.441 268.458 li
.545098 .203922 1 rgb
f
213.1 267.867 mo
209.778 262.113 li
211.534 261.1 li
214.856 266.854 li
213.1 267.867 li
.552941 .227451 1 rgb
f
275.714 270 mo
268.579 270 li
277.446 264.88 li
277.266 264.568 li
277.279 264.561 li
279.27 268.009 li
279.257 268.016 li
279.23 267.97 li
275.714 270 li
1 .266667 .0823529 rgb
f
275.822 270 mo
275.714 270 li
279.23 267.97 li
279.257 268.016 li
275.822 270 li
1 .392157 .282353 rgb
f
268.579 270 mo
267.859 270 li
277.266 264.568 li
277.446 264.88 li
268.579 270 li
f
292.532 270 mo
290.534 270 li
299.431 264.864 li
299.93 265.729 li
292.532 270 li
0 .0431373 .145098 rgb
f
288.285 270 mo
280.402 270 li
279.514 268.46 li
279.526 268.453 li
279.27 268.009 li
285.169 264.603 li
288.285 270 li
f
299.93 265.729 mo
299.431 264.864 li
301.127 263.885 li
297.449 257.514 li
356.655 223.331 li
360.833 230.566 li
299.93 265.729 li
f
280.402 270 mo
276.847 270 li
279.514 268.46 li
280.402 270 li
.0666667 .203922 .329412 rgb
f
290.534 270 mo
288.285 270 li
285.169 264.603 li
295.752 258.493 li
299.431 264.864 li
290.534 270 li
f
299.431 264.864 mo
295.752 258.493 li
297.449 257.514 li
301.127 263.885 li
299.431 264.864 li
f
315.209 270 mo
313.898 270 li
366.174 239.818 li
366.502 240.386 li
315.209 270 li
0 .0431373 .145098 rgb
f
297.671 270 mo
292.532 270 li
299.93 265.729 li
301.215 267.954 li
297.671 270 li
f
313.898 270 mo
304.657 270 li
302.91 266.975 li
301.215 267.954 li
299.93 265.729 li
360.833 230.566 li
366.174 239.818 li
313.898 270 li
f
302.396 270 mo
297.671 270 li
301.215 267.954 li
302.396 270 li
.0666667 .203922 .329412 rgb
f
304.657 270 mo
302.396 270 li
301.215 267.954 li
302.91 266.975 li
304.657 270 li
f
279.514 268.46 mo
279.257 268.016 li
279.27 268.009 li
279.526 268.453 li
279.514 268.46 li
1 .282353 .145098 rgb
f
276.847 270 mo
275.822 270 li
279.257 268.016 li
279.514 268.46 li
276.847 270 li
1 .403922 .329412 rgb
f
480 270 mo
465.074 270 li
453.083 249.231 li
417.109 270 li
414.657 270 li
414.452 269.912 414.235 269.853 414.014 269.822 cv
402.671 250.175 li
477.533 206.953 li
469.77 193.506 li
394.907 236.728 li
391.805 231.354 li
480 180.434 li
480 258.153 li
470.146 263.843 li
473.636 269.887 li
480 266.212 li
480 270 li
0 .0235294 .0823529 rgb
f
391.805 231.354 mo
389.39 227.172 li
480 174.858 li
480 180.434 li
391.805 231.354 li
0 .0431373 .145098 rgb
f
414.657 270 mo
414.117 270 li
414.014 269.822 li
414.235 269.853 414.452 269.912 414.657 270 cv
.0352941 .0352941 .14902 rgb
f
473.636 269.887 mo
470.146 263.843 li
480 258.153 li
480 266.212 li
473.636 269.887 li
.360784 .133333 .690196 rgb
f
402.671 250.175 mo
394.907 236.728 li
469.77 193.506 li
477.533 206.953 li
402.671 250.175 li
465.685 212.377 mo
410.915 243.999 li
411.167 244.435 li
465.937 212.813 li
465.685 212.377 li
0 .0235294 .0823529 rgb
f
411.167 244.435 mo
410.915 243.999 li
465.685 212.377 li
465.937 212.813 li
411.167 244.435 li
.596078 .278431 1 rgb
f
396.192 270 mo
383.6 270 li
379.783 263.389 li
389.227 257.937 li
396.192 270 li
0 .0235294 .0823529 rgb
f
412.692 270 mo
396.192 270 li
389.227 257.937 li
402.671 250.175 li
414.014 269.822 li
413.901 269.806 413.787 269.798 413.672 269.798 cv
413.342 269.798 413.009 269.864 412.692 270 cv
f
414.117 270 mo
412.692 270 li
413.009 269.864 413.342 269.798 413.672 269.798 cv
413.787 269.798 413.901 269.806 414.014 269.822 cv
414.117 270 li
.0352941 .0352941 .14902 rgb
f
372.019 249.942 mo
368.917 244.568 li
378.361 239.116 li
381.463 244.489 li
372.019 249.942 li
0 .0235294 .0823529 rgb
f
368.917 244.568 mo
366.502 240.386 li
375.946 234.933 li
378.361 239.116 li
368.917 244.568 li
0 .0431373 .145098 rgb
f
381.463 244.489 mo
378.361 239.116 li
391.805 231.354 li
394.907 236.728 li
381.463 244.489 li
0 .0235294 .0823529 rgb
f
378.361 239.116 mo
375.946 234.933 li
389.39 227.172 li
391.805 231.354 li
378.361 239.116 li
0 .0431373 .145098 rgb
f
379.783 263.389 mo
372.019 249.942 li
381.463 244.489 li
389.227 257.937 li
379.783 263.389 li
0 .0235294 .0823529 rgb
f
389.227 257.937 mo
381.463 244.489 li
394.907 236.728 li
402.671 250.175 li
389.227 257.937 li
f
383.6 270 mo
368.333 270 li
379.783 263.389 li
383.6 270 li
0 .0431373 .145098 rgb
f
337.278 270 mo
324.868 270 li
368.917 244.568 li
372.019 249.942 li
337.278 270 li
f
324.868 270 mo
315.209 270 li
366.502 240.386 li
368.917 244.568 li
324.868 270 li
0 .0627451 .203922 rgb
f
368.333 270 mo
337.278 270 li
372.019 249.942 li
379.783 263.389 li
368.333 270 li
0 .0431373 .145098 rgb
f
465.074 270 mo
440.759 270 li
454.429 262.108 li
452.002 257.904 li
431.051 270 li
417.109 270 li
453.083 249.231 li
465.074 270 li
0 .0509804 .164706 rgb
f
440.759 270 mo
431.051 270 li
452.002 257.904 li
454.429 262.108 li
440.759 270 li
.00784314 .0509804 .184314 rgb
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 21.0.2%%For: (Halai Mikhail) ()%%Title: (temp.eps)%%CreationDate: 12/13/17 12:27%%Canvassize: 16383%AI9_DataStream%Gb",KksFB#fC3tdh?0^TLg]qqQ/,_BE*i\ML]i;1VPj=3HgT]N<<3/WUjK[WoO3'C-WFh@qc8t-&;XP]7`f=Cimtj`^+_&k^+dSX%4ru>$DCuLQ2pV*IUeXL^fW"1rG1O*ZHE3=89Zq<jp_)JlL@7O2^`C[DURS.Rbni=H@Vm_/3tS%4L8h(&]<8Pi;M;kEreV&sBYbN&%Nn;o75987I-)\6,!!Gt(SHJ&%EVFM#8H,^GSa.#ce[Dlo@5T*Xcnfhfd<TeZ;kr_6eV9-=5:^^%Qdj2^a)'3.IJmJkfadjdL6+(;%`.f$F,f)5eq851AkV$!$20AkO=o>bdD=e1=3?R]'a>2Fb&sqP?I>RJ#,2D:Mrp6$J<tIou?='fo9s(N25-YM0&`GXc_uJLVSA%7:%b"kctHsqS'I0*Ym$r??dH)gmSkhe:GqmohVD9BGWh9Hm&J4G4.pc+\8Xlg^'[kAXh)sAPUP=k(g@[2$K!:#P<Ri5_1$S1d,m?#rd%MV\QBZcinWID_s:cE5PjrE/s"UN!J[JP9!\jK2&V@@.^]#S6t1GX,>n,h^3^m]t"4=ABL?*0MW!-ZD5oobPQXE2N%91@QOsJsWa%%MUC&^_lQBWL<ASKD3Xl@.<@\,r^A/m.'EU"mXGp]^qSXU)\*3+pQRXWM)H#-ahbQf7O_crOT@'/'aL.EJ@M(LL#2-$P<1J2e"esb%hbU-coJRUIkM.MsUHE,4%c#dEX\SJ\;7>Uf@O8(Jq_%PNgTlBu-"!P=!^D:N'r#T[]WDoW!r1U;'@DbNnD3=/3Eu7*RkU$'m/DM*%B[B.$#lW_h2:_Il2m&rm>2!ocHs'B`BXWu/pSL#1rdd-LOJb;dG1>9u*bGPsBEC38*2Ld)m-f%8h3u"'Z-aDVJ@'$6qjV0KH4(d]%Ar###bDp8\$+&c/HFm9"T%@]TD_lmH(G+$KeU,3i/QnIq.%5JMH`O8q?sKjj3b&!GG,J@5jXn[B:HNNra$HVkZss("=<gHC1boNM%W4o[&dp[JI0TpP%PciOUo@>sAo<YN\cqMoefNPUr']3*VNVgE^h"Q8X9n8A*2bL4/1A#4/C,AepmG7SAm7pm3V6^tb.%F#6#klk(%&UNrYV?-*G=1!t(qppKqEg<Jb>T"i<0%\\>c0hdW;ksqao;QdU0;-KB9V:bqh%mfrJrPNSYNUlb,]XMYJR1QMJnaC>ID^npa0c?i%]Tq[!C%'rfHIB6j\Z/\^&D&-0:@I'E_7<l1dCDN0l4jHrOP^8_W=G&s7fZ*;hmW*IhU%h7h;e@7&\eh`c.)akmMQ)[qmW]![^E^7%F`H.2\#l4t[qT$JT-/W5_!cmV@ZHae"`Sef[ac%^[af)=?/=cDqc5Xl#dHLq:4*#Le`2r)%`do#:@I)K3hLdlHj>l7'-Qd9F?tm%%8ND*Lf6mt+U&QSN\Y`eNSiu!3"E`k2/tBBn!r8[8l,`aeUt+\9mt8B8Gu_=:$f;NX3:p8g^=*#.c[TY7*!qFnCF)>(IiWU#k4ZOi%E;SPDhS8tAMsmiVrqc3]Dhe4+dS<:2ZE+dXh/f)D-u(a4=-np"`Eud_`r-,D[ljPO@03pl^J*R3e'u^G?X#O'i+O2@-]uqT^bD.Q%VFj;sQ@6Bfnnt)T2m$Ae*ZKfWdjIi-b1,Y<3_!?B-[f%/M%sq;d@31r??CPVH4u03WCG!8BFBUQYJ@CO]p64bK-Uo!T3LbiqDRKe%Y>:0SXce^28V70-Rf32u)k4R,J*U\KDM<W[OJG/`#:\cggj72Q[@nY\WaV30]n,o<htfX6h7n_p[D*r`CND""+R!%U_/tbZ%J9Ec%1HVtepG"fL&5?U==S=h-j6o=[1*0i,l:.W(Sr>qDhfN>t%28?T83#H)3XuoS,eJ5Z-6cD9C-_J&-DNHFq6)%+JN`&_FlDiY#='=l%G`%p6WqOA+`5!cq7KNCfGlVtj/6f_r(HSGM.-_JnVdh%cTKD`Mi%YfG>AnXX%sG,1n#p6;9gk]&WFq**Lf-C'"F&b<D\41P3"_X3%f$`$Urn7ARo\_ui])QoC)HO"X5S,dbY86AW]?),H1sjp6m2,pdq[Vg'?&bGJA-i#C^I.b1b`J@FZ&AH"h/8Tr^De6\GN/edC+Nb@%fWD#Gp)GGid-iuc7bDC5ZZ6.ai''sR8?UDcg!<&dp_*Xh:i>:HlUeeVgRKQ`Z\7QZZ'Zh2Z\7R-,YZ)TAAV<S22J6V;p/k!;Pkm6%R3kSc-VBdRf-"ZCdk#!tAPBFhBpLK%Z&C-UIH$bgp_#TN(G)FGBC[<:e!jIXom_(IScSd3h2a"PST/i>'*[JSarkEXkD_2CB,7Um%.B3>W3%$a68$249+6KTtZqdZ5BT;e38Xm`8eLHniHM\_U5EU8:;Y!Vb(F9T39'IQ%'b?saE/pcE5>Zba6k;JDio8F8REddJB3P2A%U>*fH$lIML2*55(>&CD#JJFq)5%(/'1L@&1RoVoV)8,ejr]4ALcVCi.G$-?\\Y<\^W%ehVrp/d8R+(#>cm!`g_7/_);LppBqX+YI%g?g[bq-fS?Im.YZ*u;Ni5G_L0AB8)Ms"PDf+!2='A1aS(55%rPq(i154m1J=@n3k<&]rpsAZpn`D,Be'b4n2&n+]f2r+T#CdqFrs%Q[F7arZYQgPC77a>Ya8[*W&N=Y#OFEJBiWEkaH@qX*),C6#o/CAbEhG&*C7=9rA&OX%0]d(T'6tpttRPT-puCM))Vccga<&443GQ%NjS\@@E=e0rgs:#G+RbrlPs5+1JDM6l&2&Z@6ad;OtV4f5:fRlc]hHb@g>d9b;/+dY5ako8H4PPAL83s5"VLKa\U$'!8Y!RrG;WW%RJa_*Xd+j*#><Y8pXbNU)>J7<5EtMa<9S&LbppHNH#e9f4d#a\Ga@J*Rir<?k\"L@Aqp9ibg>F.l."H209=%FWu_&-a4C9:al#+L%m/.usrH-()^WuGh"V5Kel7J&%opo.41\o,MVg/p/K.'Hr'kKL\F0hdS2ePp+rtkVNGPki\C8Zdb;er"7PBV]n<NXZqc(&[7Dd7S?%,T7Qjf?lXO>g!(\ZpmPZV'l1t6Pt:jqT3L#o(_uHpUPtgne+NheMO\.No-Eid@-]K<R`mnC@\ghFCuAQ'@Z2iG91#/e@N9Lq5UX5%*KKm.$gJ\AA-X_7i^g47"Ld-8+*coW5;;r*i_Q>G.SNTFVdIV1BZd\s\VDP#s3piTVGE_rijf>!-\9E.gpL&%^lPWnVEhoZ#8A3t%*\]#Y48$l\gJ;]l>^cW52Q"mK[E7TP+k/+'f:aR%e*m,,MiHcpTPLaH_tul9Vn[_qIBk#;a]E]B;ZcY\&KC(#Kk92NjWW']4of]L%r2+n7/6LidgR@L]%%nX@Iag@qMh5:*&dgVSVD&o:gK*.J&Ppj@YCg3UFu$?s^'sAeR&]sjiOm_ql<\km+$,,U8RE96S/m7WaBZRa%q5:Z1&6<D`+D/Y:IU2T\^bH*Jl8u,Fa28ji50Z(n&$e%"Ap!_IYh;<u5Hc2:i#osN2RX[j5IC]1FqEXh*JEqA$E*V@`8m.lFqA,+%&7VpXI"?n]?<kM"]">.f&;$GnKU>M-<Vun'+hVL2ZtfCQ3sae2S:9WeLoK6bpcR_!]Pu-%!dtX353!$`]GqlZdJ`ggrHGu&i"M4N%cN3N$Mgt^bVSs%:P2n2!:VX67om&[F(O>JRLPkTfAJuXu*.R*^)D_Kg^4DGZ#3tduW6*8Q)5rsSqP4<FAOF?dJGRL`kmIVj3_JAT%4O)+!gZE2c5(-o3oEE+0R<b6hV`2kaH^j'[GO@><*\0,FlM=1A]P<9#5H,fiZ(>[Ns/Lg$l0ibFqIbe;FYdfJhk*+&"(ib;'.4m-%U9m,YEmDhXoeRJkfrHUZ`T8=O<RGR@b:4juo-n!G_0U>CIu<,`1!'oQg)!c5hY&X\_ahE-_.])*ZI'NhR7oP(R_%'FH;PM\f>"N^%5'E-"I&mU'1HtSP'<^<oRrH:>#>R8YFl-?2`d5QVqL4?:M-C<n^90Ni-a^Y,f>ml4/j,,VofmM"qer+:mX?V=bEoE1?G4%/d^8<4%=MXq%p;iKe\c$Go:Ak80q[:%PlDO!ue8"d>!a':ZY?[`1T.,.OX>]JTN>m!=,B@\VBNOMGgOh6W'_^&Z.m03Kg./dg^k2]IgC&.V%/kg]YnA!r25#9l1kM5%_W@LaEb]YOM4-lY_%I@2GichrXFtA!Jn(E`_G[+i6f:VG4c?:aO4-m2nb?oFu\7`o<S),.QCmT1N90(b'%SGl^TCmX_+>\:E;q(orB)<GnZ_`RFe?F)lj#,PBZ9Q*Nffd:k.1*jIlO"[@NkWOV=!=m-_<WdsAL'Ps?))-b8;=4%tU4LU>*LZB-%Bj0C@@UpCBC)cSrMtl_ca[cm8T9YUPjeQ$>C!_fdmZ05OZ3[e*;W#RAC.bh$dX]g&XOt,@fS#&bhZOpYMRE8@@@;Fge(.0]QE<$a%DICbI9s\;mQ^;_d/lq6ar:!bEE-;-Vc;L'hMY=rdGM;)k!p+SXh2WRXj[^:8Gr\>9qG@JCOu/:^G5V+_''iRs01#eVcVB.CGeqA:%BDoEsnt+j%Nqe._gbW99J")O0r=!$2&Q=P<B.>T$Ubo,Xb\@s#g;U.:0rnU(C)=51`S\H:.i#F7i=n%<$"I#JR+3g<[uLC")nE<'%bH1=k(5A?C#gR0<+'X*f).]VQ"S9#Bb+Ci2pn9m\S^i\(V6!IgfjEgBl5h"BT%:sP4Zl7uHQ7NM=>>.Bs0mXKq(1gTQi0K_p'"bS%j4Q"[XWO%G<bCL7B!7KqS:9hfP2uWP?hSb'KY>"6fdgVr!UrC5cX&%VH$eX_?R_2>C*i3#DuBaWk:nd!a-t&<bJ0"Sj;/a5078Rh%=qnk(QWnbTJ[Y672p%M72>Q#t<[WC>Xu,riM58HSJj.J\\j?Aj"4]@uo\k9EpAP6Os&)/X[.*$MD$GCi(<l?BWQTq2X;I<QKH<8&%7lVWWB-tN&eNKJ*l1OrN=9otPph#c'*,'B(rH0*oF>iMX76Et!s*eW-i-2n<p@ADMZV&%.JDkF=6(M!WVC2eB<<B$l5EsJu$1Irk%X:d3M:2s;@Qju=(.KP#!J6=1+QG\\+LNu^#o5aQg.qV(Y>:[->o@,NXS,fC\-BXr_pKtq93&uthqCo>P4&<Ubh]#T7SU(L9m2n"-%d^o<NUF].,".`+rnuG[r>"_ZGqJ/T>'Kot:6f%c'8e!<&2VQ,i<DIb+!5%>%du/kgFT+rlHhQllGB'%a468E7iqlZh3lR#6qm:9:%@3UoM$.61DKPK'C!<71JqssDdRc5W<.,.eY6W-F#rH/8B(Z0o:7k,k]Na:k9?p$YPg!!+E5-=Y0m.CWo\a`fD_jOL8ht/@K:O@tT%q%BT]]O3HU7J(R7BFjHthD7Ru38nT,j2GB;K&3(5.".9T3TBT)/*N2C)gn(u1_X;0Q/"T&adm!:5Ge%ZS8"9Fc#T[1$OLH+dmmn&%bF)s&dsoW1-:`;f0k^>DViJJ\ehm2Jm8&s(9h&`\1sM2\=jf-"RRXeA9:A%cdM-:XES;[eM6tA4(:1C4,9L%fe;;Y>AX+aRk.u[u%`N8;S4gG"N^N_FmbP6#%XA>U-rD'3c,;I^7M>O8Lo?[BR^%L5<hk/gMT\6pZ5PH*!rq<m*:S3uEHCNq(NN#q3Z3fJArRC:*_:4@M%9cn5XRTe*PJ)B`ngMF:4Hhn^CmIjs<P"*ARObS6P([Y(*VU\2GaP4lNT3LKn8hp%+?6&R5C9l;tWP!]*C[00nkKY24IoU>h/^rdE%$*B4ner"dVW-O7[#($=Jde)V-JoWDN29:Q>4ldHt"/ZVYWkBHV1sl'%,P/&&j[!)!q%RuH^$*Fhdr>?5<:D3<J)XOl871Q7o)*$>%3;^/^:VoAukNp[gZRG-83l!AS]Y!ja&KbuifJ?j5J"'J+ru&KG,A&[l/7SDW&^)_5R0>-K0OW!_p2_"SHu-alF5Qead_OtFe:%@P%&)g9AEd,9gr:r5IM]<2tnG2fu?!O%4T>1Eub[f)@^#d-@3r]5RCUVWneo`W!o)9>heH7<aR*us4SY2$*aP[8.p]/Z(DqiK`g!#f]%(/1UVNHrn1Bm!o,4RgRS9arUbDX<!sjSoZjp3E[:Z`e=B#9Wqq&,ud^s)S0f,1_772j@!`_nmc.WkZL(DSOVTP%LnrS@re$:G\fL%_,QVj_OkQf]E^f.n!n+e6oOffr5nT"?m"G,H0_K^1(cfmj[&dUrB;od1+iCa4[kf/c2Ut.>CD@dj\NYbi.L[^PJ0"!o*(aYr'P%V%^\smta`6k#5(OfI4bE_.<>eH"./N`mnNp+Ana=nAn5hWDoa<tCIq;.."',7,I'!7D/Cr=N3U>X^Qa;eImn2,Q=guk7r<8')J&2_F%Spehk<q(Y8<#=s^hrJN861`N7.;5CGa1Zr"djUf;,-12:,Ujr7(uJD[V7i9JrDd!0^TL^sJ(,&6P#C4jZ$BPh[)sFrL-@aUNNgn.%o%/\eIOY\pg>(\gPRr<;\XZgqi"%MmS=kb-jr[Ffc]_6(Un+!GbPPT.o)?Se5P<!X5jX#4Sl1PGn&ls.,\"sGWR]),']c(s@G2^Q%.n7F)A+$^\G8,?NCNeY)%/JDjge+YY'm*g<m^0".'<Rs.FPE.e9*!cEpO)UF68M?26ER$31N-FY3rIe_<o:F#*qVlL0ED%O.)-Xr%0ouG"j$4"3i<Y_os"Y#Ych6J1_QD6J0tX!oQdN8(erLa#[g)X/qR1DLN7Yj34b/?YJiKDYk)=W8e@T!'?Y6HjHisCRCX@#aa$aH(%PrXY`,Ef.6W^&0RBS-\X@0KMOL0_j^qF<cQ^Vc+"\9NS%Dh,Lh`-:skpe&n\I6L.:.*\lX1Vk2s0%!W1q*$,=acY+I^"q6Go\%)W%^q4W2%c^c1S!4_?1^O'QO1F6C\SQ8M1b2YgKdGfOG7&&o-`[ttADG?'2WNPEs5McABun;@fQNDR)6P%`b\gIB&<h52(%D?@6#Peu%f*dn$e,2Fs&K,C)1V!U'dOKG*O;B1M[PeqH>4;Fp$,g1gY8;GH7$/9+WsCNV1qR%t1qVfnDfYqC<,A,Z:(Ma\Ni`^PM4D@1j1B=q%>;(8l[+>tMG9![bG%4Z^(?,ANr^Z_Eomb`1<69ZTcnLIQGGhdc.su9h/dW.oiubCg1O_;k]#'"qdZ!k(d'`1Ns83SG@K&",0_"^@%lk4PH=_b=8rmC)`k+ocrqI9>t]Y+PACZ*elV,"j?i"q_,T"9QW5fB2L4saa,9HeWKh^##4MIXP=9T3/KRqWUQqP9H'&Lb4RIhV_Z%,PLS[K7PCGHo8,>j[JYdEq4ht^"@&,XnnYfp!70f2ZE6**-V!-b(!.r2d.+(Rcs:XFEeP@5HYg5M+=$6-7E4e93^Lr;s]K.=:JH2%;>fdh3%QPHd&=\OF'UTBj#ZEY-3<'%7iPeN1:%6>E0INroVG@c7K6Sc+,cJc6l6fiO9p_gq04<=UA+K1NtjiENc5Ue&ZnXFBdj0,%ND;-8*/@#"C.$3dXI%ZZgSdfI^(N\#a%Sc!5V+!/1m9T/IWttqId3[oW9\<&"9Ho"KgYg"E%I6Die&'3EciFnS^]cJPoPTl3_`u8%"Bj1m\kS)+D-oM?A@`\<-'].W<V;nuXgW*d5=iW8GHSD+ZdV).2q1(@BfA-@aWm>8as^Z<>,0Nn._79K2*4Nn'qq6J*k?#`bWo%(%90JmJ^hR^,-Ik\R513U,274c-Y%?*EVUe7QfKet)QSM:;<#V4&Y-i#O8a]cV;U^HK-GaBsT^<nLe7r1STrBltkf7,:"(/.Y[X&q?%ho3"SJ>Cm#L/i&j95VsC^,DPnBPKFhTF?7-&g7-?+&oOC166CBHccBAoZ94roEIjFYM9d^!66o7]!&794,bW\P[$AZ7bdD5p6pX5%$HGW'LjMe'(->'29X?6ZQb(uS#/T-)3AtPhF1Soc[:/F,<Ra]AO;>D,Q>Q'_"dF0,+R/=Y^7E;t!a#%aK3$a8C0ba#\-VNd0-Y\m%dBIfY44aGZbopePBk:YSdqjW![sXtum`YO'gJ-F9["m9:;Ua(n0u+H5D<iXR'l0?e,+Z1/\i+;&qV@^V\PB\Or&]k(X4rJ3dqREX%-L7jp<:;=Rs#-7BS[u_gf(bN8j$cU:O>;M/JiCM.fBYo$P\HNBLPb9\"OeBUJ<RRtjYGT"K<BZ+cp;GLpY?if%=1L%(p?dVT8$Bt%&APgc9TAL)C)d3:H_?d&k8<$Prb^sRcI/;(;qFZ^&q!sX]urK9@>HZqe!jfM1lWi\4Ot&Bp"=Y&J.5fGG7Up7<=8a.COn>qBVn6?%Xr`m3pQ0!r=Dr?D[e7*"JsuA@0At,:^AQk8LV7.Kn8PKSrVKf@6!R\p)8&OSlD@_Ym[e+no]LP,A%"ii+W6cYR]_dBGctf6-+u,B%]l3l!C(K*c*VpcY_.&FE4\3;<pup)-?!ctiPNsl&+[Tk?R:b&O[t_;0A,u#tK0.Wh=ZY??<AU'I?t:kQC&.KNZb_IN/_qW*c4f.%%,2rVmE(fED?!`\1"6&D)TiF'cPV$8"-r6N)\2=U_]<7j7^)\6)]/M85>,6[8@[5+KRMO9<db*u1c*"I/]>$f$_9"bj*OLD(A8D+1%<niRtkf./>=aH.ufTXm54`hr3fBn;S[N("1Bfe,bK+mlsi,e,#Ec4h_qRP&5JW9?3J4-rp$+'O!mj.a+S0jue/Cbon0cTP+7f`hY%D+2%UY17iR9!&@;>4gi>,?lKs[s'1<^*I5>BQi^48W-,AGPsp1a3rkDKA@@YlLE)mSS_.9]@VNOp"k@MZr]Ko+He5M$K$8')]YA2%7MKf\@l+K1Tn5qM-32H%Rc?tHX@Kjnc"^=&HbA^UH5>i(CP+qL:e)5E?=Z!,Z?e/*?YQ)"`I.ujKZ'mR']pV+3&Nu5XKl8pA?I/_%m+15VnOEA:Zsoc>Fh^U7JKO;tmlDO,!on)VF]'f+b/[Glf<sO99ZCOWg+I]4lVY#-+I?q=mG=6=(G4l'UXILY;sE6iHbg?j](RCF%l7u8]gQ]->&b9mBj<'H]Wpd_.S]VL(<\=3hHea<mQ<iaX3,YV%@J5k+ED.Hp!qq&2&\slJnbYDZ6i%K9X`n=hTa'MG>4Xlq&Bh,<%fY?Ke[Wgq#B'Xm.HicGY5t-1AHP/]Z#1<&:22ZRaXc\!LU_=#BgLsBQbB=p(Ra;e%<s.GCVd"ffa#Zk4m$MV$%(h9CXCp<OoGqnf%P<?;.CJ=$Znsc.3:96&%J<X^[c!$6a?I:G/oSf)OFoLbWc%2%r8<7ed*@[EFgIIX-?skBH^'d]bl4dFj"ZdJ`JHol$ZP%thBpYsA%HY++l!dB8?><cNUhmS9l[AlM>U\@.E2gZ"Z2J,sQ`;m,HM.+B4])CBB</*2j[jVdc\k\#[R)Uf7n(FnbNLLMr\eE#qAVd&#5f3Pe%@td)uVclO'3;6_^"b!WU8Et]m1@89dX_(4MZ0JGDp)BFSgJa@uh<a,h0,^=lX1g_Lc[^$(-UD;&U,BXe$*K"'`nS2LSORU.S>J.^%h*U[?4rim3FCiBYfXaM##j,V%^-,[NTj@2&NKUV@0LS-l;KN-a@neakdm<'ajmXBn&6sii?RhQ:YS<u`,GQThos<BaK/IaU,NG#&%o5<+BocY_2YXFdr8n@,Q&t(;^f>m,hc$oVS<la2eeZls)RA"BJb2'>qD2]b6#/.A/j+`9gmL:#]FVL-c'r*kWrB7)F1;6QK6#Pc=%7J"@/"7-f@?%^e6eJO`j4PL&f`9il<q,mB';8_[c/q$3Ae4Z>[ZJLh5M.h]n@Ef_jl=O)+bPE/>$9@JqrM3r3%6u*q=S2KE&sq"E%RB8A,K2,ptDB(KJ5!33?2AiU!MBU5ZC5m+)i&nT59r8p;^c9\U[OJHdjlOi=pbMK->AE7c\TRYh\Tb&%9nquh\OJO$>E9_/@`3;D%K*+P9!^THR,Xt&Obq.\)[]['*2mqtZ6[gHtN^rKMH?H"2n/nP+CFdR76]8;eV2P;:['1.Uf\8CuFuPHMQVX?!V^SHAgkcXDe$d%G%XlN-\ZGnFb2]j9FdB0fg/)!&Df&m+^c""NEm<%!@=8't#UK`>A9,QDF`FL7">T$]0\9%i=aiSX46b_Al-XRqS_JONL<k")n_#JR8%Zm./EdRdm;.fNm0?d/b;A`g5dk%'CU>*^hfmd=T\7-&CdU@*IL&(.L_qB<GtMUY#8[6Q+QZ<&O%"UMB]cVKs(ZM\Yfa3CQ.]hsek%gPMqXb79WoGpum,O'eYd]?=8t*WWa9GcX#2E4,>,4=D6Fj'h%\0pW2#1aida>,a:o:g[6i`Df\s>=heJVp2>GJ6rZ&:Y21*dDYTE%3h^auG:jCBWggu%<l6F4PU[bVl,kQ`Y0",Wpq1#t*gYet@!=VIL[I7/j4r'5_B4_S*`i*IJ@'Ut&</Q)bOs6Ual^0>^Y^q[H+d5?%@s7Bm%FmAhhMfG7@I"QI-84]U(!i+&N5W:3r+/[4=2Ja!gm#-fMS[PW+IY:B>.@2,WF?81Ec<BXm)TM!0sl(+]%c-M$P-e%SONSj%g6#DPO<o,!Q#tSB3pjk$5q2/Vk%3eE@367[P3^iQ;VE5([;cofD`j1c8=-je;j]c\aE;/D^#`L9?)<QppV^8#R81cXE!IMsf1]jj%-agr?G:VFn4BL9AS#)J#8&E@h^bB+B/ip$uVta[2J;6;gm)o#^G1$QB-MlcE-UR*ohV&^?>Nqt$b9pX`an#;UCJ*'A(ZSEPi_7T$%XtO7P6p-qikD\$Vlbc2'/eAh:nkYL;[o2HKou)S;j2,piP>8hs4XH%'Bmm<m%ogu6ngY"Mgj,4Io9.X2:W^<$O(+O;eY@4A=?<1`%kn9H-5&e9mN1>TF0==l=d#Oo8dER&c5*eELG=GFKU9'7_>t/)RrpE`Gd%!e(4VpZFQ3%fhH##@\V!k'@&V7(IX`P2O@s'@;\(&H,%?4Bf`c.FWnW9!;G>9-$V^r9$G_rJG_dih@0Ah2BdHqpl0O!6;j.t>_G(E^+7+G8a:3p3N7?<M"I'34;0Q3nX&dX=[j"h:ha_W4T@%PgCg,<IG0M>6lQ*ePo2u/7+jejBM%eQj;;mo5\7,q7TaPXe<DI'"+SY-0>96r(/=?(1p'2`fG%QDa@$B])(gMaCS2:'ZY0>_TAb;%['T")f%`qH`EOt%ZhGH2$hWrjXGZ+].OiM[.@dpo"t.:U?`oM[PO$Q>ebDeL<0*N.9.Q=3?8'/08"ncBc.&2)b,(HAnm1Up>[<(m%%ngmkFBkZn170UGmn3Y_<M`_MFa:[X2;tdTd6jL$7k<?GB],MH"eg5W]*K*TKDh*FkP72<Gqm3@`1loF!Na_aD]LT;n_-Ua88mn#%.k]S*HbQMjB`c#eAZT%3cq1?U^L$Rrc-TaXjH[/Y!V#a:aF3/1[!C"JK>fGqLiKk5hSjN]LC*.H)LIK^m3a+)jnTOj_!t<m^$Rr$%Eh0ki^IpV?*J9)me1PVi;/Wr;F8]]d2j7prnr^Ar*4G=1bgB$G"b2fsbRn':dAt0SD&'4VGG%Zg]%bk0S;_tugc[N-i6b.Cd2hu`%=$\]:a#Kj+$da1_ABct'gHC=mQR(tXFDfN,HJi3ZpH2uOH?+6;(\#*MLUC%.JVJc0^l_b"#$ckV8S1A`K(0gtF!`,6O]?Am0St)u%%ki7Ajj44o,IlOr\jddM1L&5j@Mf$TMn)DNQ="orG,_uojrsi&kO%hSGF$9OT<b]D+J[e*mE[OsL^h$t3<*<O=9,;KrGJN+VZChb%If5m<?AR\#b+gYL_8QdT#R9q$4/6k@i$XBcnn!bf]H\3$raRlfI8Lk.(:f!s]L=B//"o@t*%mbdo:&,oZJi[R+^g@?_cXenB>*.9%K@%,mPbNN61U&:Q7i/kq+o9XMef\$Cm;PPK*@UHDW]1?B_b^Bh6;!PiTmX]R5>19unj5lr9i:6"=HE"N0iST4M-gl__@d)Z68>4V%\9:]kFKYs:L^(h?q0k$i>E._tNuI9HZCZhB^Wa5/L)OiXYH/_AT20>_df.c&GVMZ@Ca`S-+'sWA-!?.4/R26f`oBuS<NNkd;-2le%-cC1OHog9t4$m!oSUk$^0VKY?-7e'5/e.cb#Jp;ONuQ0KR"abcnqrm7G0Y#i7n9b&2a[$^4a,[QAtlh+])WGE)6L5tX+X%3Y]7gQ%:Kuf@Zo*5TI6Ml\8a'_A<F!_Na/(XGm)g:#GbL;M=&]"pfErk"_iEFuN"^p$.iDFRjpiRX29"?O2:GToL1__E>RN5:Cos>"ho?9\%Lm0#c(N9=HEoJ6"_+<fT-79j4'.<)28SAr<UFGe"me^,PB./WTZ1f7[>Qee:HuscR-Xgh`:Aq0+<b=W1l#&\mJ"Ji\9?XP)YRj$W%hQ=fD!Y9,\%PrleXS`9ngpm\&q]4oLP!!uO[6E7dZTuAfjGu1lj\,2)+3Rn/J[g>U;W6sE1+oQ!o\>S)eXcj/`D*=P8#$$o5X55i%"]WenpM'^LeE^oYM],$o>&3Rak6n:.g([9eV`c)bUhhV]$aUYmRF)S)Y.V'ZoA'fk^$r'tVOClBJQOd<6IO39eeSnKHiF9Mr:JM#%r^-h8NI^H;CF:8r7'^BtV]ZqG(d,fRgpXtIUF5EP7]C8\aJQk+**J/s[o2s_hCN^DnR6P`SSE73/%L16=/]Z3/[!t[Eq/oYI[5t*%\_p3\e,cpt'8W3Mjt8C?mbYI"i>ih@98m-A'XGr&1Lfd[1:fWUZD3[PC]Egfk5mf/9Lis3H6I*p>j[[X2OWCGB?]cV9Nb(0\E;'n%j83hi'5,t*MjAjC#Bu4`Fn7$:]9*n9,=[XQ@]?c64b'u6?4F%D@'6XT^KE'E^cS*bdn`8Z'f"gF>D:*eo]e!7Zr%:o$ug[\$^#Ls%FWMu>m"^d[p?FH!Yu-AJVflb"T)K3nk"U1_.CMW,+P'sJkqCpI3khf2/jN6[+VhB,$);'&=B,Xa62Zgj9ao;1+j5((HfbRZh:5i'%h+J`UUrrtCpeO3MK/_J,m-'0U;)W;6SX,G8]"6H-^6Nubds%3j@XiqiUTik;M9nQhXe&g8M];NaP4$\25J%sq,NgUORVS"h@kL#J%4M=Q4;GW@)3rm"SO1rUU=*bpgg64V&]$b$f.%q]Tc`*]IlaOlA$puT>*Qd+XIskRQ84gNVC$#VJ2si&4nL6WoQmk-`CpJm%V]8AF%6d0sP=AdD[r*:a.(3#T&(SY-G(JDl&\oAN&0<ZV*Zdik<G+K5@6!j\?%s#>&Q>CcD6645BHLg"^GSPjjF4(5no2b92i0F5g@P7Vd%Y]Q'["23]kZFH2_>R@Qpi23FL,a,)/C*42Tr+:4/=++RU!M&A!.hu6Qb&6s.]P9XL+/>0\m<3F0@pj;q0=?kiOR^</HmCgnCY@#R%h!Jr=;tTu<WR.6LPfk#co%=>&FDJ.'nn*CE/^t"$M4qJqk(@f#s'DVH<Va#3R2P:qWBUT&UlMm'>1k`1CXt'FQ;M1&3ALK:=)Y8p%A&"A5Kc-#IKbjHHP:@#PG,=N<`+e4OG=XW^h$_te#@[5i3A<JilA?(BWL*sQpSp4i+<)GAn/qf/GpGu9l.>m9Uj4NbK4'IkNskqt%3VR>9N;5mS"C&sc)ES2T>;CkZ6(uJ(`MRrZ?>!c9NRUgI1Z!4Dh@=(#.oAC0G0hR+A+E"O1g*kOf2K/)HYJ;-lAN?G#J^:`'=4^,%<M8!;Yk5dYo(0R+492d9i0'7oD2Ea85h&sgQ&j&P3=-XsP3'"cG[tP=*,,'_dYZUD-(TimcM&-afn5['?AlMQ-+<X_^!%R3l)eLN%"V"SnL&'rPQ!T:s:&Bds,tD$.EPYYl/!-KAeLRLRbT!'`CX5,BLN_alIIJnn\!o<>7e'k7;_9QLT7M*s/4D58q2T7Y*U0elN1?6O%d>cVARO^@Q^[fg#\rgs??@(o5)WQj/qfVCW"6<fIf;nc.F-kCfi$QKnVN]ebCpfFAKlh&[\/;^U=hK$>f/#MJW4\YFKDV\)@\gBQ%Y(3&V!YDBnf9>=/%ETYiY.HO[T_7fe(J+FaU@uH64'B#Ya;Y2]K%I(,EGt#$SLEstIJ%UN(CUda/B#sJ/%p3+@PF<SX![Ra!]kuO%W^LX,`QR":Dq`J.b!G8!PKS<[&_BU&lOd'L:8jcbG'A6,eWldOg7).T(%&]Q12NJ91jc\Ih:cQq\95%q#/O;Rh*jc0[<=(f>R7<r%(d9uJ6c"ec695]D+4FKo9qO875&R0R@KTX@7tPXjCH3a):=?q1Rr$<+PulgK"XnkrN148[U*lhDE>%9IPNJ50ShtRTlmZ;]$%B)Q%cEoloo8OU)mAA2pW1KDVn\u?.dJ`3C\+?&B!M)U^C%!B`P)VgV\d3-phB'8,"((.6DT^?qP"I\QR1aBiaK$>g(Zuarns8+Le6RYc%fafiXdqh2Y-1H=#F1L[)Wk`F&]-DQ57Z#uXR@9/J&du3P_o0j&j*#Gpo31EK9!qD)C:A[9X":*)o?m_O14D<U;U5#lK8nL]o4*q3%DjK]^99?Ts8GuZSN<nGF/9WL0Qjp+/'2r^RV*^U3&.n=cr*I./'2ZTA79DPjH#)NP5]?%jka%VH\mt6ga`?G7%TW9]ELKdtM*hU:%Zu4F.E<L'6-uH/X"`H(^3F+QZ2R]-+[bE80A?JR5,:,,q?WU,[AZsY(Xm^4TjY2(M?n^fI9mpNN%QL'ch(.s,ek$R42L2d1%pI.O%9IVeK/seg3md6FN&$__FCmI/o4`#GHe`=;W6uQS&#gHU>H=bVH`7qhE3a)P-cZSfTampsEUmKF/o7.JcT.:E2OfagLDCl3CWN8#5%Wt=5`'g)"_0dRg-a+-u)&he2o%6Z>n8gW`mio*dtG8'k1l<S*F1T^E9ef"LT4?D2bmqigN%tf*XXY$BDRh$;HG04G@L0K!VJsF*Q%J^5o,A*9_62.2*FlY%en4eFhtj?`,Kim"q@C3S8nHRn9O3fUZMoLs'K/#"l8[FVlIUn-,f'P'M1YN`02d?2G?IHm5tY"`s'=Na8c%Z:gnYW'$[tB*SEuLP20J=^)Gs2]!RRrSls/WDq)[E8#%bDMHjBhY$8Y"8L<)pT&SHbNWN1PC@uE<:R?71<GNmNO?Da(u]'bK<L!)%gaK@]YCQ-Z/$VR;dd#MoJJfQ?3q7d(1DU)A?:+/XfDu'1"Mh+0Fo$<]N*XEn(NR5c41,iP3<m^n<s'aAV"4*l\>Ub'MD8>59ik&R%&1bK-Pu"P$lc$!6S"k4%=ZaFpQ41Q_k\;an)FsTUF.<Lh"i40N(s<odj*#.u#3io4J93[[c9]5"e?5khaBmIs07e4;[>`VqFnGeE%:AEt2ma'<Mk3g3n0ZWGTZ#cgqm7f*2P_*BB,T&B!`kbd`1\'F=oGRH&POpVdoAXU:I%s[#_A+/9ESl"GX2OSNeuJ@gV!W%eDS-%m%eJ:6V?>l.[D:"Wd7Vt6_@,*<C"KaTn8aF4UeAk;"T-^Mb;E/r0-E`).5/WrI0;M[0iX50$Hb3n#n/nT]90LI+@/_UP$Mfq=[u:D>%hdYNJ?Qo[>DM@.P,rHF]Oa3f\=EE.dC!SGJZ,Wq2Rsn[hi(t<ZPDB,mdg*'<pXA0b6"^.%g:4jF!%rTO#n]JQ*,BQ8<.OiWjoo1E%HZuSug/rUhFL4S<T0fN@O:#/-=p#ef[o129I@0;/WO\s6V!]#Kaqa!Y!80QejWfhkI'qTr)#nNPG=lfCBO$_5gVguq^m2M6e*N/d%/hGcORi\HF6\F'&qPj?1<n@uZ/ln>uTf)'R=UffSYjB_)*Zm"aqp]g+O;"[''s"cCf9=dp#(7TMaMHrHa)a53^@VQcr6T+il#Ul9%JZNE$`HRnXkUrL:NVWrF<&(q!<ibEhrMNiUHCUY_[JLBDf<0,F".Sb1E3<8I^qRkHK_)ikb^T$FQN85Sqi?uCjJsCE50_Z,mAfSq%T"am*oJT<4bP/-=2gkCd";!r&iBnaqP%P[R@7;gDZkhNa+#E;upa"k2BT[T!mhQd!0^X(bj(j8ApoK3GV]n]_TQ=-jUZ"!IA=1[h%]PB]5[Pto$kkNjIc;W5@#!)O\q+QbVqi:,Md@*c@&Gh9S(;?O`TKQs6aWl95\`gVH25"4[+L]F@BT/7\e#;6[`$8dAZ7Db*ER?\5%mm#aWj[L/1kt3U6)Z$qbN2H&@0]%-Y5e$'HQ]Jd25,Mo3h9RC.<PZ6VZuj"Iq5oYYTn2e`]N9A@mQJ,RT)Rp,>,.nHh=]ZQ11pTf%T/JK8c.%m'.)#KdP38/e]sfbGgFps(qV6AVbW?>mp"3!1btS;a?j+2HG0Ol83)Q,4W'#l\cM\BN8NpPSj[!DGReX=^pDE<8q1D-K%PTL1j[e0#=i>>YT&;2"_jkc/j"+8*N<j:G/?uIS<HB,h"K8p[`X.Zk][I:[ioIcm4jjYS4I6i9'9,+f(8A=P1J3L_<8mQ>U$Tf#&%UI:\,4t$G9NO&*2j8>KUU%>u=)5P`c1/ClN2`^IC&%)$-7.39<oEc"/j<otq7iktd2j)L+R6]_:MP4.4Q`P1&#S./S=8FSm`al+O%%N6N#64`Mh`AOSiqtGk*T?m;hn,II_iQWf4@YTr(%\(O`,@((k'dRq9pSPk`"5\A@gj9qnjNdT'oWA_CA[Jn;YBK2bL1Zeo_KA@1%nufIc9b(bX1*o?0]3]=C^8jYL#!F:0DSD>#'Tf(jUOA/Sj3@V=)08K-raC!ELG^1hKfdd\,^RSlaE),:oA0Re]na/fiN9.1TUiHt%DkiBMokpC(Qm4]o0\+aa5.RE=-T4aA6L@!:ed$pjCtFk^ml`Skp\Rl021$0io&&g#nB(@I^:K``!qpe"=$BbHju6*7If##m0+%O=%d>^i,XW$Gfq]AGmVGg2Bm2\-8r:o7F#G73/s6B0fhnO1k58R/7j&G/2ruY@^cUI6-!u<L)D>]f_aU]+"/co\Tf=\C*O6V&pSu!pn%(Sd<-Y<f[#?7%m8cc(N(r4,CJ`d)-:(Op%1kPT1:"+M*.c^8am2rS4W*p;C;.G:%C>QqV,B7;J;[iC7,_=]:$RQo[;e4t;!>!'^N%WJ&[AYN&C[W0iO6LKe^0B$&kN6FU=lk6:hnVk/*==7AP/^Jlr5<=:_\8T7N-1.eSAn#$i\L[?23XjjGL$@-5I]p7s&,5h!!.N`".%B4Lbh<ZmrjYAunoQ%r=IET7NN\d0RB3rC3G)'L=k(EgX,`>8AO/pY7)E66)2%HdJL4ob%^WOZ\4-0`dT8GVc"/XQ$`j6P7l:8l?s%\H)V'=H(J9-p,XWXkhDpfA/k78@("2F:LHr7MlTZLOeOXd3CL"N,IPK%HL:H$18e'pS!k/[)C:2]*a%;)I`C"2n.tTo@!&)4LMmG%+?V0:b3NOc\Pq6X/Qp]+HguII3F:GgX[QT8N4;NFqQjd!c>[)+qPC%BCTMDR3pEd=5t7#tMYN.gr^J;YEm3OGK,dK(Vb\UfYuCSj%A%d&1j:CXbD:tUZj)Cbtj=dq(!cn6g-\?Iq3H\P$a2sY:qGB6uaRqXg@L/Edc%FSr-<4I)3jGHLKedW<,npljB6U.V9b,U?I,#D<%Kn8NWqLIicIs))J+'Z!Ta'T:p;d=T$`nFjK7^1fMZGZEa14F8L1X&b>b9'-,J+sh3CtQM,?EF%e9D^AkJ+?23RC*]Ws6a;7iLG+:%'jQ0SpBOKt?i@#El7.p9_H5s[B^EkDr`Vjr=:4Xe\dFq#BId1^n5^B;gV;gA?[CAo0<?HqrJOpZi"*o%\kCcq&S-B:KA#k"m$`.t%?n,gb=-#6arm9>GgqS%.Gj,arVdB:`69+19Y8H#CVOfsBZRo>So*aqS5Ms#5r8Q/UTjLu-GkB2GPO2GG-bNe\$iBp_$icuOZ\VsK%o5?9fao7j%_i0*>EkC=l2V=*U^9O.!-ghbAr2Cuhd@\^u7fE48k.Ud;dp2AaKf_$hYnhTTTC.Gcrp5eii'/a1%"I^'7.=P;f,+G0%cHEm#g0./FDkFJ=Yfcq;L$X:O1[k:gH#_)9\3/+59@qEWJ%;q-m&sSrgL"/opAOZDRod@iM<t%FMc[+]p):D)mm#/[o*`h<ao#%a%@;11eH@7Li9'e>)iE"l^SiP1VkBZcs4r9S&?T&DWQ.+i[q9=o=rVXsH[P]/7DdMT?eaqRDqXI+D5Bo.AkE#*+1\7$_M(jEsSi,X`%g6_X2)[>H8O.#V2:HAI(I%_$#QT#GbH/erQW%TtLk*oN8!*3ee?UtRr3I>aS8_C-t"HC:K69$@[0<kA6Z61diT`q9q[2-3B2p2TV%o9\3cjQU)b@6_f.(QP\6gC)^31LVI,Z5m8]=U6W54K-O#"YHe.$[O+#?[1Oi?KM:sNUoP\TsYT8/C%mObDXPZM99;kENcspC`^8@%MZ/P1U3ck3]!uh2oIhPSm.0."*t'`nKW`84o<m0Ci`0N!Dt/;T1:sK%/DMhC:QDH5[HCS'Z.[ul"T4a[mC>Jil2($3&F/1nrDTg1%OP6s9@-_oK-P0q5\\MPEX;X&Yg("=-E[2R5R;ZF;*mNDST_)\aJX<:tCnOo`esH:\9itT%Q-P[>9D.G1+O=sYD.M>3V5Ou1R0tS5%8XDq?-eGcG;LW=sHg16?YHXfWL9OY)`Ohs9ng^rp#m[Z"QWdJLjflIJ]e!DP7$]dX2Xd!m8!^B,ONEcRZhHPnb?)\UF8<(>4]sC1%2kf@0n\N[p],'3+qmX5Em9b^7ea!rAPr;[O?^17V._U,@EWT9]-/ZcqXk_fL`Kek[o6A651X\lWIP`-ONpF[BH6SR_b/_Oa_;3.4%,e3T;C^%/-=t+]ER(*Je>Q1CjZ'0rCK!2$qXp1&mU".64h862aOF1?ih%sh,qu!2&HF@?uX#H@D\6:Soqph/*E4=Q0T'eq]@-&QM%.FqF2F+:n88j5&md-4`^$sfE/gECFJ'aVLC.$7>Qr`l$&XK=T:`7MNk_<KZSfXb9[[F3&uVV#'S]6VKgCW0pM[8ns1Y/9diHn?<J%m"E7H7Q;0DS\AEaO3FmE^(g&3nFQV/8[oNrYD,-(>:'u?hjm02V1KSA<h$<cjQLXG.WTgI[2@;O0(pOP@Dc?B5NK<)_rp3:FeuGf%XsZ:-O6`3n2SX]fEVR$RJgde:AfhE)b"?K.i@bs]bc[n@RDX2kJ[qj-YF*0E0/<u=QOOq9*7"djp,';)DWcUOp-<+_fF(@7fE.PH%fZ&C6Opeo@0ok!p%WOR2b2eQqO#PkeC1NAUkrG/Y4^M7QK?7ANQ\=9QT+IVJpoGH"j<)mj.0"<m;2"bG$o8\2f%Z%CYe;>9$&:I5%H/X'lYq>/uM_1XA0=JeqD7(sq=7X#6QUh7tMtKb?/;>[6pq!m`9<5,`>tJIspSDtZ4X]@;F&,]M>VW'Vok$d%]b_qs%@5H#ch8E@%Y3!hIXsTKOCK58;d'oNUY*?'erMFV"L^VAmcK;*8*(=5aKhR_03W1A,`g8<Il<1-uV*=4'T^U%Sg;^.4F1/?9T(dl^g>1MndAtM$%,JTe>$Z%F:RF\6sfLp-0PKU)QI.H6@ZZL?"]\1l'X"@pp6/7>E?Au"&[<SpP.JLZ\fCJ>#G'Na.Z+[JI$>uJNe`-;Ojl4[2o2+Ll%f(P-jSaBtH@H[8rojHtIp&qn?dkmLd]A[_'[_$Tq5O<!Na4X`M]p@H]S!k7$cg7c(@kte=c)h-Hd8I[/N;4P;C,'&,1Ld?39dOs_%\LPX+QF1ITH)pWO=3ir#ped6[j,``DKm;'!L?8PoaQY1HLiLHsM-RZ@Qm`dE/sD4FSPiA2S@4T9R7JV!E)hlDS'NImeG@URObtZi%_:6H;5F+'*lSn(iX-Zk5F1nTN:\EF1\r^X8pA>lGm6*2*4RO3m:LTO%LHtB?mkkfdpDNWPZ(K7o[JfE+C1k;qC/thqnjbbHZ!d(_%i8Uo,3-\<pm)*4d4$DBH(IEnfI.cI&HE$?QX^pj'8)(M6QUd,aX'dT?p@4#Lh]-Q!EUgTTEGdeFH<e.rHT;D<rl^KG,G$m:?PqS?%9753<)NlW$e!QB241u7C:/C1[pW6+i,e]U;4u-C*DSEHCGtlhTZWpL7a<'^)GHt$3a7br$U"hY,dan>!7U6>E"jY76.<rS4Sn62k%q%rl);H_m?YFf,@k194%Mqm1cGp2pL#r_DSq>3upamX-/ZPtE_I&1+$>c\\o(G=]k7iN8R\`h_#S_pMSMN?NYj[jUXjKcF_HFXC&%F2D2?.TS!*>hpl\q('(iPId(R+'u*+Tp<mg9'rF!'7*uLDitVIKq!iZ::^%57eq5&HG"To?e_f&l`&h4*F!E`hAu-Oa1Kc0@HTha%?1d#%!ljX+IA+4Ci.$P6blo.H:H&Uk(MC;=#:j`8O+J]14D+N#j[V[E]m,E>>bmr$<`o0sG[1bA#DIfUF/$M%SfdFT7;_RfE3JXu%0<_b;BJuc2%^K`$c1>b[E*9cr(@9SgGu6S=?d8h4\JBNn[#PX'P-e88.@h1k]2ZPX$gPSP,O3tLgUM,J2UBSErbJd/\[q3nCZQsO%iApn1P0#:=<GF,/?ffTPS(6kOrN^1hCtfNhK:Bm6`Q"Ir3'E#[o0pe;%pj;NU&%EgEj/hJQcr@p1)Z9kXd>nsDPbVmo;9Fjp%dqM%:-H1RX4JH(oO26T79sf,QJ).)ELkdkf&TBV3o&o%XD20VX3!)aKk<7;o\?f?rkl:^X7EnJ^0Vgno<t9Pk]SfRE+qP=b'U6uTWAXi%oT&"5rU&Idd4O5S7pQ?arY`LiLZ07W>i-SK(#V+'q91>ei%!cN<?KC55#)gNLPW(QKt3J7Y166ol[0@]+?$%ka,N+MgALX`?VJ$j%84!sF)t_W!7$1rM@+[pB"kWhGdi@Dcn(D#sUS#R)R;]`arX*P1'c:;FitYpLNpg9qP=qL"$Z[>l9NTR#\anKW&tiT]ER*k)eQd`7%MC9s3bUX$0&7HDVi<_OW%WTL<A4.&[\^1`m*#fJl62$!9qN7`QSA7Qq"dm;L;FD9<)-<0d#V0kW:Z2$Sr.e"@JCF`,Z]Z/fAS<pX%Qk&WjaCJT[iZjO)a"XNH+KCq3*M>i`3*AYZ"I2:J"@6WfPsXekQ'GHRLkEf<'df8L!&b60(/ZADV(5/i8;P6A&IFd7$W9CP77ojC%M$U*__Z=.BQ4u[0OZ=l/59VsQ,aAC9QM$)D6kr.IJ1*,aOb9WqN"REbr/:oe_#%(k!d#P]o.U\.F$:'d'F*e^1`$<iial+YHH?fG%,JaYT7@71C3*@!"ki[t]kf3['6q-e-r2M"dCn_%7J3JLs+:80YX9AG&9EAm"?s#`V7Z-[:07j<r(kn_o3'8-HLD3ZI%VUV;(.C\Y%5T,mH=cn6V!b*Vk8c1gI#5pNQNUR@X&(<pS-H]n##',:mF#(rm'*2&5-Gk!284$jM'02.<Zo]`ROa0M"3(Kl63*/2_@u4'-_HDt@%_IAX/7?gM8j?Sq8j?QEC00k>L(bc"%9^9L>EGkWQYc&`Hs+$t/K$A:#)@f^Q5SQYPOA^pkMCeQ'/66/(.[[/5!$MnQ#(i6f;^'4j%:&s@jNl+Ca)*5M@HjB*0&dg0u'o_($[QYb:jTUJt!IYh&!4j](/.qd<\`a)E0GiYtTfg&-)\rF&F$)]<#SBKJ>(d=B6!jaT_P>g+%PK@>QoL`L9MBk`'rh6=4r4'HHM[@HtNeebWY-K1f^c7Sq#m.?,`/$M_]tdLai(uC9_'abjMSNP>F=t-)-odlP6\-dVDu_4^!Q,*+%`c)9Q*u%J96+m#LaRVaYGp1$+RQ`D:N5uP5L8Q6eZTLbu=;;<'7-(:a_^lp`!&[PG1>&0((_2p2iHPDeO91(BE.G3(mbqmDgor]_%9/ob5'LEeDV(?`XJRLp>,Ep"V6jIP8b"BU8^hbbm$?uk"^LVnh\L;Yf,oF#I&[6:TH:6\X:B5t,*8Ub%_!m7I/%!]'>/:?G4or_I%:l@=j&"OYm!@7_8ZI"YO(/,>OMud]<YqhkV!dt)X!a>ahQQ9dOA>D=`D2gP:(Zd4#*T.!XjM21cq8EUE#2(ATn?LJ8_34:l7Y<$J%U+-P(oeK.@3AM&3)C/,[_h.B8FDBC3_]YHX`t6UK;@rd->Cfn81HR':;(;d`TK+b@ALgD2T19:):j2o6_5JjK'^H#IX=,8Ji2oCI%+a*pc!0Dg-ZFiTh1-?5@*c)r(:^C_7GTo"Q3Wp!W<%3ii\d!nS_8;$1GX]%kV$tu]<%3i+W727#76-:3^u@n=QP:W$!qJcGpV<aX%"^_H!!#S9M)N(1IJh!`"\;4aK3fKc3kk&QZ^imUd(%!NsYCPa8q'76f*eJSEN6&g]\jKG&.]P1Zhud%5T`1@SEtLK`JT`*)4RqMU%<Xd%kFdV+T8@\2UV\GgXBF[E;^f+BU/>7rRd63*5OW;!/nt[4\QqF+^0M&.8@@9KP6B(a0D#ZN4J;Au7WPS*RN'N2R+'HOkSV@l@%&tYl0b9J;J*s<Sma#QfuEr`HGE*X%njN?ss'K2%_5p^uALZf%GB0lE+iXir0dU3N31AXV'`g/%F'"S^/=%')"bQ6HkA0,gt"<3`S%_KoV\&3^TA7cGD]9p%uJLf>-l"o:O#+Xof3LF/brUAa#3B!TQe4Na<qP#r>uZID`%1l>fdE1p\dX+1p"7[OVj+aY=q!"t11CDMSh%PluU=kf",CAP$D5G<%E5K#(&efEI@+*b>WX*M2K0Z5FZ*8.>ft%p1mb2Co\NJHN6oJX'.WCaLkIO/uuVbmHh&)Zt*j!ZeLp&AOms%)kO&KWd2]'6k!25+86EOd)D+U6!thb&])Js1'D;J5o?2p(Q57$&(Ek+5fj/VTn4f_;DAkq]4;Q0E>KNEr$![HC;b]k$OS]d7UUp8%dK"6H&ESQ7Psq&^2$VPI/hm,75h_,M$j9EmkeMLq;SWI7/rrjjp6'F)4cIYu!Q:BoJ/QBnRk+VFLh?s<_$43W&L%L;(hY&>3e=ZB%Ci;>!!egn?5f!V@;0\\p05fPXF(o#eP$lA3A3Rd2r?!luU.SGie&a:'*s;WR!=T[6K/a;:J.fXL[)O4M":id9%Zr$"$fPt?gc_Ei%Zpiur9KY_K.NPDo'Q!jq!JDQK3#$(Ci<W6k^4Pr"%B:UKO@0B#aY<5W1-lP$"%99$*61=WJok's1=7e%LcE[,&L*q[6F,1aC^M=C%7\LA6_H7tu&T2ROcqk.DO%=MMnM8+K'R5=N(AnV$#TlNn4CLEUFiYY=$Hj%oJM%""BuP:A7Y2#XLCjQiJ\_d'p*NH8DZiVLn3J1l%^ekZWJfRerWF7Yd9Hl(,JW1jD:duC!#f1#n`"3G4@.K7)A+WO&>`9a9A[%d6+X!kb&3`GiaFHQtTO>n$(cu0uO0LC((hf$kS;H\I%*b.^3P)=orLblD(Y0)k7R</K:?s/eS(DMEH+GhZ58Wgsb/E&C8cEg&3=AC2j7`U?j*CZ#5/NV#U!uU)JbnR*Ki?SaWe!Tb=5%BaA%8;I;9j:i\(E$5_\TYW1Q35hp):01o/d(r>=C6\A3(![s<lW=QHF7<j1TET_&6937TEeuB@S30(>Ea23fc;A!M7Nn$.=AL6EL),=W%K+\#0euV5bJN-<QM)m&;:oG+p-aQ\#L6.X_O@/AGU=sQVEI\:RAr-QH^i0q_;ON(OM.N[A;pl&@;DZ68EO)@e(f0Y"^sKrt4>dF#%\egM0.R\pn'KSQ3b\mfg!H]Am>?m5h1g0k\n-F=CBhihB%gJ1oBM!tX*!Tj0,YK>D(G$ec_$fjfK$Zq3S-JF0;JQCk.>6(ob*="G%Vt5_3!)#^+.H*_>IjJQa38W%r&JHTj+Y"oJU]gl(PmK:1,CCi+O[CV7;/(uc(rtE.Q%g'G=J?Dg&7l,=dGoci8,oFfE<.iGWL75j%Jmm/"Pes3)+YWq*@<N'Z!,r4PYsjn^U4BWQQ#iH2&-.]@7*Gb#A!KK!;4\n6+AEh&18r#/!?,boXGjIc#C4b56McOkd.S+dKrPBj%"CNLL#q.hA8Ts'B.N'I?fDoDHm4`b$KckVl0gL&NYTN1I+Fk[R+`W%[Z@l,1"Tam!P%]kee5?mL/*(\`N?S-C%4ib@fYBbNLgqQ9%6o0gC/>=?kL1**$P`8(s\o09N.ZOP,;obtI#$N8[EO80qBu[<s/1%NZ8JoT,9:\/bU7Pej#ItUU#*T.rFFl%T:a?TKhZuCK8L0Y&%&@oaK&<R*@A;K`,#u_s:!#^H+O!f?09#Ck)Q-!qW.07($AeQX+Af4<*(5oD9LP/MNnf+rk-bgtO%Z7b+VNod8SqE8t5[@C<+J=O0%=Gp(uS:D/C3etP@`)F@43&3sfM)Ji2`BkD$N"82eM'ZXVVT])c#uL`a-DUeS#_W<f"?GPP"?$o4+>dS""3;gX;\nbeK^`E@#<5<_%&l'>l@q#`RTL/cpi"[:VL35meFbhKnTH+/*+UsrlCr$)fSMetZJXM<@W]&gd9P]G(.DgrF)A[p5hZu[s(rPPLB7^hZKA<"cl)8bV%BbF9+=A8@<A_=f!ZKT2hNQblC;Vso-`F@=JOqrjU<U:q",i42r*]i=,*/B_con9&rFTe+q90oT]Y_XJA0^&Ss]SI#SMGYWULl.,q%!$Ws(FTrXkEEXIsO,>)hi>)Q4"<i@CAh?!)K[GI'Y),T2VQcj&@O'/'7ZU(<Q3=5W":!?l/@89LTV):YZseh%@kmF>gEU-l&QB9;%'o8Q7[DCiF>?I<q:gsJh=NocM-fl,kE^Dl_n,_,`E!/W!g_)uD<6U;'Jr)l<Og+7<Jr\S<UJ9l)Dg#qPTHU)?\kBdLNK_L;TF:`r%<4Z9G^dJkJN2eShB@1^<.)$8WWi/;;6L'D9N"-]A8(%\=&!)\i%KA/ML%$'A(VspO1k;5ADm;3scs]1A*htBI``+]%$S]MRTqC=X%$Y22pFI7<P/02f?KSfJV%'V-HfYj!;8A\b"oY#f!n^f>g1l5a2kc8s=]*Eu(65*H;eOMQ0<3/St/PTa^jsV@^QAQ@f*Cs/2^2mD*%:h<Y#h#n?m_j!8VVc"4_:_ho.#_iWqh??N0JkT2jQQ.o7ET3K8Nl6.g>@<t`=EBbLVLcle*^SE]!@>SdTLcdU:o'IgAB.UqJmDAI%<J\V5%)ibLQ"?$\Ur^iCM/bb:,bZ(%'7eFWP,K)L"@8n&U5[&,dR9$-/ut-@(FPClL?=,O5e2n*apt[JW.fclSA^O:#^a[Vi/ib<%_XpsQ,m.;/7MO8t&U04/$J#h%1kDRo%qFiHO-KfhF_G=$>uTfq9ESDFW(7nZ(i;5:(sjO"X@Sg/-mA^F;ck1?@*qAp&YmF"\R60#%*IJ,)(bELu^W.Z%\Qu"(.KXHs,WZQJBSEA+^*Jjj,i%.J>Z!m%plIsr,?VjH6kHUpiilO?"]?n1]n%P"?U/om1lpa/MEOA9BRm=D%<4KhJStVi;H7>08_do*5'EE$BTcA_D<COU?EXZr4fHdLcm/TbD#QZbJp.1BV<`CI[Qm<:aJDas,?m%l(U_?*NDJTr2_@+/>+lNuH%A;M[AYrp;l6c!)eUe);WHk'ZNi/W'u:5CNc(T==N3WbaYXM`1oEEK;"-k`WdTN.[[i7DCLE1LZj-n#F?>dC0Q0iB95jCmA"'8b(D%A19Ui<C,d3:c+pM;?]E!69)'dEYN%%V2I2#`07O;j[)9[BG;U86B_Y6.b=Sj5N%Yp!0L6$DZj(\1&UkX2NOZp8>+YjZfX!%+CSB%%b8N-0<+jdqA'O%_%#2p-%I;F;rd1&QGf,uj/Hk&THi)>5Xl%4&m:lY8*siI&oX:fUVs7:V'OX,X$!&0X,s/10Y`B>m&fI9?EZ*Xc%,ArgbRU:QJpl1FY:`InU-+-eh"+>uuAI0I^H\`h(GQJsFYaC$8F5fFq316RYGR"=u'&1RSjr(`6!@sU@[TB_iMdB2t6-'-N-tXK%%lGPuE-!3WY?DOY0I3>MPadt,r&=eFgo[(<EP-^7giO1:m@1:FS;GdoC5jVJ-#YNoN+2J%B+t81,\-a)Lb8>Lt$6p,36o<J^!aqUP%ZZ.Ct=K]P)]cs/<MAm?Og%iYY0ZMU%$bC20-\Zf%XFuiK#?OTNOGN+tJ@1oaTP75NFIsF0j>"(G[t6&f-rOSIBn7NC&F7DJ,p(;F%LBSTdAJceX1!$._-Bc:I'9"u?8Ogih',YDKJB/u&dC>;A9?&q)2%rX<%.Ct_+V-;<7NVXc+QX,R#<7Y$n-<a=!i:oD(rYAq*!uqK%#Zu%Wd?WVo4slnP,oTF5'_QDX#s$(9L.hAN.#MM*KVSB5&0b4+4=)aP!t$JY'6'$F`%`KRTn.bF$rh68MDWDq:-@i/6789m5]2/]%QLK!KieRa*)r_VW82V\Jg!_9f'9E3nbs@OE@-2tK1'r^Z86*`,#$FMABMtqN=a4I'DM@"l0<RZ)%Q[u81WX!P.$?>30IEu6,9A3V%492Vkq[:<GIYF[i+saXLgRr//.AhB\""\+0!!DeHAel"].LQZV1;Fd=eA\MEcpW!n^nFs9L8a;C@5\P9+EiME/?8m#OB+34^a>e2%`#0*e=/_ug1s6n/KiTX!dEsm/UcQb^'HZ4q8^'i-mjs#d6oKc[XM/2p6,i"Y8Tb3\*,_0B#ZMG'M4!6FP`@^gK>cfY0W-rgL10#?%)*5uM6l<g2'eP4K'+jnt2'%F=6323B]dW==dpYAhbqMMBn#4(,*mm`i_$ieaDr=.5-3b/C2nS0qS5/3[FAAk)fYA_=+e0muG9"P_%JeCPN*9F;[,s!CfQ!#r!WZrQ%G*;,PV`Jq?5#1dA;]X`Q>d?UC"6tpu%V%aQ+YjBSWe:C:"@SKn10%;t\Zl'mM\.t###]di60t^7%h5$Q[YZurfLnmencOV1ia5U;V4lf&Z.0DQ_+Z9TO([*6%fZ'jH0dF4P2K2bdE)K&p'So:_V4/@^63<92-S\#&+Ld\aGp,(*V1N#W%Li"F%mU_+),,mCP,t[&D<_+V[X0TAd]2M%fCl.g@65&iC/D!Z'_;gVlJ3+jk2@pe'QO[JW8@I>f2MfhdAET\R$t>ErdN"b=Jd@Ef%&Pk%p`"j5+6iB]?a5S8_Z+WO:ql$=+ioGZcBG"cpP>1%JG8A7-FC2eP"QF?[m'_%X5T[!!,i.^]JCk"?.K'Yd>@^VsmO!HD&I:2]%b5]OdS1FP*J0^OaqUlsOOZ6">KPp@99t\PdrS.ofS./%;oc(l/ilbct=E,^;fZ''M5r\8ma``uop!Z*@@@^*2ang8;8Pp>4S+PZX%<FK/n*tAo0R<PQV\/6aerJZdb3sr(E:\]0.Q$?;KkBki.apQm!pTT@l;_Yn$D\P-^1"jboZZU=P*m[kqNNnu<nX)>"II(jKa-6HN%fq%>8'13,Uh)l3P^bECK4DY&1.Cc]H>`Eq?Ad-cf:3!)Bj5bI;Jrc;/;`nkp(l@WmGh=2pU+=&!_2P,3j'a@dS_inH+bg/SDKa'1%4TVmn??1fQ1^34.G1ah)P1i_!YXRJA!R&UOE,'F_aHbD?j[eggc0Goh:d(YIemXK#V"M#S*qqR<-ds;3*VNBUhNcQLU=W3*'NlbS%M6+k\#ROTDJ]7Bc1+D#S@/BR;K*7!+PW+Y"o;\#7@qr'm;cjkqM^g_b#SrYr^;3?,_L)@uSVLaFSt_N*Nb7hVSu@0]RVtpajER=\%Qj)I=/6%$aGYTG".(EK:7rFk+P_#K!,bBl5S/=E^!rO1g")d3UUnUKl8W]HH7eW%0?!)"f4(g<HSK-\-'LQ8ubu-*XR%olDbk[Fl%-dm9`pddI6*C:a`]8raTpb6_6*Gcmu]ZPk>d^p1dnkom])<00ID?_[DmeoD"JI*do**#K'Gl6`a'@eM/]HY_6R4JYL[j\2<m8prP%&BcL(!r\X0SP"''=^FK`c-eMAFineMSljudF\_'jZpQa1Bm$Lq1GRu9\Dl@*RO>!oW63$ij'EEe%4=.Z`7$W,Tlhuhma;^c3XM]V%6F,'XAPePh--"Gel]qacDI%8gD5U!^H\Pg^7HY4=[RqeNKgnKV@0*R[6T:eM&ilim-nD+SMfb(a>4BEs(`Wi%Y[jaF;b<!JOD5Y6%>Bs*n_F"=9TK'_q[@p-X-3p;[fi4]R;*5Q1F9t;m8?qM/3<`)=*?^3p@O'4h:2O%i.3J'c$*?Ie)ki@QT^>_(3'=>/e1s<5"^3tI%a^H_m(RFi:gtcVTD$$+=GLrBA7H?k1;u[MM7u*kAU_#oI,aH6$?A2G:YiI@W[#N%t_C7U)*:$E<Ukk6Q3ILgWUHKK\QGG7#&@rTS%`XtmX"lJDU8]eeZdK\++7,([E2]frlTa&kG,\;*!cQ9(XZmqYD_"0t$+=YE-h,#CDIo<b?8?EXdeVP""fa^+N5sS=f+-1J267(0/%BG9S1/M&Xb7'uGk(WiTe,aD6fDC(HE*B6KUEQX<9+?45D9PB+qRZX+/GhaMsd]0643JP8'67-3n/l<H3e>]p=VSj%&/ic@1a<g&l%?jKAm0)&M/QI0[cQW3+PCs3JdiT;\jr*r:84!e4<=4Tj,MI_O!#8\Y@;7+o3Hbo>$!$k,u`<I-UrGZhIcqu&8aam]mYi7jU9FK0k%G(uh.?&ZREeI`cm,qO^-`=Yls<03"2.*`;S0Og`^6AEFZFAGKHg4V^1l';cB^a&jYf%t8o[O'2DH\22+o-Qc;R+lUEaB(-[_6Ca6%)!!c@/1%-EZ)U2m@\^DVs'#;0X>NKiku)ij78YT4Sg0uMTh#$9f%M48@%?86jQB2K]R:i3+M;Pg?tT;W;c\"Z(N\7DftVFM!&P61%.gCY9kDds[M)?Db,<A5b:n6;EJ'<AML3FBXQS%*qlXgN3+F&D#=F`HIn"]k2fUQf@9^\SM"@HLZ7hd*1qs*k1m0V57122_"MC@1i%-4\K.n:N@"8?@Ige)7gj8V&h<X>_rV$P.pqc*Y!g(tU.O8M9SE'g!h?"&D/M3rH/V*E,F#RqsGbrrl?DoK.GMST^EgZg]s2n(4`N%k)pKgg'g^BilA_ahMuR_^BeR0.fdPnTKp>9*j-Y*"m\dI#LMJH'*(82RK`EheU)(hp&TFXI"dh^A>1p<B_\0W[pY9WkS@"3l>Dd%%"UW-eoBs)"e2G,e`LBJd?,g1'Y=6?u>;C:[Rg:_-'e]HDcgeS-YIP<uipk_0%C:FAP;l.W#bjek<>!F]lM<H44qj/<7WoQqT!KIH%"Wj'i`+q/tDa";_H6GRc!JAs+O[rE47C,(aY"me:N!+e<+9R(;feBd_CJ,[QVN<q^%+<+T+h7`6jBB7_F;QaM;dV]^P;j_=*K8kZ%2Rg&%?CTB=%he&5oWA9kn'A8(07,fCA?75O(^##o9p"OHfMT8.,`]X[XVJ5P2.1l`S]QbJ.'(J<[B3LUM2El25fHdAf;/`CK^^k"%qKQ^BMb/^Q$R]t#^r:8sl^XLQ7i0FZ/@Xs>peXE3IZ/j$$n#)f\B5o&Fu7mh3nn5WcG:sN2j>VZ%*W3Tm23,cJMi<r7''!];A!cI%(jZ+g/TlT3ScYP/C&"6qWr`@ls,/9ZSFJ*kN&.m1J^K29o]m':iRX0h]E^-t)0dA*Tb:JRbina7%l=.7O>lbM^Ih+#6^jHHlhStj%)G`O`)gAtZU'YoL]Z]ju`2+j=^[:$5NW3#:Y[</`GV:X^2*6"f@pPsl6h);-cqPP$i+b,*Oj8X0XRmWt6+e#,)[0j,9/D>'UN?9M%-G`pl'*7lCGHd!q6Z?&)mb+h'l%2-89CXq`a(@tLhO!ZV\W!21]P5VSmH*U!C\mF5cf-2lOY,!bj9otEr,tI.k_SV";FJmI"h4^K%?5';kLqr,'I_]\Jc!T)JHuIV@?Iprro[6De?7mU;<:,Gd,/Um2:S;o\i?.tS:[@l6(rE0Pemet)[4aIhRt&7Ap7,Yk/aK^XQVNT;%!@?I?jFG?GdB0+?S(aoPlaZ[(X2hDEm?@r&gLbnaeJ;&bf.Fr/`m+>icqU$2N-q2c=U&r$CR2!+[KMQOj\#V\n1FFh%'N^MJ.kGT%i->XJGZbNo'K$ms*:$P>NKSE,_F;Fn`S"a1*k,b2oQ?9N9mg0hj43c%`a-N`XLdtQdKf-HDLM=gQp@*FT>@+%D83HQ[\qBg.N#HI%2c,DJg"MZ**["7hPUX++I,/f#[QrRs?+W[O^UBoGTboGX4rkQmpSO0r?96WX7MCCS<nYE`-25WL"4U9a!IAHLd?J(.H;g&sF,(Uh%\<a^W3Rn]B7qHd:s%_Q*OoY_J9;lHZ?MW<8g/bSoYpO2N4(l)q+B7!q)S``![9_m_lhoqua8!GmelD:pN$\Z7ld1e/@^"\&gg*VE%Z00dQK^D(i$-tl$(!Aq[4E7l<>#EHoHdSRqmT^HaD)cL%WS.p+a4m4d?]/^&.\n_Dfh4DAqskUaWrRafkP;:"`ZkX?gZroJcl:ku%N71[!CFrBJMj\?fRaGB(2SEEcZ#HOna?bH1XNPMD21DjG;l&iT%jDD?XcK?fL(X%2N1*fDDt,pWSaTnN,c#Qg)SYnI[-V7o<IIRI%3Wq'm/s2K4eFGJHlsc\l-DIcp6e)-"b&]KeI5/:rCUj5pgKt]#2%eo`1o$@.e[I)QoQ<=lGfm*Ke2"'8BKHKC>Yo@c?HcLF+%#m`%0E9a"Cq]-bd-mEB\QW_<ST(LYF#VG^=q'G]Kj]\=eP1J1hYXjO-`OI++9n^AAK42^b"GUkqe[gI+XbDiMJN5JLP.D`kt^$Ulmngi%aq@Q)g#P=QD`FH#Zlcc#I!_-$=j1?s?2OTsq^gH2o7_\%`K<k7D%g+d#j>IR/Ue89gT@D=dLOs3KsG5%!I-LbSGBCWPZtA"YQT=E%LABQQmmSLiohqKD\"ZS_b_Ng!r9r"1]c^2ZiEj".O>4?<"`9;4AFH-pq;SgU5!e3V4uA;+\En'L@%T;9mVd#CSEV1H./=T2,tMP@%7\#JO,KOCSCL/2+<09HQ``0#`:gFpsO*aehks7%/I\NQo;AgTXd)\oo'Wh:O)^/X7("[r@Q_Z$r#cU4\oYJ4!j^S?o!LaK3oV2m'%i]7qE"I?(M.Q[m_@>""i+#HP,F<7YWUd]??b8lZr\HYTXU[!LO]OR5fJpI+-`/\WVZ9$h9$'+-?'n=<I:V'E;[\Up"G2`reF\4M)%CtjWqAn=>E-H&Ecp;mm2cQ*@a,4U3o8GdCBb0:0%&MmX-3sCOM!L\VtUTI!PN<@GJ,7:b8U!Zg4D>;PB>F3Qf:9J@ob>]0]d$u!T%)0l$eZ3pWha#4NY!foA[A2W23o&[`#(t+#Wfjoc9ghOlq'B+Z=JbND6+^EebpCO)P.no\HojRgQQ9,(A#0RhDXS9H5hs;A:&:@c'%,2iL0-OqhO6??17_sQ!Ds0XG$:]t&@m#,*`0Gg[9>_=)[S=m7mh69NsAGCM%A:aVO$k(M8j5-(l!8H]m]5\rfA155KJ<YW,M5GsN%))*0r+Qu0bVtFgl@t)-MjL9'C;C3>-S!9D-G2,u9l,CU2ZlINUcG]=PK*(%):ojd9mr<8=*@Qp$ARgZM[>HNdLU+eX2f10HptrZh%G4YX0i>W_P)OuW(]e+Fn\="!4LlBoO=2HTpmbFT_Yc#AYO?WOP+)m)mQ)_=n91*GVOUpBWi7,h[O^)6.qCS6lR>f-[8tejtAe-K7%mNrSa>;#O1[A>OZDQB12B:j3Uh_`s6bM_L'hjNO'S];+f,@,X$0$01u%,5M`EN5%brq=NCKs#+of2-l?_E[A<hDU$gS)^oQE-?Sn%=$'j_/EL`6/P8A-.f4IC''H1MBnBgB.D:WQ#/DuU8d4$I<79!,Quq_"-'YNj_FHnn7S/L]V660)6Ds/<P7j3T&rE,LLpt=[?O#MN%KK-Ith'5/I_oF>LIV\;n7=JA\D(0=K*@o<O224r\QS2F+<N"Q5E>lK9I<Vf3khM;Tm"E!S`<TA(,!Ciq76H-?_JhsuHXgDi6S?]d%:Z7j_N@AmirEu(1ZSB\7fosdaB'MY=9\+!i>'+p%^>=sRN-/`("5nc*;8HIheq=&.Uo/$/?1=IL^u]s0Xm*6MZo)KqY6/]R-i?D]%(&`o4NOR'46$:)1luXiSd2Ap%9MiE#!j?UnfRR1`fKu#pe+!aF'AckmA4@rpRjL9@/c`_^Un]i.mLles%1+qGO;;rMH9LT7#Edeo%FTg.A%Crr<0Bat:i(oS$`B:iRdUK>6F_>6sMAY_k[et#.&#l)3WF@lseo^lt>Su/eSjFW[!)`JgLMRF(]eY6@_O!sAcG7bqOg7Kt%7=#mH-8f9k<O.s2U5ST5J5[2s/IVTC4[3<soQ?l,j1Cb%Lp2Hc][sbe_rfgMQNf:=VF0U1)@:lnXd\lY2R<V8?HV(Im?6UfSY=7?%gG4uFH+[q@4TUkuhkgJACPC>:<uUR3o!'aM7`Ym?*.9e[#O7(4M\>%VY_Y,5hR'4X/4X!&2!WrK4<f;;LCn-opP+%S@bq,-khDs9%^1q0go2M%=hI:l04,j>:.*[o^OR.+/E%,;/kW>?c?p_A!f(NO,PHba[%&QJRDCrk`H9$c;9p"J#B.ai^N.p.8H(#9ke(9M0fX?s,%0[/2h<$_La]-`S&RPVrgrk1_fn[c_'p"/@iXhc@4Y'*_FOVns:pPG[:kdlt2Kt9-e`7!d+0<Y6lWYj?"2:bph;esMFarh9S7t]DE%OVdW?b`Uks[J%S.\F.Tf]4#"u@lo85DBf3oUq^A5OB4<*&X<6YYrk9q-pPG&JnrQSbbj=GP26hs/IWgHpGh$,XP%rA^9XrE&KiCZ%kL9ID^:n@hZ#u<0Zh]-b-gKsh@AI&W;l.aCgqot"S[O"2F3)]b.l.L<WS8W=O7heN2Q:nX">tJ%J4g[r$M*jSQdc-hLQRjmd=Em.%"8Dm@[qn,+=NjE6:MITnLAm;,7'db[C[Up$+-6u2_@$FrS8o5"9k8:4-,I&0Su%(i&26mAGSS7%&^/6HdGmrB?fM^L.(594CR><k%"VpuF[EPDR[4aU_Q+'TsTjia31OY2f0F?eoYsqo>]^)kuq'5g7*3lk&3l&]-P\9gG;T'?7R&*HD4Z0EMP2d[phBQ:%S10AZX[36l%Qpf$6K9B!aXf7*Y2W:tc[4R/j)t1]$8?7Z$7^e*@>BD[o`sL'd:7A"=)"k;1L_MLi>7QD5-i`!e[$a7@<2L2u>A9I0hdLS*8a;\9%UpdS(e`#MkNN%]ps/].q1eD?V\'lF]A$)Qo7J#XK]IjK_H@9R3(O.,1-,efV\VOmA/sOZ_T<1*2h'Fm3M/4YaN),G0ni8TUP9rk/%W[d`>L8"XW2&.k7/V,9oBNpQ&s)Lb3:0\n&2Of4`P>q:-$oDtFV_6ig_"ZHhFKmS1g_o1gL8*t@T)A^a:D(nW6O3<DCbjgr@f-SX%^PPSjK(.KYg'@O@dW$e"e=;u@G)VJ0@<.Uo/HWJ$GUB__^p'5HY.0Cqiid3uK<7,62TW>$Kn"DdN[<-k9\S'o6],YL-<otABJ0?g%*r!+m!<E[\hT-f6_B:B_r8QfSV65jf,@ZH?,35>m#j.7[8$GAQQ/1.$d(m&^?+Zjjq)JB<f%3*D1'qFCEr/P5+^IX/[t;Dh/2n&X%i+lNtG)3gs_J^H"N-<G<\^rEC)f1l]&(8AhqZpKMbF?I)_T0?l8F8'U<m]3Z,$asnaFUI,/h_h#8!!:X#Z;jk1:4:tRZaLmCFc%a%Jh42lqN-d#TDFc'=frm_AJ=lILoc`K1.>DMObq,lW@ql&[8'.#roGQhB*<ONFE91Rl^`nh@4fU6/9"H%c,BU8k/fft/8j:03lf/[%(?a16c:T[/Ub+.ti`l?3@RL<596qKNK2P=UCd*Mk\9^&jZp3e8f0SJL^Ng/J6Vafdga00k/Cn9UZ!nJL^/Qr"e2a+.a?$^;5Z_E(%)^7\2c1&-?0Rg0O5i2N`-5503hP6u"A4QB*aZE+P(F't-8>e\6Ga-eiN[[Q['+:lM/Lu=OH,rhGUp@j?'1jCdEg!YWQVC\J!*=)B%I%oPC<Y.\Jp]@NqQu_M75ETu)F?V(t6p[NU&_iC_"lcrb!8bKrJ\;llFHEtpG-9-FCC5Nu(PTu:fT35\rFC^p)]>rB)Y?+W[U+#\%rN>8#cKYq"cW:4%bdbU&'`AIK"IEYgaqA1,=_K(P'euq94PO(>I..^XYJ)o=im3]/N!\;(FOG6T!?I].P?K7f+?>A/a[jP;UpUBY%]!lm0W=H@A#<(3UpL4Z=+ap@I!#ADP+3pHQ+%=>9+J8j'\2STJd(YdOd$=#c@5^8`]q6n_mg8GBcBG*<a!E@oiHne,LV?FF@amq,%LgOf]>6$r(/o2]Zi6tD0l]T,Jg1cC-^:*0;ENp:aEe_lFB(:D&W0>&'qHu3pghPZ\C6[C@@XqhNW`?Y.hV.4h8?n@<rM],dTo/(u%Eft!cpQTnj_BYuB,L+S#bd3m)^:*/f!9%n0+Gi8El(^nJ6WU<A&Pc<K*MWD)n.Za36Dck[NaUXH4+/rB>``_%Aa;Ocr*Y-TAOR\m%R=8=:]_YKfdgBdk4c%.JekR:nk)L.>#p_KZ5G'B0\S1J@V$VsPZkSh0-eB6p*cg\HLTbRB_rdGR[tPkk-,Zu6r#-c8EM+8?9lSsY%$mIgJ1DHTh's5!RUumTs(^)_!1R`5,Zmr+?DV9ToRYZ=@B`GA(L:V3*2]h^jUA[^Y4M3"$g/"FSLsdZ/(AWQ)6l1h[RA"*1UM1V?%>?gBC7&hrTjIQK:hV]Zgod[0*5<<JPK*l"_=IO>oLHA%*,5SdWU4Y)6,E;jMBBl.G7LX>dO6@^'*XUuXUOt&q9+s!<3r%F[=285.%BNkR"b8d@_TG4]>V)"YS]q7XV5:9B+h,92&R\raZ!-&$]KGh=?XE<&e/0/TobE_\hK4_m:A[!2%CrWZ<q>S.QW\*)^]SqJ\CWc)o%2S-&rls)`o@A)e9)b2R`nElTO=/6fs?M\29YQs`XZjQUJ'**Q:=ohmH:]\QL0X,8Vq-0W/)\IX9kHH]YC7RKm/%%`f`'nRT*NC5l%W*prj&C5YDXb_^($thWDH>i;.=:5us.BWY*d`fNgNO[RpWodZr"H(:4gTlVulRORp1_7dapsLfdd3XVfE.Z/T.`t=Xb>DlTrOk5%%X(f\Wd3l;C]9Um*%HL'Zc92m5SZTGknoVn]_KD(?Nh].Sf%^GN(]SSs]$NnFTl8Y?dXQt\VDa/oI_&DoDNX!%:]UTjDll%dYlW<,%$(@_B(sZ\/Ec3S`&@5L"3u*YTM>_2^H%nD6YU@RrVf>P:mC=#R%)1`mP#F^JdU!A`dl)qrj,Xq]`-XCq%c$IX:$e,Ja1Jfn3,#"O%K+IdLjWCh#8PD;<+AT>/U*S+Za_[=c>Hhf7F&a^RhO$YQE;YpgRM"O.$;AIY?TjL&.AN8]E.3?A'J4;"QipC]Ggi72iHEh4LA<'5%I7a4UU$CDB==N6BPL>O6\fn#<HEg.])gfL-rn?5^^g/]q$7(KJ^ll,Ib$_Qo<^PkM!THQm[)<HW]pMh`Wr.p)Hg[`I(GuXH:U/R\%OX>cX2L_jTh!5%I7Vj\NY1`"uM2!O6FmP-8H]G>,LiPfs_fG[X7320[>[PIi;?89U?q-H@Ab:h;G2"&\gUl%uet+f;'&0+Y4CTj$%&S.ZhnC:8rKmo3P[Zhd[KQJik0p,p.P$;_i"(HdWE."Og2HeKp0cj3J]46t.:!7YYm&Q<NG;1!*3JKcp>B=Erk94be=hMi13+p5.%q<IQ3%JQgP;DGPUBQ6a@6VMXA0)jRp4$fI:>>6;sS.`>RWCINiR-j8"B)+C6]IPnFnona\\-BjQYpU%PnpH2=!39"al<r)Y\Wpt0%KB`?@I/jgDO_8oi3aFNc91dmlV(:WL8]PLu,2Vn[ZD(O=U0GnApIfjQkEa\p.L$_T1%_M4[%'kVSuPQ+R;_Jtq*T1]YG=37CLto^%g:uW1@nVf!'RF;t7*k@*NJY/m@`gl_]P6a,=p/Lc#gGsMG?8?sZAKVN;a5fPb28fP.">XK3[Wa;rMUg=8QFjAVR7Ms^bsE[Rp?8#%QGH(J,jDY3bOZXDaVJUne(LsLeZi.%c_r*]"6lJ'`p.B*m-Ie3Bn_(E:HA[R'3n7Z;Y:A\\`8EmLc90#4c#,`ZaF#&0H;8=c(]ad%Oqu#l'/i.2>p<.hd_jY.Efr?`Em_RIPNn!/e2im$AOXb*@%9VKLp9sprq1Ve4L)8)Pq<h0Y)E@kX2uj'2s4KoiAI/a$L\/JK%i\E%Kh85m2:2DI>@<*uLXJoX6J>DAG8>TbO*=;f5/1K88QoYEnN)Gp\qJ4O=u[E7G/@1c`bQCb>L+#Bf$BIYO"B8';(&6o+]<aL's+E,%'MsVGCDr$/$:&XB$S,p[Q?)i)/qT>5Ft-Mbl5jkIF?b;cKZ7,9mn>f<Sj<^^YO1FG-7EU&X;Hk(-EMZ$/cGBff:r![GS7\'%d>m6%R@e?B1_IY;Y7Rj('8hL.h)j_11eeXA5'r4Fg2pC1446r<Z3K62/Td:"3RPV#O>Gcbl&lGl3X+OO;[Q[^,Y*9[H^!<6AB]bW)+&d3%@iM$0B9q\h2r>f>,aNKfLqgkU[`\p\Fg1uCVG21:^UlHgc5UGf#/kX[2.LYq]8jOTk&dT2ST]i4f:lJjAK\V_GgiHLOq>!al1FEO%'3#J57.HN\fndd_l'g&"C2=Bip5iEhS!;telJADMi[,>mLl\_W:GPAl4.g4AoP3=OH;Uokf;YIMX(R;<O;P';g@RQ6/0KC)+.qN&%/9S:p#@D39iBtm[7j0Eh-Q$j=;cn4tTZ+s`-JakXUbja>1lf<I0Fd],jkPrYm?pGjk$*fISueBUY0!]4O*>G)D%';n#L>E2$1Y=o%]5L;1,2T+f2Fn"8m7G#B4t1dWV&^_L]R==9V'XVW<2%CrjrV+(#,35lUq^X8M0ZV4]r;(#.tECI7i_4k1+%XP"*d<RX\bj?S?[T`%9l6Fn)A_q^>j4rNL^G/<dDQs-<7#DR^XoWEMPHe44HE;iH.FX6f[rgt;f0D)pQlMiW\pP-q:=I?r58OVo`4\r*b"7YaDBa`RArdi%)qosJ'IB%B(&bq7L.!D5`,J=HI,Wp%Dhu9qNWs]-7$pohl<.C`-$:uhI>>\.2\UD"D&N_4#X<NK:48di.fThb^Z9rRF-!PAPAtao%;VD5+&$\50naTY-CfT*8]fl$TI/gQ5&6SbRZScmTFiiNt;7!%CKBAj80X:]-T:Y6>:i>["(IEI+:64gb"1@7%n""0Ik#P'a*:o87%n0#ML:;:;Kmd7-a'Dq,W2Fn'jTc12'jq6LbhGPd3N59'g*kkK_ab9TX6<YiQV"=!1@RQ&C3Gke;^j!ZGeTs7S6kk="0T$"b[FGn<%pNl[B,^peQ)N7ep9JqJi7e(HOd:!9[m5nFhGH4(g(u6p:ri9U=/9+W0;L`CWh)*;LBKNZad3+<U!?ZdHh$mMZ,9a5WiP*>nI?,p8%p"lG>kq2sKWLb`&lGg<"OkZ)9+f7IP;rZK/-D2VnVC@aEg/LE&hP+-U,`GqIi%nIr`+QAuZ+rl^913hD$c*4Ef<p)saB16u1L*:G%>3Oh?o-l+$_B:>?S`hVI`YFA1bNKL=95pF('S7?$,;*LUU,!/UH+[qaUi*24s/I(0(:gfIE_ejCD>F`cBTu+k6/iTF:`*'*e30[U%M^P.ZJn'tQ8hhY@R5q]S+3bgK1O:l,A"/t;IW`:B$r265e6Z<@<0F\2BQN8Q,=:Y;hE2pPI0`WZjO!L=J;):L`BpLh]S!M1C[ruT%o649Ur[]mrlBg5WT7h9tM)<QDfUi:FC7n1kos$`>":(f>Mr.`u[)Kf&*CZ[QjWQU.]*#s<_V9WhE0<t^N8R/58>!>B'"Fmj2%#`u%8Vl/+I+g.s&T3&,2%>`,h3@PEZG9M@('3i`.i)F^$UrY.VP437-!76_!0e.mr#,l6_5kRrI.+JV"-rY.eIG[22@K-SW#bk?g@L(!%;*A0ak:cMGKfL';-b)&0`IM+CKr\+ND+^g8i:UhUVkYKZ6"^F!S:;HQ:tf+b76XnI,][W`r3lh'`d,@mnA.B6-%`0n?q$Er0I9]b%k24oL9s)EDKaL0_hNDAalHU)Hdl8.oLe6.6LAu6'J>e(O`n8+NqV%NfJO*IE%rEk7)L^Kp]6mOu@T&AC,ALQh07hRu8R3%`VP^$U%]fj7QPasJ-LS-c13L.1-#7bHhK2eW\5RNm_U&&;/OJGa5V.(.bXZ>u2-1"tBFrP:eG)BT72Wn&u.1M"'ZViaWpN;r_$]]a#2;jd%%F$j<ho79IC\@XktWNCt&Zib2h%\Cd;!pNdCmqUt[b*=!dLDi0Rro_924gF1Sc>2/dkaR>#8^>D!5*]Mf`sErV>HI_);->Y%=b?DA%Sd\7X+sbhhXX;MF-!ID`NI#@C/@Q"WPuM8D`OCH%B$9GqR(K#q(Oq:BR_0[SL"okiA3Ebl(mti*.Q)%35T`jC@4apN+)dT0MnWGE%"2MaOZ02:FK`t5+cDln\`*O/5>OInOW[^r$"^P:_qUbENUU(;F>pN4D3&oO#oE\%42haA=##^s]4f-&q?-`3r1"M!,q6`49I(+O(%ntjOe4&er$7V&i`8b<uB]`j@(`@]l#&o$!T%^`u/p;AaIR7iA<$-d!\#ut[tBJ&=nEshi\h!N9Yo5%u.9[Q`KT]o*ZB@2LiEI=&f%lTn!0MWlBR9.[ZjYf!=(IM7u,.D=J%@!abKXa//ae.s;>*rKD6\E+i.n16aa<0ik("=1\F5gm>F(#2)1;,_UQmYeVBh*L/Sa66*$%n@44E*(Or#i!Wn78[/ka3/AAsbGMLQ`JA<oeF;=^e;S@`B=9fRD9hMDRci&7\01l@!3DVMrS$&AcKcTR?Q@O0WitDeG!C@@^67]A%86k$qVE0XA4K@]Zii["lI(;33]>GRY/RB)`Kpo"D;!$t3q[gBh1-0Zi(@B'IX7C1")RNL2n8eRqIGA$')VS:[;%#KXcKH/"3-E?P%AXhP62Dn.NP2=j:gl\6Y+6ZA!l=Bk5+.FA&1':;%2sXOM*cj(Ls.q%)KN/dt:uS-NqO,>M#<coBYR_..f<XmZ`W^8JP\VL$9\e^1%o1N<-)h=eV._I.:IQEQoP"N$IbRUjX4Q7=ne*`AUh=VOH=eal_,r[I_M96d_<8;l-LQeJI,)o1N1k/UZ7Lm&Wg=2'L5?4$5XY"`n%>sOR1O/>7jg/QIh\o",P)TerVJ0=O,,@X8GNQTF.BsE<*[,h#fM_nC=K2RVS+7(^*Gqr8].cmI)ObO^3DAA$^&cVS?=oKZ^?eY&V%nE$WjiX?<6%3jd3.t&a^SQ=bQij`o6E]9M&nGKW-^Rn_M]?Lse-ti5k3"e,)/$u>,2i-[6(7W!UAXf5";4XlBqREroeqH:UMm/N+%f%J4p?-6FE8MQ4tZV]kG[A^$cTWqPaPJ/lMk#Wr5B=V]e5D\4AXtiQtgR*R%TW4P%&?OK0(c`$qeuDTV[LUSp]6kI!emi3%Gl^=4%p56DZAd5e^T/U@OE:(!rfR;PE3r?4_XsY?qHM1pbm'%"/C2097PG8cAJhM+!T2O78`(fU@0C?8h:?DD)>@`E6U-*(SNhJ&N,ulco%%]t7/YNb&WkiiS,:L@;qZqG=A!ggOr1nYZsn0l8/XZ&U1,;ct;-FD`sL5g/#_&/M*f%ld8qu*hk<;a*@<@_*HP4Hc'[s`QM?[(+B%V)l<8&0?ae6L@Spq:a9Kd)'@"R#<m<_2QaX\WhTj/AJ2K%HQNKbH)Nm73LqfbSF\L0!Ea#DkKBGR8ZX9PbksYQTHWccYHa)'b8?r%E<?PAT6,IJ'6-%.WXeNn=:Ku7PeqoNXjIbf4&"aRLF>I,o,H@hTrbX7A9#\?OR\<K:17@TR&\X0\@;+f@5FPa82*Idb'in[i(HW3%auZT'I7amD\RLNR3AL8D-ji-*D>djLPhsDg?XS)*ARBh)`d]nGeoW2l/4@%]n-5"kGI6J`qLgR5*%f#5Fr4fO9&gEN@B2+C?Q4=n%/>bgK=hmdUN]3tB2=f>+>/QlW+G.=1^`1Q#0jg]@Y[.aEE%P/.;s8Qe95P4n!#"m+5hkpRB_l3)?[pan]D?cbBi7Mf+Af)W_s_6&%Jcu9'3&Og+@TLFFCW1:3iSfc6[:s2iCG97V@[:rdFB:GTH7P5AMCImlr)(jJ3XAD:$511:4@3Qo\c>tgp%PL'/6lc3mS0^ZWW7Hi%"$L\'E8@g--Cc.nO8`,+'%N^H_/DC7,nDJ`s1on9lh@8NGD/;HAlU-lU':kTk9?uF)LKWNC1g=r*63oFMpkMH509*pGe@h?W"+(N%d`?;mh-0nF^rl&+jY3U#1J%khDXreNs%-&j_Z+5/^1km+>c33B0DN)0G2K.9i)0SE>+2_<aDI.a/;9t/&taXI>+E-M]PH!n!J+JR%*fVLFUHmJr&UDLN%4Vh-Ck)snZrdBL!Z)0[f8]4/[HCk(*,+5;<g"ahN-ThD9S;BoO@`'l<m7R`=_$']knP+s'L1H^l+K>92>d-J%[R!]b-r%oOP0oD(>[sA@"EE^q^g2j-;hi]U\)n)f!01)"NGd"3jHHf"WZ5KY%,n/(SjF/J@-!JbNR)`k_&MhpH6^3UOleI&^#Me<%)%/ILf=GE)'3Fo>-(#B#(mh2a@pPj5U#FRs3uX+cl0"lR-dq+T<I_)k5Li90Jc`_.X&E\0FB9n85#rDFGe@h@HU7>Jr;/U8^uA\c%=Dai8VLpXG^RE01i2u\c)h'1]/0O%rHJmAM3s(,28kTJia!Bmb"luJ+J,*<d&ZSV7dKLgIQVq>:="[i'iqcPLo1b]MBZ2UD<_ssC%MqZjN'TR8`VC6q8\=IVThXW%o:SX*uF_ct@@\bQOUTsg1^N(g(aO\26ZdJs"\eT9R5pL7)>D)se2=W-+=(V(\(&nElL*gI\-&A<W%HFkEJVKl:5;5Z`@-/3c%G3If>mg_R\k#HWR5p%dNroEnh0V(NK(3g,gm)Q"EX;1VT\4Um@*,%?2rmKfp``K,0F?Ke'9$AL[I`!V7%JuL%_GH+U,@Np!$iPtO]6>-1ApBDXSKB>:k]M<W07Q"\MR%EBGNh0a(F_f@`iTPeLER"/'PeZRdH^g$9cDV*7\>Nib.^Z#<D#`$h%",^s,S2D\Oa:<fZfc*AMG$6E?c*&_1*sdm%"+us2eA2/WIRp&DT7h3hqGraLd`JYXgd9D(V;d`XX\F"nDH74OSn7Fs7rTc@,D>'3%UVp_if8)iV+eaSH6XaeI-Wodg3dA<AY-t*EgT3E3Ckk[U2"M3+ZgOU;ZX$ha6RLX;Pm-ca8n<luD4W_0aTi!R&1r`PGY&JcX?-^%%W(dUB!g4qH$I\"9Vf5g2-,S1cD7V5OG$aF+p!XY)HAU.#g$+;e\n5<5")YG;jOd5hp5tn8\2X5Bn6=lSPHigDcHjp:7F2.[-jj,k%[AD;jS.''t*@E_:Sl,Kj9tD_-DD/Dt<3=6O<u4>]!G\?]&2IISJZJ\(F\,2j6t(,Mi>.m,pGPff5:nOr.PZF?c'l)7E<L18OX0dV%mSQm&qNOrE'64t)Jsqa.jOY.X![H;8[>2>i<BuXVDcCCZktkKW^cTme99aA7VAA?OX5)GcV?H0bKW/03RQd]MEKi?7>8P6oM_*?`%f2TDMct:^_V34EIYMU7?2lan4&=Zk*s,HkW4#OCr1+3Lf`t$OM/TL(>3blroO]A(69nVkhX4R%(']6jYgCfc92;=F'$,CL?--V+i%^o^FK'_4;Q^3bK>UEa"0.>a1b-OHS3/%Y`q;=#bj`"EKOWWX(IG3Tk@P3f5\I^YMD-!$>[[PeX$.#'])YUq3GCO?)pBFDP:<=^E)%@ig+!L!ie7Sa&q(`.5i:J2L_.B,UN0Xa*GieR_P5[-3ib6EB2`7Z1a,AVmu*d\2Z`S"Y>^8D/&G57+AeK(dm4Z<k<GiXE2Y"!gcQ%=*,XN@5p*Z?YdaaL"JFG:c:K5+1F0,Y*X"/kSC1/da,Em2>#2G2ZPWO.jU@YMHN-=j*p-ErYu=+7UlB1ghL!$4gh,tW_bujDE?L0%P-p"\j_Uf5[@9iXJ@IJ[:qns`,GOb<fk7Ls:S0\ci6r,?EDa[=-*C5Q[#'fbh'tCjbpaOPPjctH.U+Il2_EbYg#`b.Z7Ybu3'_XO%C66Ua55nHc7'[MQ81Z\7C$+"uhQZBgCJm<<_B8GII>:7V]>A?]Nb!<4XZoGko9DE+9XuFbL4EWIUIsr+Wh[D,hgLM6\,'Ac,SK/9%FH&ZFF't=1!@ht?4(iZ#PN$B7Oq>)Lh%>em4fel;(=LYiZnek^%T![n8[[4>_mEXI[858`_(nDaN*Dd[Z;aOi&sZT#cgR1V:*S`X%(X+R[&KF_T>9sb!G*_p.6nbOL1r>i2D:8<T\\=,``)W!U-J\C5g+$uJUK\K#9\i2!Wu,f;S]-q/Vh?WCn(RDg85>&``9nee/5!mL%l4h=g/q)-O4]W&\q0>@rWcU&),Ap5eV[h2*VGeXu6V$poY*'(<fd8UG^X<BIF*G/KI19%,0HY/=H^!:ufc&^Ndd=Z"-']OXC\$.m%J2J%-o`BuCn(&bHliV3cH*m0MRQMAbE#!)E;!lW?=]VfZ6l0LPUlMRgLF"$p`+;s9I,]la/Ge5adlha!8lM)DL-;X=%(F#d;7WSH%9#GTZa74+'7<*'WI_&$VgN6L&Q0baQU'?R7CEC*7\;$O]0D9Ms%M&oYH6/\oR@<lI8acpbU'[T0,s)d)ZrcKD!IZ3G8QMW+DP)uu%RRHi354qdR[;#&G\h!Jo%_Jh&9RYNDZA(A36oL#@LI<'2c-d7@5qN6<(_c3anat8h1QF4&SX6eZl=1n!l(LNMPk'gpGXK$;\<(sV%:?r"(%&_j<Yufa-DhI+f2nYNqdu9jUGWsukkGs"&IT.VsCFFs!qGS;BScI+5To_,GPmX6Y9(e]E_+"KTmY%[!H0XJV.U9.N*=,6I%L@qo;k2T1"^Gh`.rVpXr>bocGQYJ)/Vo43>ps<"@=bP5_U78p^Ab=4L$Dm12a5bb+mgc0*oPT8WUHk32=!diK<O`S]lB:I%!3p5e%,r)c#nujfS5D17ND\oJ;et<QXI*;aI$\HPNo<elh%]Sg>(/blpoM(L>CBeGTZ7Q=HL8(Dicb2>]6D5<'``$pF)@O&p`Ub^o>r?nV%'5F1TX%j)`@SSajcHt9\D&r/#YO/le/-P>FFLX>p"UcZ!a=2PTd;>4X0T,_M'lU!A\eKH03'Ht?md1mDJU^C#JZl[:f=X_A./d,=%c9N.eec$>%Z(/0X0ruQ^9e-t8><@7L#884-<(gu#`\qRf:9QdMZ3Pk-NZPa$O:p;4FKi6.%3P&mFRC1rLG$\?M<5`H@60Gd1:Bu@%@C"UrTL)tf7306km*jr=osMU<5F>Z\S"qZqnQXaM(MK\poKIN&9,0>c`&LsJ5-=H'[_b<8*:pR$Vt8<b[l@nmp#lGc!OBqcoL45o%^+OElg^-l&Z+jKs4'nCt+4iBL%8JFkQOp6>#r!Li(nf%Qn"C&m)$3BT"LUjEF!GXICX/I^gQ8C$E[,$=;cR83r<=Y5YXsR\&!.]f%l\B=o2dD2/)l`QYe^GKB8^#?57J[s6nZ.QbUPk?4Z*V%-I\X.g^`Nb#Tuc6aIZJ\i\gno2ZALoC:%,K@hPRqFWN3$D8[N56&\adu%8lZ<=mIQnY-b[!&MlsUF$(g+U7XII0QAil$YWZl+bH:rOiafhoE)gMakilh3\)qKN/7NNu\1QIhEnpPd]M;GdU08-dDYS1:r6H*Y%:XtfEPGO-YDq]QSHd3m.W\K`Z!su7N0EDm<-VmWXZ"JKb46E.TlCTX53-#Yb`M?)*J-Ykh9:iJTFVV.o>m8EY#&4A[*2XV.g@0c"%@jg)!UgNTooKLZRLtZ<8SA['0:9-cPX0nRN^IkU`=h7U&i,hOsmIK<QVl$W?$qoGOm+,J/F$/<dq8@A[LVR)El,_%mS6n.K5H0Wi%2&1_pqall_lX&i(mGX6V6".++V..jjTa&EUR?K'3CPCN#r/b-(cfi9V^-&OgbQre';!9<eeFuktm0eM5L"*m>&m;S0]%&=/$GS0b%$X=(X!(\"Zh$H%_+OLp(afau*3ZN@%=q4-21KAS--G;eu7>H_Q#FtZ0rgejO?$.W>hC8>pQFOD"92ke_ht3\YSlN%5KTssjqNjF<%A<P^:W-aPaV*SF7@&Y:+.J,p/$]fo[Xcl;sn3H*5*P8Bu?1C11$fi]:%k.RO2t7cR*qIlr8Hk%&;AL-X#o9sZi)u?<KH%=s6mrS&%3X+?!r;e(]!2p!=SNco'FU$h9JHt:K<HmZGZH8@1GT@dAG'D.RkHP=XI][.:j7BEU)"UlD?Mu.UA3*8bZ,E+j(7$@^;.;)sP)11C%UKe1m"[\,mnq'GF9"k`M'0D2877hKf9GS&H*[Zeo<`"oYje7i1gaJ#6`'%BJpS#QVZfdi\l*->-KKg9g_V(/g+;]P5"AEdSMcUZ2%r,Y'*4]l$28s2okYtp/[Wf\"e9jf2X81`4]Sb0Hu!J\\P2-,n>]'QRA-'jj%7s7[mlXFE+,Y_KW`&m.;a>TrLbtg^t30WV/9p!sY%D)9Ra,qU\BjffJ4fXq'%B/?_U)Z!2S6_D\_DqW:K#<p'be.2;U&h;2@jYbebWcallG?ts4"nq5D"s;8Ljt>K9Z53]36IcMrkD0%O%,nR6ioi\>Idf-`e0*VlP94SOLMkO&oF;EZ(CH%02Ma&Ek(X]L6MFo;I:-<M\hqcYQN<3Al[=1UfW;G"0h,mVU#uJ:R]6efeEChXh%&([h<g'$tn=9]d>l)-YXlh0q_lqdCT<Dp6QPR!j1/D;!tO'`)._q)Y>V6k=E0=%io!auutP(E9J/-ckQ@K>*O/6?8?!AoQpH\>dM%C`HI2PRc*4rffWg"N%p1e(@$_GXu1@J9j$$@D,Z(R="d)WHkV<_;a&3&I<'=0CKfQL8[i9FaOVpZ>6u>AD1;fSe.[&%^%%D5cc.]%@Qa3t"(HY1*4`emU+fI<p$c85L1:HKQmkFV8$amX[:JM[P=I9#+T%W21/^ag;PrMs4`Z>ir%JGn+%T4R/!?ZMV`P>,5?Z3"0\sAT%bTQ!b<K0\hi7C]+hb6s`e<Q%5PtUcHX:`%P?UpuqiWtgd@\BYV?7E1K&HAe[61(=["US)Q<eYD>jhE58UmnBH+t-KNgPYr-d*d+I%in:#5RnDU=#rR*/Dk]knW/48CeJ77a3@=6>Y\h"b<1q?=h]pq0g`:68=OfM_^0/R/DqAq'3]`=i;An#SG<1I2IF#&]*eb'5S=6mr%P!!9jbk!B&=@fR0Du6D(G($dn1o(\=LK_CU[of83o(\..gUBTreluU<EISNPYgWsc:fOdsPb2A#l,->Jg2Z(Y`>PHgWmN+B8%q1T%A(-6*"@iKb?UOC>@(*0aO<':[UGXMcAJ7_+$6LO-iQJU_18lTNkV2Q_5[NG?Y0Vg=,-Tcn1$O0\+S)"K>8Cip@@@q[.TMUD,`>bU%atQr8$(RO[2+_d@bAo"l-duL+XujKtYClG&M4#4DC!cj'4`e:MV'Hm>3E:W_nX[19\k4VYc$U.dqBj=\XO8c=N_9']p=pA/NkO2,%U/o3#.,s61T-Sq,,+UbH\h`lCakVt$5*a8jehC8&j-pna<Afm%:D0dSa\k,!N38Z9F`\Pn38k(OYuC1<jJnZ9]gWj=9jsc:KXu;(%:^)%WlaD,jd8mP.IFX1L^DU7gD5mZCCtFlPS%"''nkGZtYlpG%l.R8X7K-AE<f,?Le'kVWQ8ZW>]m*:0e<C!go;&7F>TTWVh?N`'%OcM&,QhJjt4nWI`jJW^\,8T"I`'Q32]']7Zl?Bn)ONis2+K:'91*XLg&3\F\Y]gb<H/GQ1e>H4qi%_1B]-RpJ^Db4*GH8\c">/.-%R?^/[m]KAi%Yl32K!FL)!Wo1AlKM)a@Gu*e?YXL@g=m6kpX("b"rORQRZuK-U%Sd*.e7nRdgDuqqpjW'icp`0GE_8W/`@Xi87g'W%-$kfde>-aX/c_g_p"_MFEjJmN7t0NtG&U""X&[Q).\gj<^kTs^E,F$WMX/k`<21u.qBUbj>Fp&s?2(TYC3g7!SW4io4$$"M&g&5"%<H6ZiQW)sME\Db/5lu<,`Oj`%-2+LfV*%h<$hcUhb&bB)+_8hr4UVJ;QT\7^I6#@u,km]503I<\f\A(^f=e7NA;D!N^V)ftK]Hn3%4uPl8dt-K[KXT5E]R-h:\1t");GS_`Yg21l-)^14%QES=IeD\Hk3f)l7Eq-S$`Mn3ONJ)uckBSS1KDcLJB;HSaXVUrV*Ju?ZF,E#%+_(B#BrajWdk@:mA2g-_ZA>QjO8IQd@Vk*<8m9uWMXX&(@%IQR%jI?HA$10U%fo[9<P#VMG>n:Jg"9#N@FfnADG%Z@XJV#!#*<Im%R\mDF9f1KgET$+-A>=OrAX6<G4/mZN(&7U%W^Vf"M9+RR_V!*5Z)=#AEG;ZCCi]_G>e.8&o*KWoeh3lfjmC;YEO90'dGqMM"Yt&C%^naP?YO:ucK2P(^^8:E),;t`rMmTfALh,F^!R@uQ,Z.PeegQpHkUIciMcjep2=1(g<Jp`j,`Qa`>=Ffa`l<g=522U>GDQ+BdeSRD%`kVX1+>RII1Xeki0!4S=\b55HmnG#JeI1-sq1Q<R5W#rn^0tnPQM_]`RCk?`O'e*KN3\ErlB,?g2$i6=`-E_;iJE^;\6jV+,,'<c%*\nGarc'%7M`4"FDQ3@*6(+Vm..aW.=PUaLisg%;ZiXC=cs[$:9@[l!=3"2a-ja5rfUk\gHIJj!NAl)"!8S.hQfRV@N$bB&E=:im%<k"t)]_,4?H/jaR"P\\*5Q#\(O1^d28'Q(C?1m%H9A"YQ0G+W/7k/+&a/$u'?N#+)<2ON5H;jF0&="OM]j(o\6C-4=Vn>Q!(`3Q(%,%ag#o;@.f!Z_4Z36F?V#f^.fgZG[@&k(:;m?VpVBq-rMkfcm--6)$%J<'<h;mIEA%!LA$3aIs/3ab=1ZE).D&,gCWHn*JRNiDp6%1uoE$=K/A;M-k.STpD<f6;1UQI/D%H/"n/D1a<-\Jk#K/eP/q&+3/L)Cl)h+:Y!>Zfd`!I#9='6RtTX1M.`0i7u]"aBCXZ[Q+!^X%`*_l6TFOs[pC(nF@Md2^b/+u^40O_BcknGs^1nrY')\7'Yi!(*/lH#G+$_GWr6=mio)mL9lI:q;g@-Z-=YA*1N1iRDr7*9;3.r]i%CsbZU>X98CS#a1_h5(faVeQsF'jA<f:][g_C3H]sfEA%r^AXeUN0e,R.V5T]r-e*^-A]pUd:p\kWR]WHb9:Wc,0hh0R_j;[L6goe%rLa]L,#>IJaSHCp!oGDOjs$'QbM^AU$jds("!dJ";FtgGcj]mg(\!p*1]D',O^3as_@iL2VUogs4s2C,a3X2meU"s'EB3ko=r>oO%l6a+,#p/8XF;hK)mRL9#.sd!5E0BrS<VNI[F&e)r:NT\eV5[#8/9.IZ*F>27m":&rPO^$JdA?!M'S&7A,mXVD4.V]gVALnJ`<Ro+%'2`4^&VA*(G",+S-hE=!\#bG_K1<INeG\=%<;l5K]Uq?U;6l+O&<CpJksK.hj'iG4II#K55MIIe`GN5g5_Z?nk;_"?H!?VsB5:c$%f$$3W=O;=_ZC9Z=C$>sT9tjuEkc/4@r8dDWOirj5W7i[p3sCgrOIS[>3(`$0/",`=n'jYqWpj@q,tVQT20s%a,rT@n=5"m0MkHm$%a*,*6S%l<h7@5mYKfjp4Sa>A+iSnKr1QH1tC/>SSZ;m0ulI*T&QG:.)1L>isfb_lM,2TeR1G\"9p5eW=X'h-'PbXaR#f*FA=XR6j%XeO=:;Y(im(;j1p<Jtt@BbXQ<Bj2:#W`j]hS]6X0W]B.02YK246>(G$ZI:@#PUZi"PGm(bTeVjL.7Z5Tjh')D:^(qOl3]ug7j9g,%7@$h'>7"5DWnLT2['lfKd\Hs%PnQZ(8`#2fCfRgM^Bnr7[&sB7?pZPI].-`bIT:Zkqqs;A3n-R!D/Ouk[YgB=,8ZmS^nFqCT_P2:%`Qr1^Fm%9qY?nTYe?l+DW\CJWASEVe*CeM\57osURkjnEWsfN!Q'W;_<CS.']*"C4CR)@_ThE/$GkaobSs0t*@cMCC9h%uQYClG.%>C7m`O(QROZl7g8+a1HV<W10Z;3^_d<K^_A*us'bq<R?H<&e$X8*Jdk,/C4_aY1uao-h)8Xr6EAhU\fo_JiG)@a_C.*,gEr'h@qT%Q^SJ^X-E`)/+-86E0]*/C?]ko*qtUV0-E`i*!>Z<rOTs:IAM^1WsC5<O$c7Se+jU'2.HW-GjMFacgmZeUV*(-GKpglC"DN$Tl@F%%.QjBm+&1aC.d].(BnCa[,m@2Sg=eLE:Af,'^'W/Y5i0Zu:dhaY-gkQERXq'&$R%:%5US]X(Q@h`oA51K:r#1!'0KH%I8q+Pg">?K%?N+1=LVu(A7T,LJX^XMq+ViS.*"X0d5BJ2TFWB=-CAjtoMhr]&lJ;RP2KR)KMiZ\E0(u/oc^oaM0]JS,^?0Midg"t9l^.b7!a!kq%9Zgpp2W'F"e1"oXgb_jK"[it860L<13*929N]/VA/PZ81gMf;J#d5"XUr^\WFX+r4aBTS`5un[/"TC#dB*bDnGDKpL*bgdnQ_I'I%h.#[[OrsV/Tn?EV"%#(GFeu&G#o%88i\qY_F3/t9GV])m4jBAEOg"0MAul>q_;Q%5;5s1m>jP$S]>I9hc.t5\1n>)eU5%b%$Q_/E%IH6NF"*9F,8l(sN53Q/keRm;Ea?Vo@[XD0K-ZAs&)6r+6a+EL1/C'sfc->3&5qA,`WG_a#Ak-[P6-H"94$cDDNeHbgOa7(r;IqbN%k>^:G2!Wl!R#<r>eI[d>o4QP]0Lk>8g&_u(5e/PiToB/BDqm$/P4Gm:"@QI-/bej6<[EjWWQfj'4_a2[jeSt/q^lOQg556.@=e*p%0#4jkXC)S7ZTSBe+J%%A"4bMF#O4&MUgH_SU2)BAVD>=leQ)^o5rl+S@KWOaP/%(h0rILW_nM,jK=&2^B850QSl8WneOD9p-0$=s%\8D)KToiE<p6u6TZ\ARbKoaml(R1TR+Ll/=`/?$.aeQKN8@(#Fh[J#p&#F)4eYChRk`ur,F"&Y4TZu"oMXmc7O'LV$?hUcgr8K2f%#1]AZ_r%9jb7JI%k!mmR,WVQm\QtUX$$+].@+$jkDio,R@YYDi)F)E<(:gh6P,4k<!m.dWQE*M^3NE]10pgWc4arZg4IE+Jr0T=Z%VITT.$SprPGfqmV4?@&LN+a(4Oqp6@,_RITe#Wmd(dSiW2bJZ1"O%'!Gh(.K(g0usF]u/C7!@/2V*fPF5@)G<Z7/6>Bdch*I6/6.%UXQ(D""Utb3i\;4S"]iJB3d;VV2i3X@$iD`hM(Xk$Qr(T2R'R0./g(rqUOoKU.n6r(Y(1o%T'#c+rcZ+S!-gHB:,-sf7<s$B8bAm%*sE<K1"g"VJE<6RGR,Z5dn'P&1mj%$c,$HbF^7at,8397LZD3W]FoO!r+p;jkt(0cdog!idED)29fqmnGeJ!pqr!Lh"mj(Eg2PoE%@0\<qWEXC0+AuK9:Dj`s_.uh;9LA2T<Bcs,!>@Udr^BFMY_ZK47qfCFjS,/+$=8dG\X^+Rg/,!@3Xs.q3(]0I&*;)9Lge40eYS':%6E!7]X?JC9C%Z=p1,X'ugX$Xik!2H\JA6lp9O>p6>Q`@)EYRk?(5%u=aAFT-WK*h5!Zo2"^@Z]AR8"(O#92ZLds<T1.9k9NT'M(3%&fZRi^UKW,9!8a,S(m6T#.NA],dY1a2:M^oB.S,bW(K?K\'\p6\>lD^!V2PGM)_gX)1RH(N<FtP\OlY+o+ol79YP#Z*PaATOas-o%.l+$->>tfuL7\"nVY,8MrR/)7_p=PsmPs2NnfkSekh(0GS$"lM)fW_ip*=<SUoN.]bWpSZR+pO9Z4]<L$:R6u-L^&-mS]tY:s,_,%TpAA1Y=g0(.%f*WdJ`?O\=?3ENB9?#F2)euB`"PhV]F65Bqgit3UG/:po0(\VPqEW14K8=YYLm0YoL"5omFAG<NjqWp+#+iYbq02%Buo[8464>_^c>\IEOq%5(LAs_AL.ZJLGUi6KY,itO3Bk;JWgoOkKojU`Dq5eL7\!SMAo&_?ftp"Gl=)F/g<c\+$.COM"W'e:ktr`%So:$%'SKu\hi:6L9c!Cc3fSEUM'&`ra,oIe*$>cRP=S\5;CK-/d^s]V1K!0Us-R&OQ^N*i2=8`G18aAeN9@PY.0FT!NH.3pb"Yf/%MkIYTTEA0iAM%.C[SK:tTYKf*q0^BHU(I7Yk>N_F_33Z0p?G@XhqAe,+$oQD--9qc`V6:cB<moPoB&\qV5cF4q2Egk7#J*MU>&ER%KoZgB+bJF$$2#FO37gtt:W=NEo&6f/>9$1V%aclqS-l2fHtF/q@S2dHpuXcR0h%F+KTV6?$]P"C>ZMCnG))=Eg&<F^bnSig7".UG%1s^8t@Y+9)l3]pf-C%+3>UH#"QQ2r`WnCh9@EE\Zi.fk.`_bcZZ=@7@TJSH$D9463+Ho]0`m0^V8V"J7Mp.C%S5hgoj2>`WHJP%&%JL5>PB(hBY5'D^Go<IhW<G=Y&/9<0<ZJ"uc?;==g2ad6H!)cFO.N#^dOu2"Y6\NGkM,?NGT@CZpKXZGTnda>\;p!58L?Cq`eds7?%GW$@o06rfHI"2Y,jDX=i=dFkH7mtR$g/IpVZH7bP[m-Z>OHT*B\`N?T(3TY!)R`A24.qUP7]Hcfe;Cff'<O'E',5Vq#s5u\UDOCg%YFI^@a+bs`AAB2,KPbC]pdm)s!YYn-94pJ[.GGV8'8X1[i?_Ht`fX44lqBLg!Q>dC,[W=0Ur!XS)^m)`S?19:*cFqIjX<`5f67j,%+uj`fWb2<k8@;"RTI?8E_j%OWa:p$qb^nc$<O7TZc8.!K6(,us=McC_lbj254I89k5A2>G-tJiA1f]=#_J.::6aClfhJR:1._t2p%B?L*.Vn#`+Ll1P\PM@E4Q0;3TWB3<cf_PnO#TVEDPY/[,KQ(uL3V"Gli@Y)#.0"ERiKfo(UdP>'@.`O@0>VGq6*t4QC?446($[t8%TJa>+:]sX^o3Z/N.qLeI!SJ-Gmu:5V>u/ViYos\D[M%'mga(t$VKADi4mGF?f+H\Q41iq'^Y\]K\0&29U",K,]#9[_a;M"Jn[#f(%BG&i<-&c1e<E;cX&/S@qRt/8dVNuHTH\NC/JdqhS:W=KBCNfjWRjmM##.lm9.dDhr7s9W0Ct2&s::T('%PLs4JnCa=W.YiQ+:_/4%<D4#P*=@h&"5n94Kc]n*e@G[?c7/ZPN+YaT`obfN<=4/0E_BisM[2#fo7r-_?B/LTdnh!KKe@CcZGFCo-aF]fX&-ilP*)G=#alsk%bbW%dEqqI`fhYk4b>Hlo[$k8q6EZ68^4`E20m83eb=tkt9cX[*B$t&9+hA-)@Hq;L#Arrt>"g8]Io[@j1R:Xe2Mh+mQ#g>L"qg<G%!ps4+3[AZ8lnXR,*pftOR[oekq'3h\j\_lL8l/ZE0\JjdHp/oW4]JolGhUj`Q/2SqEg/@:JWp:("od+;DSu$I0eI[\K@OFck4H]a%`.$*<<WbIGa!;m\okqsJ34eJnT3bVlnm^>FfH,Wq-ag;kL^M>^DluOV'5E>QaBEJtL1k6nWFDl"'<t&kN@PE\nJP2/:fkfGIBK7&%gkY"mmt4g0B!b[AV\u-lb^2'*8-A!YW.+7Sq@I4.,%*p?)o=Y+Alc%.+b<U,BKRZ51IYtYfe\1Gmj'#eok`5&%V+c@AV.TG5-2oR%/g!`7/pF2=QmZ&'OPADE@M(2i@H(b%\C?o_7b*NTX+A'cGoAQRQXAS1Y.Eq3qoqdbLkc.`ARW-C3,N4<\iV`]'\^g3I,[YQ/;ieW%<[;\/a*W6YWi'-]UFnVTC?Y!F`=p[76Hs2+$';:fE?CZ?4O9gUJU!(&`6t<Bh"@7EE"bVt218k7<,IIOTP\D%.P3B4I1&DWS@p+K%X4HR[3`s^='6KhR+_ZKXPJ@m408,>B.;Y)tFKY\(D'akfoFZ`F_GV<<I)O2XLA.sd3^PW*h>B$ZX/hpO=&<,N<;p$tro7/\k*AqD%;6/cE1M[9,i$lkVrsbqUT#eK>=Y)[9jJI^ZQOI7?o?5/;gH/pZJLo5'(Fapq!R*9nCU(")ilLC[7h-*lYs5&.Z+/]E=+gs+ZEc<d%V\MD!T2cK7[sK@#<[>I?4G<lAj#/l.:qZ2-[_l>W+S..@"'1>&r1mIHpC/AQ_.k79\#>8hj/R0'V1eDdQ2!u!?VMR+'OHEL+:XFs%G8N]@@ik"Y`T1d]9Jp>1[:p3]/#jI9`gkO]rOWQBC?q;36OC3E<KuPml+5X=1haBS9#DcL<`_;m-AkD.PQV/IOu@sfP`Cn^M$,Ca%f"i+@AW5?!FDj@>Uso7J,e"B`#s.$6*:)UfU/BJ$S%98m=IRrBl+nCV0tp"5;/ml;J$XmVX$n1UIrqf.Bi)_sISI<BF_Dh8G8Y$*%bdMV.-07<irstJmG*Z"g!72>+:s):j2$0$/%&*>kLC45_r)gL*V)^fBAE>HpU0q,"ZEs8ib^?j2FFr&Boh)0`.^b-6R1:6K7$Nen%7/*]H'c9Yp2<50<0:[.>D/^P:$66/2HR]h%(/]YP:IT1,Gt%9dib$>4dt8fS)DV4:F%-N#&p^G1\-nlbq1U4VN6#-Kq,AJEJ-.m@%3=bYA/AqcH<E1_=G]!EJ8XZ>L_9D!GOGC:>0m1iteg7j69@Q6Y+8<T3)laVi_3_3'T)mRm7Tksb<U$C&_#PrS7g0OVFme2Nq*7MD%RDHS[EU8eGPUB!e^Eb0dMd.\tfY#Kgosa"%0uZjY5HSPL'87U+2Ue#Ic8@V3MQt2&-:GG2Ajk@l62p_#+5[n&ck=o">gr]5%\5Xn%mkK!g(hTdQ:F\K6Z^&B]>UGT8NCcm4MDQ2=5X@fWBdu:S^\smIUJ#ejl.1Q4\:(1U\m5Aaq%nl1K$ff_'WYcAKsZ0-,m>9Q2G01Z%aIT8j!<d2Gq['I,I&N/)ZF)#J]%_Ii&$mQ4\n0Be,t0>=+dJQA73Ap<<I_NWg9,t0;f<+7_Vf$<f,((OjE?d7eZ#&I.^fhcoV==l%/^f7>7Yt.'%BF/&Ca%6^]/aaU1FWXc$52#n*7"16[9H$$Rq\mPFrO:DW+V$(WXCOQTe&p=%TP!@&c$%'fJ-'o+P+^`P8#\Cb%,Hk%*L!GO5&3O.,oL=_`?>n]4Z-C_+'sY,JIoLK-4lA;YMP&'at:DO-/ZCM!EBR%3c&t(eM*usO9EE!1*V]u`?a&HGPO<0`BpX+KbNk9%a8d8Oep8hR\+G*jOOG_H&NnkO<*(=>epC*0B0=:`Jn`_jZ=L)851BkDFOPSZL,rYI[A"XLgC?:rGV*V=>3LueX-./4F1I:R;5k1L%%6e^AF=fd-TA!3<>C+aAk<ctij>]pM-=!4FdGiuGJs*ugJQGNXJ$]3^R'iUdLqVmk!BDfkI!@c&'kZ="mLIB+\1$s/)OCNF9C+pe%gOt3'GQ*7eDm!p%`Rj'ocrf[0/D2jbZAeN%F_Kng66\f7[DqFWnHgU%.<,qt8eFoJQoN$-L"S!pO0_t[k:F#_AfgVO<o*j^0+VqT%CN%%0`_?(s5o1`[,U`*U,;+VKKpK8BZd@P(e!51Tn5OfRSVPFog;Jj8_qLeUa/Y!-V/)6\9/])u7J]n)1CM1$nDT6`moj;-(^RM0%ZX<4hZs*9!qbURs*C5$*%XArB0uK1%.cXqE>RcoMat3p0_9Y`$`-D6rGD)_i6RqAl4],PjGK\uf+\m#XPSTN>d$,<oi#'g`0@B+c%NuSXsn7"8e$)@L3*n;#7kldmapT)I=6(G5RUP=#r$@kk8>9&-/G_ZRm/jMYo83[hp./)\uXL537T'!j]cF`@EJK:JpY!f?kR$G"/%i3+s?PY<p2F2BC2G=-k3d"8FH0pk!JS+ADHVoQtlcgnPZ1!(TZWJ0K!gh2lR*gU19=f55YMRa:>.>BO=(2QjBq(csg4-_lDjbjD<%I!chF:HX#P&D(B89-hT]C69KlUgQ3R?s4s(/7/08Z%9"_6Jk6FM"2`o(HjMV%e%=,TM%8bU4@Fm2C,-JJd"o`BkYhRVk0OoZl/V!%>hClJ8NOp=4r%r=Sg]pMIQ'>pU<:Yd75eFR]d_2[PSJ*DRP\HUq$njU/"TV_DQ3@c,*%hA'Z(,iP1gg`d4ILaY(cX33esoSfao?8%$#k[7>;imfg,8O:L#s\EJI=mL-*J<)0M0+e[Tk"_2c<1*DUIt[4XQGoD<<V$;H5'0Ci)*l$rS)5N91t/#]DDZoARf%)_$<79E&ZT%?pHiT&k!iY\?!M`=agY;,\0pDj#[k+<RmOq094EM0%/*sL,5mj^D:].KLQ60.Jt]Y!9c/d;+cqgMQ\4r+@.=?GT70e4TZ4J@hs&o%p`Bu0(MO/6Qs5,jRi!4L#\d/W<P?b$3Y?&4^Ee.cNO`+!=Sg<Q\_P2QGfGXpA1=Q=/o?AO2,Z3_8r\aQ2Rm%=M><h4@<Vr8jr>r1%>GUlqmmkD/p_gpa6ZUQd]9`lZ+MQl(,2Gh%O?"XKW8)p_TVUhfoib0QC9=\P,/Q!VNI$6'c]cb5pVBTK7XlN9(E]OIV5+LI(oOeq%5;[sD(WCXU\h^d>8XCnG:K1ed-GHYa?<r2L+:Pud^78te+o=mnabQl-<LA0W7o]X5.uqZYl@l6<?t/+HRRA^N)Gt!.14<<W<?a8i%)JLh8>a;&-1*,X@*N^'f*s;:bP8aJ,GsS\32PfBX88:VrM4RoR][`;YoFASIlrMXL&k'EnC7ne2j";Zt&)^KKDj:b@DTclnNe]O(%6(g=g%QZHjUdK!o#dYfZ!H\Q+%<b[2b@_%<plr/MR$a6#6Y`W9jB/*pY$]3_E%S7&V]0^Pr>0%ef(mTD1Bbpd1B%A'YmE-3Qm]M8%glQj>>!>j5fVRu:%CQ;5f65_72gQ"=PLjCnMt<%kd8hG"9L_h>7Q!r"8\(alOL0IHQnG52+0DJt3_\kk+WZN-#!W3XC5A/k@TMNU%JS8aPae.!,#VCI*j&bhN`6['O#M)Joc\AqN#`@$U,a6GH.0*+L#SNt=NF[7?S.h<rlgg32c8I1j/oaTGfX.09.+kq"c`%XAUMKO?%,77],fHT*jbk,aS<`A)o."n*g?((79HCEam^qf(fRqaRXVcXeaU':C=SHf%/MM4-2*W#`Yne1<<TI);p$rI!@1.0^5$Q'\q,LSa0%<4QHF0lSZqk>[!QFVL<S=`"'qUk?XL'nsZ6-#f+Y>NVo-d)DLp>#+"qRPE6e)CM6uEfFWlm>sV&`k.j;YsleT!b,l4<>R]_^gUq+%(@dH$^9I@$#!,cW&o1k+o,7fX#__<cF7CtjVi:1eC4u(fdc>cr''#4me>t0(]6%SK"d@57Fg.=@aE#>rG1V2`Z-[eh79NT!%M#V=%lCqXpii)BqMPYd(c"QWqDN&QqZK!J>nUbP5`BrDsgMY*NMtFYVMCVU+$4\q-VG[MPg=/a8W=`MRj5W%l=!n/s-a?Zo(UZD+?=s,r%R/BqTp'\A=,c<D\:sDut#Yaeg9eR4iLYG<k:?bQalJbU>I&7a+^rYl"9B&P>dnu1TKdinnJUB;]NDseK.c8E`iZcf[2n)UK-8KNq%>.3oO78L#\a::T+p6uH!NB2\+LqA=X&N5XPA`__'L1`d%N]O<U092K(gIr9PN?li7cuLnDXsG7VVB%5=Ee.i>`LM+VGZLhL9Ee;+%^l96q@MCB$7%h!m%e$^B4b$@E[]E;d/LmY>^n#9W,%Ut^6(?NT1mV&0efSJnq?SEX"5X7F+VWTHRh8`CQ/eYt8tH.=LgECEHg*g#%I[5$\SU;nVQ&ekW,]CY75uq#hnnLp/!@"53(+DGE'rbpB1=X>V92W+.V+3+$-#jK2K*/>^+a%/HbQ59oP-q#GYoBCK&-E&AZ_V+-%3]IWf<^I9Cjtpt;W/-QuLbPR_Uo6g%+aLRh-1e(H.U%]R-]XdsGQdA,E@=@@8B)-kc";G:nW4UZ?;J?_4ViEb-5dd1nq!;a4Qq(c%M26&V*6MkU>@&7X4W)(5YhBN.BS5,a+5mN&Q":.?@Ke,EAI/q=$03V<m;].:NhPAE+`_@X<`cu=`^lLuoo@\',%]4c6C^b=Rj:)d%&IOp&K\/ai+[)H02PdK*^9!D@GoO`<XAFRJVH(nIi?];E9;4`grS<nXnjII@)t*H3TH66Q(:Q4RA>hP&gK5$nIulT8o-&>\kWKCd%`IuJomH9;YbMpThVLrQWe0W<BJ3dWqQ6,RK!*GsYC)u9/nqY1=cn^5=S'#\PF:W</AuqaPYngnl.69'1;/S0GetLuf+o[E<HRd^a%V<P.g;<O\C`K.V"4L=AE::?/?b-!p><0<_$D$2,"glGi9q5Z5m.1'frY9ukAlBW/->KJ++qA&mW:uAJgT`@0sP9Rl=0^R?)93lMY%ip__!hh?/s&W49Gi/[,)><?m67R!QU4Ia[oh;Xu;W]lCm_34]ZT!E43LkL@C@@lWXmj)ZPrIMYAO9goQjY+D,_H8(2@$i6EYram9%>U-sDg_\D`GR(XpNlmp:)0#XD)3a]#4aKk_6Zep82N(!D[Q?'8]cuH4cPNIk-;K)E59tae8TG*:=Nr<sf'bdr9=St"Y1Qd\Re1Ku%"9Z)1OcpA.<ualUU(iT[]>+RT;A425ek.lV;%V]%ib(%6a%FXIV.FBNj/76KhPM'nI"^c?l#s_!<J,KWTk"j/HIR2KhOGLT6C*=O%EQ*!pf:aed9GQ>PWo6`RN"Nmf$7@koMdiJ.#bV54'Ep?dLg=(KD>[E,l@[Z&?3u.b?@<4`5Uk:cE4-Bu"n7gh51bBIIGJs'[:DS/%S8=%V_C@F1SV>ge^D]o-Chb0\dGD>$99.Guo\,2ENlA:(DoV&k)"C&:LaWVlkmb<2`7Y9@5kPo]!E9O(o_<,=lF.&WgL;/OA6`(:%Kk$Lr*G*nq>'mE,cmG?tQ/Z`pB27X0U*c+?<^:3A#QnNG*G/fbYm5H"nP;a[^%timh$!f<buch,/"Q?`j-Q$TVSuZH,%PoK9BW#W%"B$E#&<Blc'_(i$8K_=!"!-;/VSk@iZ_qOJ;XJe5#=Q(6Yeb);$il<aZXO67;;>pf9>[H?D&fqUCWp*JninNR6A&nDHjlt58El_Z%Qa(iDg0"rrK\?$C<^#c'c:uaJj$IMg"<>f;](\H1KR['^U3I1K!MO8Oe`GI]L:?[$k@su;BhC4Kois?t=u\1VjtBF/e4\:%$ed&d%"2K:VbhYDE^bpiRUOcb3*&(43F8%H<=24%sCk^@dm[(ku;QW#N!X!V:^/W)H>4#:pLo+D]bN6>W-DTsD?n,reN0.,P<O?1?O!Mae%b*5o'2p]@:W_n+u8'A8I_>(0_<N1JlO964pkF4R+YuR"`brhH3c:ETo-_uXs-h+_jLtP!]2Jr]1F5TenJZNK\5T=amDh`#S8;YKD%%&[bkht=4bbZsXB.KG]NL*t)HEGL-'>+2ePIRLeG[T*l<)pAfk/t(3lK;uhabIK+->ITuWF@teB58:r%8)*$b<Mp8=;F>*:?\oZ@%:XS)Zg[j^<C;l4uYJbpdl?FDNAtVaf=HA*tJoE&5lJcG3r[J?;FWLRaj[jM:HT7mgl/uJufgH.0-i^JUo=,!+LI]On.lE\Thpc;.%.jfAsCK>kI1LsDtku/XG=&h/S_ES4TdR%qR,-!boY'qg.Ti"&2N78L`p#qJ`(!VF=ON@(f_i"K1USL9cO"t^-ap,;GVnh\WBX<2j%P<o:FOJPql-tQ&`gAFu]f0*"0/gBS.F/LJDY><C`%$acZEjEf31j=rQCKKN,ntjp1)fJ%d[6E-Sfkl*dD[*63(C>hO;!YJJD?X*f%MQ+ddj@QVn7ghnN=s/K05H.X*&"[nI3Q/,_1uQaiBld*E7;Wnl,mbhq)V&C.noKM:`LDi`;Q'.5ZigrITdj8O'9-?OPUWm[%YPn(%b.4!6:%WV9O#Q+kn>-[<,\<*E^?]2^96jY!Z\fuPZs.t$LeB-dPLD$W,J[[&XmL+CQ%O'Xq,781r3X)OAdcc,2g+Cp;Gq44RQAha%VB6Or(^5dio?NS6SplOpW?[MB[;3;ui?-d__Bcc3knb?CioOG`Uk7EgU_G(KS\B6FUbChp<<_Z)M*^^:M?8?oE?4!^&P<'ZPhf8p%6&B"s@g*Quk8@;%9<MgeTGm(.4Vb:B;Li(G*Q\Ji6SLsM7TIo[$jhduUJB1AWk'O[g?KjT%dN9JVD\$4'#Q^o;Tlb/c#$!(pj88i%`p$=q>egk%]8PgWX^j+.mQKD`jt8X5Mc6j,9:6m^Y:43E<>S:A6Y^XDriPqSToi1qA;(u,<A3q"S3'$&?on`OP4aj$*,l;<V4$+1%1Wdi%XZV/Z%k?%]c=1gjlW\`$K`m$E.?Y39eX!n?a[s>.P2Ct(Z(V9TZ`5!km:b^#f#*irrcln`HVrR>CQ0hFRI=HYh=opQWXl*#%3T7AO-Ff.d(-%jJd8bnfhO=1>!T)mje/g6^W"i=X!`e8#)n:2kO<&-)"Q;.Sfr=2eNXboo3Hr@))>]7S'Y:]JgbJ"m2GXcJK-Hls%p:)U=1#OZ\4'i\Zqo>3"grm\K*EqT!]$4Hh.(+W>k+S.MCMCOTGfG)4A_'(W?)om?]fC5`<5d,@VC3so"YG9C+^E>;@fWKq5c@KM%N:cg#S>m<(lFf(<FVbiPTGL0m_LeY`L=h[gY`MrRfufLqX$1.3<h4d`8@YX[HZNg)B:Z.9FF/0Y/?"(!QlpOl%^%k;n?\:9`/D.H%kmHMb]BJd^4ng]@FCC='Yk6L+RViL=Akrk>C-'W/890)>S3G-l2rUPRDqag"Mmb<FRLgd&n$/V/nq*]uZ\c5VQ+JJl`#b3GZ@j<"%>jgJ&O#k0q%i5X*TMK+H$][+nZ1K?>(V4EA2["qdYrE5Vi$d,s'c*e)VlDeJAP(TKEq%%Z,-1@AY4G]*oUU;`Y>)Qtn(O!CrfCB#%OcsmXi6W\SHWCsX9hcmM#nNH4HJM+OS\2)M5S%00HhMY<Yr6(65%3_*rN]^gi&?'<&lMWqZ`EB\XZ=.-;W0kUiZ!D!*>$Ia+jte]%op%m5ik7V<XqJ,7]c@\aD)Br-WYMQN!tQ9gD<1WlD3oP.(28Mnp3>2"bi.Z@=_Y'sUO7q.Q`-hc?^,B`^!<<D.uP=%T3scJ,q4Ht%%>Bf##[FE%U,>A7*E:d3i[4'"64-!'_;e72Irils%S@n&'LuiZ/e=Zh;SU1t*3)[CrMI16)`Ya<pUi\,b".r`JK2Yh9mb4?Mq9\m%obf:^#X]?:HZk+fSn(hu8mHX<dSp3@P/%(d):J_t<coDu.ZF.D_'i,+S:Xh"i\?M"WY$&HbG2*s7HeD;0R]A--^lKXcHd]",Qb3C%&HpeFmj;1m,/F?4?9p]'3tB?1"nRMSJ\P;4J@tMt^hY1kfXMmn.+]6*MVEMARhcTJ>ZmRG*\D9+2a`"J_AV0/UVn-Eb_#,s#jIEL%L>mZ\DYOrXXYmLi\qe-CCN:&-alXa>imo9t(9KmB;4)Q1UHh'"4_=_]h\-GKSf/N7<n#5H>\Hhd3WZ1:jAqbJ!S')f=]Jr<;@uHj%RMiahUkdide^;agC@W4c?EjNiNTU%lg78uQ,I+-q!(#.76A-Rj;kWurc@em,4IQ=F@-YoKP`+'[=%B@%oit5-EncH6%IZ.cheXiQ%<uM5B^Y0EMX$T$jK;D+oE7]B[]C]7;]$0"K4^!O7bs39SXCj8@J<\rgfCP_F3b63@99>mXknY2]4IY+.UirbZ)?_A""bu5%9nS62%Kg\X6CX9sB^XMl_k>cGOOb;DC)7A8_XK&WoE=G^ZEp[stW3S1tA#KYf.u*<u!,/`U#;0@Ql3Whj.7j6pk!8,i9/`7)jq:fr@C]0m%49U93UE6c[i%qNOK;Pu:+S)66$%_d)9r)g0)LF*V=:Y@-Uuo4$+@L@,89``c_AeV1&2qB=$l(tkgSFGo".,9hVSnSP>4i0Y$ro)K%^FHgn/4pZo?Z0WKd1eI8l_V5&!*L2RTH`TSWC18ZHb@N;j@<hckZmJ9fM<.><cObpC.t%U3^rdaePJ0O@3NTZblDrXTeX]aBEC.g%9?^[)B)lBoKG3Q+c2aR&e_"`7ScG>FH;%l!8YN7"IJMjWRX-H'GQL9tD0hV71]cY;M?PkG>^6i2ETsV0hp2ac0"2Yf\Jg"6WfodH%\SB(MF]P.^l9-gMnhQSUZ4WZ0!]_u\o,Ikfr+#il20P43@C:7tCIBh-`-qFp[[sX-q39(+:G%a:=-?EgHf\<%EA,4^5GdEjd\l0R%QILj$-'(:q;_8otn7_!b>,qIZ`MWj+#bJsc+)fjA;[OUNOd9jJ$GLeWf%gCe/mGm&ePO3GLPYI:]BZ_RNU<H?id8bba!5Sp%C8>8%!ViJQI,j+aV?UPq2sU04Vlm1B81@uG_Y(%Y^SSmAB2dKfVV'%jC>DW^l^FGGXhdot<W_p?a7L=A]%2!flWV&;no(s-57**^eN'br%BnTXj8rs\,fYqI-+CbaoeohJL:V3r9AD!e+qQA@IV0n@UFj9:\SBt8_TQa*Fh9OFf]'VhId0a+=9fb!9:1M::GAC:C7T`P)lt10-%r)g-/\5r]!#]WFuXZ&t#qP^eO\^L^b\c%o0nCIs>J>]qr]S51BP,DFDY)7)]Pa2e-pXZ_1M;V]:)BepbiFPTW!t5uL]8nnq4g!mR%FaaX17`[GNl;NLf:-jp2gF+>5G*^F-E*V'bmc8nI8l25N6E1mUoOgGGA@dDg;^osXS/V8#j%XT8Z:V]b#n'1ELcJH8g.9TlC1ae&%:W+bI[(1os12@&AioH?b8E[*87oud&XC$13)a&DQ&9J%tk9BD]#i;Oj1*]H*'^M;rca`,'HF^HH(nj=LqK7^*Lnlga?R.(^VoPJW%c!>2Y\*tYCs'Ql%4XjiZCJVW[8"Se>:u_%-jlN@3B&RSX.$?Re5f:'*h?*R?*A>ATEC%UoBm"2dB@VfA7'(FgUd`t(@mRs[*,c2#%A^V2S(+O/)beP2JPK!rOY^2?hmAZG+EbG"?mGu'OMYr=F>qN`%S&m-3>[WuK9A4^?E`#G`+O7Y\9c$7B7P*F"Vt]#:Uj#UX:$$2g%\\1b4T`.E5@nB(A'\e^fIqqc,OFf$gaLrHd`>0o]4Q_H9.V]u1Ti,jppG-Eh%Cc#A*cKbRd)uh%rOS$J32GZl[*$"?k>lWLI!]p]%A*9Wk:iSdT:i=Nl9r]LN[E@S:DNXUQ<EA,GRN#L`l".`njq6[8)5#phc1#u,S3#o#a4%4Xd!YQtYr`=3<)]Q_<2Z'S`KesA>lJJ0%mE_YK`_1C<""M0HO2n&CD%JGcU".Zggd`g-`AR=JJQgmmRk9_5+8=pIa!#@8BeZ>B+Kp\dJcV_:k=1nHU^==nHTGB<7Q(3$#NWS/%fYHLakgs+q,4,p<bGmMrgdgck$:OZ":2[9TM#4\@pP_G!]_JoX'fKG+;(\ba0k#Pe$$63_hRfT'].6*;K@h=s#S%!SKYpX?#q[(I%<lV1VHH%ZfW\G-3WTu_9mJY9aW`N\kZW\<>HJ;B!7FHH0+[)Zt6SAg<Vn\gtphgku5UJYd*Lg$;`o>"_0!isgQBL.uO`2=p?*FW-%H%m\'q00;c(B71dOi?,l",3a(oaRIC;o^(=+BLBH.?$:cgFlT%djCCsFIkOBDb^(mk@>JoD"D5*4OfRh9*,sXn5i+W7S4*b_Ws6q%`4-J4=a-?"`I!gJi)PD$3Zc7lJ);hWVlEgSa9W^ZS*COo6/meN$1U:cZ;\f"XRO9B2Vf,ArmJph?]'.g9pl#m9q#"1dQ1GY)m*N>%Xhs2c;UPgP&ak)&>?!N_lKE7ZVYGUA25DfZG6Z1GABTSbMTZ33E,G#JPr*c1'N\-oHb=(@*N`^e.NZ""nCYhU7[Qr97,2C<+9:r*%5))-;+`^"SbiO3BetW$Bm;O\U\u#jDD;4\DQM9kP&'@-eo,Mbl8%"A)HUgp5iUO'B?SO$.3P:bZiR>cr6IUpo_bS$M<ER[f+MYM>%8?<@kL?^[FkOG]LGEjW0d_)(107;B/'W\rZW>Om3@1,j!]4V+I^d5fWMM_rAA%K.KY4UG*!Ws\gjpOPN&TCbs?[u8WAs$Aa]2u8*%l7WS:KJce0l(MgLhqRe%0\$ka.jd3)f:R5A/E!>+B[SR>U-NF/O)nL78Wf.teC;/tO/P'\XUQT!ds!B8Eqk3hC<E.bA65Vb$!-bn%<2HE/H:76\FFqQF2UrPR3s+X\d:BA.lS9bpNUIHK7L_@+mP!*Hq+Y[W\CnKa%,%0F2VhAe2;c*FeiZjRU,^7Y^$ZH/O4l+b`/37I%foi7:^:!A,WLqcHeW"+?HodBEF9OrY"VSp/=pCCnP4?r=NL3JkdYV,(`T.BFnp.l`nQan"O6B:aCol'E5GC*0Y-+NahBRV2!2WZ$%n`SP!,nDW?pda]5hP+rXbOb%qE>5*DAL.9.U<`[Zc#GiADKM<@?Msb\.Mi,RPc;W"M$@f?.7qU/6BZF=#HN0-?!f5n,:D[2Zl!`3%X/9N-"B8"]>6)F117mT\*cfn$q<?`D?Vs_VAP%ZT;9W>>Q`.!kFT_fm8`ll!2<E:#)hC&K1I[b^O#LqT?"76)#b,0F?VRB^A.AQp%HkB$=[E9\>#/8*H\C[k!B@L]iqohp@!YS6^W3*oU5B"V'6^P4]mR#3O=f`5dljbAAPRDI`YjZrs9h`f@>98]'=\W]ChW`mkkAUtl%ol="13)&0"7NpHWmiP+-1A,4l-M%_^.uCaA[M0YDI(';!79D)`q7l1GjtfifPdL#A?&QJPc:.Im26Em9$AorPd&5(A&TdDESm#)6%=c0DG;]hH3TF7($CG(J@Gh8g"Z_2o_FQsS4#Gl'=ZT%(Jkgk4r;7LCjEg^MgSAV!P_*km6R9ah,kmW_+ELMMJEp5W.YY(c#7;kbi%aEbKWq0QaRYYR8a'hc#.RoC:ZWY<pI79?u/=@/?e"u'JP-YB:OKfZ"\QMoZLCs:'sMSNI$mrY'Rf.)P,NG3LlRBmspY=duI]:+-:%[ZfQBU:sqfWs#(IBh:*cLF:gF2Q2cfPE.ZirSC,1*kEmj1AjL03N4FlVX*h)aY>+'-8<bL<foV;j]&`n7H0H(96.l(><JTh_U^F,%,%b*Z>,CsS/bWnfAu&qqXF6gRX`]C>>%h7l0ja&5<I,PC9N%9eM8$@miuG`"JT8uO*br2LcG?+YggAGNE#jTf'MLI;K6&!b'!jS@%?J)TZX/5tkMDa'Dn(.s?5S$i^gW-oQs-=W.q,`i&q2qB7j\:W,V..I-cRFbA-:;cgn@@<Q?GIt-m^.Ft7`d=:_sk>ANcG8ar6J1.%-lHY1f7(AHo'ZkQ8U#R.c^C%?#bN3,PogR0T+WYmRcH(#O'hnUTDll\pZK<hqg\P;Q[eqrJ,82ts4bT/]cR,JfDkfT5Q8q-nF;#,%a'X;mT7?[S^\_C8J,0]UoUgX1j+$sTT0GPiq84<RpHSYpTDm/$s7%0QJ,8ais6q[kr4i:(n]-.UVgn]h+91o0s*FX1O+6rrTDmq*%s8;%EIJh9<q<.d5-eD/>TE!j\s5AJ)?[hg#!CH3W6i~>%AI9_PrivateDataEnd